{
  "version": 3,
  "sources": ["../../src/server.ts", "../../src/services/config.ts", "../../src/utils/log.ts", "../../src/api/middleware.ts", "../../src/utils/request.ts", "../../src/api/routes.ts", "../../src/services/llm.ts", "../../src/services/provider.ts", "../../src/transformer/anthropic.transformer.ts", "../../src/transformer/gemini.transformer.ts", "../../src/transformer/gemini-pro.transformer.ts", "../../src/transformer/deepseek.transformer.ts", "../../src/transformer/tooluse.transformer.ts", "../../src/transformer/openrouter.transformer.ts", "../../src/transformer/openai.transformer.ts", "../../src/utils/tool-cleaner.ts", "../../src/transformer/newapi.transformer.ts", "../../src/transformer/gemini-native.transformer.ts", "../../src/transformer/zjcspace-pro.transformer.ts", "../../src/transformer/zjcspace.transformer.ts", "../../src/transformer/index.ts", "../../src/services/transformer.ts", "../../src/services/request-merger.ts"],
  "sourcesContent": ["import Fastify, {\n  FastifyInstance,\n  FastifyReply,\n  FastifyRequest,\n  FastifyPluginAsync,\n  FastifyPluginCallback,\n  FastifyPluginOptions,\n  FastifyRegisterOptions,\n  preHandlerHookHandler,\n  onRequestHookHandler,\n  preParsingHookHandler,\n  preValidationHookHandler,\n  preSerializationHookHandler,\n  onSendHookHandler,\n  onResponseHookHandler,\n  onTimeoutHookHandler,\n  onErrorHookHandler,\n  onRouteHookHandler,\n  onRegisterHookHandler,\n  onReadyHookHandler,\n  onListenHookHandler,\n  onCloseHookHandler,\n} from \"fastify\";\nimport cors from \"@fastify/cors\";\nimport { ConfigService, AppConfig } from \"./services/config\";\nimport { log } from \"./utils/log\";\nimport { errorHandler } from \"./api/middleware\";\nimport { registerApiRoutes } from \"./api/routes\";\nimport { LLMService } from \"./services/llm\";\nimport { ProviderService } from \"./services/provider\";\nimport { TransformerService } from \"./services/transformer\";\nimport { RequestMergerService } from \"./services/request-merger\";\n\n// Extend FastifyRequest to include custom properties\ndeclare module \"fastify\" {\n  interface FastifyRequest {\n    provider?: string;\n  }\n  interface FastifyInstance {\n    _server?: Server;\n  }\n}\n\ninterface ServerOptions {\n  initialConfig?: AppConfig;\n}\n\n// Application factory\nfunction createApp(): FastifyInstance {\n  const fastify = Fastify({});\n\n  // Register error handler\n  fastify.setErrorHandler(errorHandler);\n\n  // Register CORS\n  fastify.register(cors);\n  return fastify;\n}\n\n// Server class\nclass Server {\n  private app: FastifyInstance;\n  configService: ConfigService;\n  llmService: LLMService;\n  providerService: ProviderService;\n  transformerService: TransformerService;\n  requestMergerService: RequestMergerService;\n\n  constructor(options: ServerOptions = {}) {\n    this.configService = new ConfigService(options);\n    this.providerService = new ProviderService(this.configService);\n    this.llmService = new LLMService(this.providerService);\n    this.transformerService = new TransformerService(this.configService);\n    this.requestMergerService = new RequestMergerService();\n    this.app = createApp();\n  }\n\n  // Type-safe register method using Fastify native types\n  async register<Options extends FastifyPluginOptions = FastifyPluginOptions>(\n    plugin: FastifyPluginAsync<Options> | FastifyPluginCallback<Options>,\n    options?: FastifyRegisterOptions<Options>\n  ): Promise<void> {\n    await (this.app as any).register(plugin, options);\n  }\n\n  // Type-safe addHook method with Fastify native types\n  addHook(hookName: \"onRequest\", hookFunction: onRequestHookHandler): void;\n  addHook(hookName: \"preParsing\", hookFunction: preParsingHookHandler): void;\n  addHook(\n    hookName: \"preValidation\",\n    hookFunction: preValidationHookHandler\n  ): void;\n  addHook(hookName: \"preHandler\", hookFunction: preHandlerHookHandler): void;\n  addHook(\n    hookName: \"preSerialization\",\n    hookFunction: preSerializationHookHandler\n  ): void;\n  addHook(hookName: \"onSend\", hookFunction: onSendHookHandler): void;\n  addHook(hookName: \"onResponse\", hookFunction: onResponseHookHandler): void;\n  addHook(hookName: \"onTimeout\", hookFunction: onTimeoutHookHandler): void;\n  addHook(hookName: \"onError\", hookFunction: onErrorHookHandler): void;\n  addHook(hookName: \"onRoute\", hookFunction: onRouteHookHandler): void;\n  addHook(hookName: \"onRegister\", hookFunction: onRegisterHookHandler): void;\n  addHook(hookName: \"onReady\", hookFunction: onReadyHookHandler): void;\n  addHook(hookName: \"onListen\", hookFunction: onListenHookHandler): void;\n  addHook(hookName: \"onClose\", hookFunction: onCloseHookHandler): void;\n  public addHook(hookName: string, hookFunction: any): void {\n    this.app.addHook(hookName as any, hookFunction);\n  }\n\n  async start(): Promise<void> {\n    try {\n      this.app._server = this;\n\n      this.app.addHook(\n        \"preHandler\",\n        async (req: FastifyRequest, reply: FastifyReply) => {\n          try {\n            const body = req.body as any;\n            if (!body || !body.model) {\n              return reply\n                .code(400)\n                .send({ error: \"Missing model in request body\" });\n            }\n            const [provider, model] = body.model.split(\",\");\n            body.model = model;\n            req.provider = provider;\n            return;\n          } catch (err) {\n            req.log.error(\"Error in modelProviderMiddleware:\", err);\n            return reply.code(500).send({ error: \"Internal server error\" });\n          }\n        }\n      );\n\n      this.app.register(registerApiRoutes);\n\n      const address = await this.app.listen({\n        port: parseInt(this.configService.get(\"PORT\") || \"3000\", 10),\n        host: this.configService.get(\"HOST\") || \"127.0.0.1\",\n      });\n\n      log(`\uD83D\uDE80 LLMs API server listening on ${address}`);\n\n      const shutdown = async (signal: string) => {\n        log(`Received ${signal}, shutting down gracefully...`);\n        await this.app.close();\n        process.exit(0);\n      };\n\n      process.on(\"SIGINT\", () => shutdown(\"SIGINT\"));\n      process.on(\"SIGTERM\", () => shutdown(\"SIGTERM\"));\n    } catch (error) {\n      log(`Error starting server: ${error}`);\n      process.exit(1);\n    }\n  }\n}\n\n// Export for external use\nexport default Server;\n", "import { readFileSync, existsSync } from \"fs\";\nimport { join } from \"path\";\nimport { config } from \"dotenv\";\n\nconst projectRoot = join(__dirname, \"..\", \"..\", \"..\");\n\nexport interface ConfigOptions {\n  envPath?: string;\n  jsonPath?: string;\n  useEnvFile?: boolean;\n  useJsonFile?: boolean;\n  useEnvironmentVariables?: boolean;\n  initialConfig?: AppConfig;\n}\n\nexport interface AppConfig {\n  [key: string]: any;\n}\n\nexport class ConfigService {\n  private config: AppConfig = {};\n  private options: ConfigOptions;\n\n  constructor(\n    options: ConfigOptions = {\n      jsonPath: \"./config.json\",\n    }\n  ) {\n    this.options = {\n      envPath: options.envPath || \".env\",\n      jsonPath: options.jsonPath,\n      useEnvFile: false,\n      useJsonFile: options.useJsonFile !== false,\n      useEnvironmentVariables: options.useEnvironmentVariables !== false,\n      ...options,\n    };\n\n    this.loadConfig();\n  }\n\n  private loadConfig(): void {\n    // Load initial config first if provided\n    if (this.options.initialConfig) {\n      this.config = { ...this.config, ...this.options.initialConfig };\n    }\n\n    if (this.options.useEnvFile) {\n      this.loadEnvConfig();\n    }\n    if (this.options.useJsonFile && this.options.jsonPath) {\n      this.loadJsonConfig();\n    }\n\n    // if (this.options.useEnvironmentVariables) {\n    //   this.loadEnvironmentVariables();\n    // }\n\n    if (this.config.LOG_FILE) {\n      process.env.LOG_FILE = this.config.LOG_FILE;\n    }\n    if (this.config.LOG) {\n      process.env.LOG = this.config.LOG;\n    }\n  }\n\n  private loadJsonConfig(): void {\n    if (!this.options.jsonPath) return;\n\n    const jsonPath = this.isAbsolutePath(this.options.jsonPath)\n      ? this.options.jsonPath\n      : join(projectRoot, this.options.jsonPath);\n\n    if (existsSync(jsonPath)) {\n      try {\n        const jsonContent = readFileSync(jsonPath, \"utf-8\");\n        const jsonConfig = JSON.parse(jsonContent);\n        this.config = { ...this.config, ...jsonConfig };\n        console.log(`Loaded JSON config from: ${jsonPath}`);\n      } catch (error) {\n        console.warn(`Failed to load JSON config from ${jsonPath}:`, error);\n      }\n    } else {\n      console.warn(`JSON config file not found: ${jsonPath}`);\n    }\n  }\n\n  private loadEnvConfig(): void {\n    const envPath = this.isAbsolutePath(this.options.envPath!)\n      ? this.options.envPath!\n      : join(projectRoot, this.options.envPath!);\n\n    if (existsSync(envPath)) {\n      try {\n        const result = config({ path: envPath });\n        if (result.parsed) {\n          this.config = {\n            ...this.config,\n            ...this.parseEnvConfig(result.parsed),\n          };\n        }\n      } catch (error) {\n        console.warn(`Failed to load .env config from ${envPath}:`, error);\n      }\n    }\n  }\n\n  private loadEnvironmentVariables(): void {\n    const envConfig = this.parseEnvConfig(process.env);\n    this.config = { ...this.config, ...envConfig };\n  }\n\n  private parseEnvConfig(\n    env: Record<string, string | undefined>\n  ): Partial<AppConfig> {\n    const parsed: Partial<AppConfig> = {};\n\n    Object.assign(parsed, env);\n\n    return parsed;\n  }\n\n  private isAbsolutePath(path: string): boolean {\n    return path.startsWith(\"/\") || path.includes(\":\");\n  }\n\n  public get<T = any>(key: keyof AppConfig): T | undefined;\n  public get<T = any>(key: keyof AppConfig, defaultValue: T): T;\n  public get<T = any>(key: keyof AppConfig, defaultValue?: T): T | undefined {\n    const value = this.config[key];\n    return value !== undefined ? (value as T) : defaultValue;\n  }\n\n  public getAll(): AppConfig {\n    return { ...this.config };\n  }\n\n  public getHttpsProxy(): string | undefined {\n    return (\n      this.get(\"HTTPS_PROXY\") ||\n      this.get(\"https_proxy\") ||\n      this.get(\"httpsProxy\") ||\n      this.get(\"PROXY_URL\")\n    );\n  }\n\n  public has(key: keyof AppConfig): boolean {\n    return this.config[key] !== undefined;\n  }\n\n  public set(key: keyof AppConfig, value: any): void {\n    this.config[key] = value;\n  }\n\n  public reload(): void {\n    this.config = {};\n    this.loadConfig();\n  }\n\n  public getConfigSummary(): string {\n    const summary: string[] = [];\n\n    if (this.options.initialConfig) {\n      summary.push(\"Initial Config\");\n    }\n\n    if (this.options.useJsonFile && this.options.jsonPath) {\n      summary.push(`JSON: ${this.options.jsonPath}`);\n    }\n\n    if (this.options.useEnvFile) {\n      summary.push(`ENV: ${this.options.envPath}`);\n    }\n\n    if (this.options.useEnvironmentVariables) {\n      summary.push(\"Environment Variables\");\n    }\n\n    return `Config sources: ${summary.join(\", \")}`;\n  }\n}\n", "import fs from \"node:fs\";\n\nexport function log(...args: any[]) {\n  console.log(...args);\n  // Check if logging is enabled via environment variable\n  const isLogEnabled = process.env.LOG === \"true\" || true;\n\n  if (!isLogEnabled) {\n    return;\n  }\n\n  const timestamp = new Date().toISOString();\n  const logMessage = `[${timestamp}] ${\n    Array.isArray(args)\n      ? args\n          .map((arg) =>\n            typeof arg === \"object\" ? JSON.stringify(arg) : String(arg)\n          )\n          .join(\" \")\n      : \"\"\n  }\\n`;\n\n  // Append to log file\n  const LOG_FILE = process.env.LOG_FILE || \"app.log\";\n  fs.appendFileSync(LOG_FILE, logMessage, \"utf8\");\n}\n", "import { FastifyRequest, FastifyReply } from \"fastify\";\n\nexport interface ApiError extends Error {\n  statusCode?: number;\n  code?: string;\n  type?: string;\n}\n\nexport function createApiError(\n  message: string,\n  statusCode: number = 500,\n  code: string = \"internal_error\",\n  type: string = \"api_error\"\n): ApiError {\n  const error = new Error(message) as ApiError;\n  error.statusCode = statusCode;\n  error.code = code;\n  error.type = type;\n  return error;\n}\n\nexport async function errorHandler(\n  error: ApiError,\n  request: FastifyRequest,\n  reply: FastifyReply\n) {\n  request.log.error(error);\n\n  const statusCode = error.statusCode || 500;\n  const response = {\n    error: {\n      message: error.message || \"Internal Server Error\",\n      type: error.type || \"api_error\",\n      code: error.code || \"internal_error\",\n    },\n  };\n\n  return reply.code(statusCode).send(response);\n}\n", "import { ProxyAgent } from \"undici\";\nimport { UnifiedChatRequest } from \"../types/llm\";\nimport { log } from \"./log\";\n\nexport function sendUnifiedRequest(\n  url: URL | string,\n  request: UnifiedChatRequest,\n  config: any\n): Promise<Response> {\n  const headers = new Headers({\n    \"Content-Type\": \"application/json\",\n  });\n  if (config.headers) {\n    Object.entries(config.headers).forEach(([key, value]) => {\n      headers.set(key, value as string);\n    });\n  }\n  let combinedSignal: AbortSignal;\n  const timeoutSignal = AbortSignal.timeout(config.TIMEOUT ?? 60 * 1000 * 60);\n\n  if (config.signal) {\n    const controller = new AbortController();\n    const abortHandler = () => controller.abort();\n    config.signal.addEventListener(\"abort\", abortHandler);\n    timeoutSignal.addEventListener(\"abort\", abortHandler);\n    combinedSignal = controller.signal;\n  } else {\n    combinedSignal = timeoutSignal;\n  }\n\n  const fetchOptions: RequestInit = {\n    method: \"POST\",\n    headers: headers,\n    body: JSON.stringify(request),\n    signal: combinedSignal,\n  };\n\n  if (config.httpsProxy) {\n    (fetchOptions as any).dispatcher = new ProxyAgent(\n      new URL(config.httpsProxy).toString()\n    );\n  }\n  // \u8BF7\u6C42\u65E5\u5FD7\u5DF2\u7B80\u5316\n  return fetch(typeof url === \"string\" ? url : url.toString(), fetchOptions);\n}\n", "import {\n  FastifyInstance,\n  FastifyPluginAsync,\n  FastifyRequest,\n  FastifyReply,\n} from \"fastify\";\nimport {\n  UnifiedChatRequest,\n  RegisterProviderRequest,\n  LLMProvider,\n} from \"@/types/llm\";\nimport { sendUnifiedRequest } from \"@/utils/request\";\nimport { createApiError } from \"./middleware\";\nimport { log } from \"../utils/log\";\n\nexport const registerApiRoutes: FastifyPluginAsync = async (\n  fastify: FastifyInstance\n) => {\n  // Health and info endpoints\n  fastify.get(\"/\", async (request, reply) => {\n    return { message: \"LLMs API\", version: \"1.0.0\" };\n  });\n\n  fastify.get(\"/health\", async (request, reply) => {\n    return { status: \"ok\", timestamp: new Date().toISOString() };\n  });\n\n  const transformersWithEndpoint =\n    fastify._server!.transformerService.getTransformersWithEndpoint();\n\n  for (const { name, transformer } of transformersWithEndpoint) {\n    if (transformer.endPoint) {\n      fastify.post(\n        transformer.endPoint,\n        async (req: FastifyRequest, reply: FastifyReply) => {\n          const body = req.body as any;\n          const providerNmae = req.provider!;\n          const provider =\n            fastify._server!.providerService.getProvider(providerNmae);\n          if (!provider) {\n            throw createApiError(\n              `Provider '${providerNmae}' not found`,\n              404,\n              \"provider_not_found\"\n            );\n          }\n          let requestBody = body;\n          let config = {};\n          if (typeof transformer.transformRequestOut === \"function\") {\n            const transformOut = transformer.transformRequestOut(\n              body as UnifiedChatRequest\n            );\n            if (transformOut.body) {\n              requestBody = transformOut.body;\n              config = transformOut.config || {};\n            } else {\n              requestBody = transformOut;\n            }\n          }\n          if (provider.transformer?.use?.length) {\n            for (const transformerName of provider.transformer.use) {\n              const transformer =\n                fastify._server!.transformerService.getTransformer(\n                  transformerName\n                );\n              if (\n                !transformer ||\n                typeof transformer.transformRequestIn !== \"function\"\n              ) {\n                continue;\n              }\n              const transformIn = transformer.transformRequestIn(\n                requestBody,\n                provider\n              );\n              if (transformIn.body) {\n                requestBody = transformIn.body;\n                config = { ...config, ...transformIn.config };\n              } else {\n                requestBody = transformIn;\n              }\n            }\n          }\n          if (provider.transformer?.[req.body.model]?.use?.length) {\n            for (const transformerName of provider.transformer[req.body.model]\n              .use) {\n              const transformer =\n                fastify._server!.transformerService.getTransformer(\n                  transformerName\n                );\n              if (\n                !transformer ||\n                typeof transformer.transformRequestIn !== \"function\"\n              ) {\n                continue;\n              }\n              requestBody = transformer.transformRequestIn(\n                requestBody,\n                provider\n              );\n            }\n          }\n          const url = config.url || new URL(provider.baseUrl);\n          const response = await sendUnifiedRequest(url, requestBody, {\n            httpsProxy: fastify._server!.configService.getHttpsProxy(),\n            ...config,\n            headers: {\n              Authorization: `Bearer ${provider.apiKey}`,\n              ...(config?.headers || {}),\n            },\n          });\n          if (!response.ok) {\n            const errorText = await response.text();\n            log(`Error response from ${url}: ${response.status} ${response.statusText}`);\n            throw createApiError(\n              `Error from provider: ${errorText}`,\n              response.status,\n              \"provider_response_error\"\n            );\n          }\n          let finalResponse = response;\n          if (provider.transformer?.use?.length) {\n            for (const transformerName of provider.transformer.use) {\n              const transformer =\n                fastify._server!.transformerService.getTransformer(\n                  transformerName\n                );\n              if (\n                !transformer ||\n                typeof transformer.transformResponseOut !== \"function\"\n              ) {\n                continue;\n              }\n              finalResponse = await transformer.transformResponseOut(\n                finalResponse\n              );\n            }\n          }\n          if (provider.transformer?.[req.body.model]?.use?.length) {\n            for (const transformerName of provider.transformer[req.body.model]\n              .use) {\n              const transformer =\n                fastify._server!.transformerService.getTransformer(\n                  transformerName\n                );\n              if (\n                !transformer ||\n                typeof transformer.transformResponseOut !== \"function\"\n              ) {\n                continue;\n              }\n              finalResponse = await transformer.transformResponseOut(\n                finalResponse\n              );\n            }\n          }\n          if (transformer.transformResponseIn) {\n            finalResponse = await transformer.transformResponseIn(\n              finalResponse\n            );\n          }\n\n          if (!finalResponse.ok) {\n            reply.code(finalResponse.status);\n          }\n          const isStream = body?.stream === true;\n          if (isStream) {\n            reply.header(\"Content-Type\", \"text/event-stream\");\n            reply.header(\"Cache-Control\", \"no-cache\");\n            reply.header(\"Connection\", \"keep-alive\");\n            return reply.send(finalResponse.body);\n          } else {\n            return finalResponse.json();\n          }\n        }\n      );\n    }\n  }\n\n  fastify.post(\n    \"/providers\",\n    {\n      schema: {\n        body: {\n          type: \"object\",\n          properties: {\n            id: { type: \"string\" },\n            name: { type: \"string\" },\n            type: { type: \"string\", enum: [\"openai\", \"anthropic\"] },\n            baseUrl: { type: \"string\" },\n            apiKey: { type: \"string\" },\n            models: { type: \"array\", items: { type: \"string\" } },\n          },\n          required: [\"id\", \"name\", \"type\", \"baseUrl\", \"apiKey\", \"models\"],\n        },\n      },\n    },\n    async (\n      request: FastifyRequest<{ Body: RegisterProviderRequest }>,\n      reply: FastifyReply\n    ) => {\n      // Validation\n      const { name, type, baseUrl, apiKey, models } = request.body;\n\n      if (!name?.trim()) {\n        throw createApiError(\n          \"Provider name is required\",\n          400,\n          \"invalid_request\"\n        );\n      }\n\n      if (!baseUrl || !isValidUrl(baseUrl)) {\n        throw createApiError(\n          \"Valid base URL is required\",\n          400,\n          \"invalid_request\"\n        );\n      }\n\n      if (!apiKey?.trim()) {\n        throw createApiError(\"API key is required\", 400, \"invalid_request\");\n      }\n\n      if (!models || !Array.isArray(models) || models.length === 0) {\n        throw createApiError(\n          \"At least one model is required\",\n          400,\n          \"invalid_request\"\n        );\n      }\n\n      // Check if provider already exists\n      if (fastify._server!.providerService.getProvider(id)) {\n        throw createApiError(\n          `Provider with ID '${id}' already exists`,\n          400,\n          \"provider_exists\"\n        );\n      }\n\n      const provider = fastify._server!.providerService.registerProvider(\n        request.body\n      );\n      return provider;\n    }\n  );\n\n  fastify.get(\"/providers\", async (request, reply) => {\n    return fastify._server!.providerService.getProviders();\n  });\n\n  fastify.get(\n    \"/providers/:id\",\n    {\n      schema: {\n        params: {\n          type: \"object\",\n          properties: { id: { type: \"string\" } },\n          required: [\"id\"],\n        },\n      },\n    },\n    async (request: FastifyRequest<{ Params: { id: string } }>, reply) => {\n      const provider = fastify._server!.providerService.getProvider(\n        request.params.id\n      );\n      if (!provider) {\n        return reply.code(404).send({ error: \"Provider not found\" });\n      }\n      return provider;\n    }\n  );\n\n  fastify.put(\n    \"/providers/:id\",\n    {\n      schema: {\n        params: {\n          type: \"object\",\n          properties: { id: { type: \"string\" } },\n          required: [\"id\"],\n        },\n        body: {\n          type: \"object\",\n          properties: {\n            name: { type: \"string\" },\n            type: { type: \"string\", enum: [\"openai\", \"anthropic\"] },\n            baseUrl: { type: \"string\" },\n            apiKey: { type: \"string\" },\n            models: { type: \"array\", items: { type: \"string\" } },\n            enabled: { type: \"boolean\" },\n          },\n        },\n      },\n    },\n    async (\n      request: FastifyRequest<{\n        Params: { id: string };\n        Body: Partial<LLMProvider>;\n      }>,\n      reply\n    ) => {\n      const provider = fastify._server!.providerService.updateProvider(\n        request.params.id,\n        request.body\n      );\n      if (!provider) {\n        return reply.code(404).send({ error: \"Provider not found\" });\n      }\n      return provider;\n    }\n  );\n\n  fastify.delete(\n    \"/providers/:id\",\n    {\n      schema: {\n        params: {\n          type: \"object\",\n          properties: { id: { type: \"string\" } },\n          required: [\"id\"],\n        },\n      },\n    },\n    async (request: FastifyRequest<{ Params: { id: string } }>, reply) => {\n      const success = fastify._server!.providerService.deleteProvider(\n        request.params.id\n      );\n      if (!success) {\n        return reply.code(404).send({ error: \"Provider not found\" });\n      }\n      return { message: \"Provider deleted successfully\" };\n    }\n  );\n\n  fastify.patch(\n    \"/providers/:id/toggle\",\n    {\n      schema: {\n        params: {\n          type: \"object\",\n          properties: { id: { type: \"string\" } },\n          required: [\"id\"],\n        },\n        body: {\n          type: \"object\",\n          properties: { enabled: { type: \"boolean\" } },\n          required: [\"enabled\"],\n        },\n      },\n    },\n    async (\n      request: FastifyRequest<{\n        Params: { id: string };\n        Body: { enabled: boolean };\n      }>,\n      reply\n    ) => {\n      const success = fastify._server!.providerService.toggleProvider(\n        request.params.id,\n        request.body.enabled\n      );\n      if (!success) {\n        return reply.code(404).send({ error: \"Provider not found\" });\n      }\n      return {\n        message: `Provider ${\n          request.body.enabled ? \"enabled\" : \"disabled\"\n        } successfully`,\n      };\n    }\n  );\n};\n\n// Helper function\nfunction isValidUrl(url: string): boolean {\n  try {\n    new URL(url);\n    return true;\n  } catch {\n    return false;\n  }\n}\n", "import { ProviderService } from \"./provider\";\nimport {\n  LLMProvider,\n  RegisterProviderRequest,\n  RequestRouteInfo,\n} from \"../types/llm\";\n\nexport class LLMService {\n  constructor(private readonly providerService: ProviderService) {\n  }\n\n  registerProvider(request: RegisterProviderRequest): LLMProvider {\n    return this.providerService.registerProvider(request);\n  }\n\n  getProviders(): LLMProvider[] {\n    return this.providerService.getProviders();\n  }\n\n  getProvider(id: string): LLMProvider | undefined {\n    return this.providerService.getProvider(id);\n  }\n\n  updateProvider(\n    id: string,\n    updates: Partial<LLMProvider>\n  ): LLMProvider | null {\n    const result = this.providerService.updateProvider(id, updates);\n    return result;\n  }\n\n  deleteProvider(id: string): boolean {\n    const result = this.providerService.deleteProvider(id);\n    return result;\n  }\n\n  toggleProvider(id: string, enabled: boolean): boolean {\n    return this.providerService.toggleProvider(id, enabled);\n  }\n\n  private resolveRoute(modelName: string): RequestRouteInfo {\n    const route = this.providerService.resolveModelRoute(modelName);\n    if (!route) {\n      throw new Error(\n        `Model ${modelName} not found. Available models: ${this.getAvailableModelNames().join(\n          \", \"\n        )}`\n      );\n    }\n    return route;\n  }\n\n  async getAvailableModels(): Promise<any> {\n    const providers = this.providerService.getAvailableModels();\n\n    return {\n      object: \"list\",\n      data: providers.flatMap((provider) =>\n        provider.models.map((model) => ({\n          id: model,\n          object: \"model\",\n          provider: provider.provider,\n          created: Math.floor(Date.now() / 1000),\n          owned_by: provider.provider,\n        }))\n      ),\n    };\n  }\n\n  private getAvailableModelNames(): string[] {\n    return this.providerService\n      .getModelRoutes()\n      .map((route) => route.fullModel);\n  }\n\n  getModelRoutes() {\n    return this.providerService.getModelRoutes();\n  }\n}\n", "import {\n  LLMProvider,\n  RegisterProviderRequest,\n  ModelRoute,\n  RequestRouteInfo,\n  ConfigProvider,\n} from \"../types/llm\";\nimport { log } from \"../utils/log\";\nimport { ConfigService } from \"./config\";\n\nexport class ProviderService {\n  private providers: Map<string, LLMProvider> = new Map();\n  private modelRoutes: Map<string, ModelRoute> = new Map();\n\n  constructor(private readonly configService: ConfigService) {\n    this.initializeCustomProviders();\n  }\n\n  private initializeCustomProviders() {\n    const providersConfig =\n      this.configService.get<ConfigProvider[]>(\"providers\");\n    if (providersConfig && Array.isArray(providersConfig)) {\n      this.initializeFromProvidersArray(providersConfig);\n      return;\n    }\n  }\n\n  private initializeFromProvidersArray(providersConfig: ConfigProvider[]) {\n    providersConfig.forEach((providerConfig: ConfigProvider) => {\n      try {\n        if (\n          !providerConfig.name ||\n          !providerConfig.api_base_url ||\n          !providerConfig.api_key\n        ) {\n          return;\n        }\n\n        this.registerProvider({\n          name: providerConfig.name,\n          baseUrl: providerConfig.api_base_url,\n          apiKey: providerConfig.api_key,\n          models: providerConfig.models || [],\n          transformer:\n            this.parseTransformerConfig(providerConfig.transformer) || {},\n        });\n\n        log(`${providerConfig.name} provider registered`);\n      } catch (error) {\n        log(`${providerConfig.name} provider registered error: ${error}`);\n      }\n    });\n  }\n\n  registerProvider(request: RegisterProviderRequest): LLMProvider {\n    const provider: LLMProvider = {\n      ...request,\n    };\n\n    this.providers.set(provider.name, provider);\n\n    request.models.forEach((model) => {\n      const fullModel = `${provider.name},${model}`;\n      const route: ModelRoute = {\n        provider: provider.name,\n        model,\n        fullModel,\n      };\n      this.modelRoutes.set(fullModel, route);\n      if (!this.modelRoutes.has(model)) {\n        this.modelRoutes.set(model, route);\n      }\n    });\n\n    return provider;\n  }\n\n  getProviders(): LLMProvider[] {\n    return Array.from(this.providers.values());\n  }\n\n  getProvider(name: string): LLMProvider | undefined {\n    return this.providers.get(name);\n  }\n\n  updateProvider(\n    id: string,\n    updates: Partial<LLMProvider>\n  ): LLMProvider | null {\n    const provider = this.providers.get(id);\n    if (!provider) {\n      return null;\n    }\n\n    const updatedProvider = {\n      ...provider,\n      ...updates,\n      updatedAt: new Date(),\n    };\n\n    this.providers.set(id, updatedProvider);\n\n    if (updates.models) {\n      provider.models.forEach((model) => {\n        const fullModel = `${provider.id},${model}`;\n        this.modelRoutes.delete(fullModel);\n        this.modelRoutes.delete(model);\n      });\n\n      updates.models.forEach((model) => {\n        const fullModel = `${provider.id},${model}`;\n        const route: ModelRoute = {\n          providerId: provider.id,\n          model,\n          fullModel,\n        };\n        this.modelRoutes.set(fullModel, route);\n        if (!this.modelRoutes.has(model)) {\n          this.modelRoutes.set(model, route);\n        }\n      });\n    }\n\n    return updatedProvider;\n  }\n\n  deleteProvider(id: string): boolean {\n    const provider = this.providers.get(id);\n    if (!provider) {\n      return false;\n    }\n\n    provider.models.forEach((model) => {\n      const fullModel = `${provider.id},${model}`;\n      this.modelRoutes.delete(fullModel);\n      this.modelRoutes.delete(model);\n    });\n\n    this.providers.delete(id);\n    return true;\n  }\n\n  toggleProvider(id: string, enabled: boolean): boolean {\n    const provider = this.providers.get(id);\n    if (!provider) {\n      return false;\n    }\n\n    provider.enabled = enabled;\n    provider.updatedAt = new Date();\n    return true;\n  }\n\n  resolveModelRoute(modelName: string): RequestRouteInfo | null {\n    const route = this.modelRoutes.get(modelName);\n    if (!route) {\n      return null;\n    }\n\n    const provider = this.providers.get(route.providerId);\n    if (!provider || !provider.enabled) {\n      return null;\n    }\n\n    return {\n      provider,\n      originalModel: modelName,\n      targetModel: route.model,\n    };\n  }\n\n  getAvailableModelNames(): string[] {\n    const modelNames: string[] = [];\n    this.providers.forEach((provider) => {\n      if (provider.enabled) {\n        provider.models.forEach((model) => {\n          modelNames.push(model);\n          modelNames.push(`${provider.id},${model}`);\n        });\n      }\n    });\n    return modelNames;\n  }\n\n  getModelRoutes(): ModelRoute[] {\n    return Array.from(this.modelRoutes.values());\n  }\n\n  private parseTransformerConfig(transformerConfig: any): any {\n    if (!transformerConfig) return {};\n\n    if (Array.isArray(transformerConfig)) {\n      return transformerConfig.reduce((acc, item) => {\n        if (Array.isArray(item)) {\n          const [name, config = {}] = item;\n          acc[name] = config;\n        } else {\n          acc[item] = {};\n        }\n        return acc;\n      }, {});\n    }\n\n    return transformerConfig;\n  }\n\n  async getAvailableModels(): Promise<{\n    object: string;\n    data: Array<{\n      id: string;\n      object: string;\n      created: number;\n      owned_by: string;\n      provider: string;\n    }>;\n  }> {\n    const models: Array<{\n      id: string;\n      object: string;\n      created: number;\n      owned_by: string;\n      provider: string;\n    }> = [];\n\n    this.providers.forEach((provider) => {\n      if (provider.enabled) {\n        provider.models.forEach((model) => {\n          models.push({\n            id: model,\n            object: \"model\",\n            created: Math.floor(provider.createdAt.getTime() / 1000),\n            owned_by: provider.name,\n            provider: provider.name,\n          });\n\n          models.push({\n            id: `${provider.id},${model}`,\n            object: \"model\",\n            created: Math.floor(provider.createdAt.getTime() / 1000),\n            owned_by: provider.name,\n            provider: provider.id,\n          });\n        });\n      }\n    });\n\n    return {\n      object: \"list\",\n      data: models,\n    };\n  }\n}\n", "import { ChatCompletion } from \"openai/resources\";\nimport { UnifiedChatRequest, UnifiedMessage, UnifiedTool } from \"@/types/llm\";\nimport { Transformer } from \"@/types/transformer\";\nimport { log } from \"@/utils/log\";\n\nexport class AnthropicTransformer implements Transformer {\n  name = \"Anthropic\";\n  endPoint = \"/v1/messages\";\n\n  transformRequestOut(request: Record<string, any>): UnifiedChatRequest {\n    log(`\uD83D\uDE80 [MODEL_ROUTING] Anthropic Request - Model: ${request.model}, Messages: ${request.messages?.length || 0}`);\n    // \u68C0\u67E5\u662F\u5426\u662F\u80CC\u666F\u6A21\u578B\n    if (request.model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n      log(`\u2705 [BACKGROUND_MODEL] \u68C0\u6D4B\u5230\u80CC\u666F\u6A21\u578B: ${request.model}`);\n    } else {\n      log(`\uD83D\uDFE1 [OTHER_MODEL] \u5176\u4ED6\u6A21\u578B: ${request.model}`);\n    }\n\n    const messages: UnifiedMessage[] = [];\n\n    if (request.system) {\n      if (typeof request.system === \"string\") {\n        messages.push({\n          role: \"system\",\n          content: [{\n            type: \"text\",\n            text: request.system,\n            cache_control: { type: \"ephemeral\" }\n          }],\n        });\n      } else if (Array.isArray(request.system)) {\n        const textParts = request.system\n          .filter((item: any) => item.type === \"text\" && item.text)\n          .map((item: any) => ({\n            type: \"text\" as const,\n            text: item.text,\n            cache_control: { type: \"ephemeral\" }\n          }));\n        messages.push({\n          role: 'system',\n          content: textParts,\n        });\n      }\n    }\n\n    const requestMessages = JSON.parse(JSON.stringify(request.messages || []));\n\n    requestMessages?.forEach((msg: any, index: number) => {\n      if (msg.role === \"user\" || msg.role === \"assistant\") {\n        if (typeof msg.content === \"string\") {\n          messages.push({\n            role: msg.role,\n            content: [{\n              type: \"text\",\n              text: msg.content,\n              cache_control: { type: \"ephemeral\" }\n            }],\n          });\n        } else if (Array.isArray(msg.content)) {\n          if (msg.role === \"user\") {\n            const toolParts = msg.content.filter(\n              (c: any) => c.type === \"tool_result\" && c.tool_use_id\n            );\n            if (toolParts.length) {\n              toolParts.forEach((tool: any, toolIndex: number) => {\n                const toolMessage: UnifiedMessage = {\n                  role: \"tool\",\n                  name: tool.name || tool.tool_use_id || \"unknown\",\n                  content:\n                    typeof tool.content === \"string\"\n                      ? tool.content\n                      : JSON.stringify(tool.content),\n                  tool_call_id: tool.tool_use_id,\n                  cache_control: tool.cache_control,\n                };\n                messages.push(toolMessage);\n              });\n            }\n\n            const textParts = msg.content.filter(\n              (c: any) => c.type === \"text\" && c.text\n            ).map((c: any) => ({\n              type: \"text\",\n              text: c.text,\n              cache_control: { type: \"ephemeral\" }\n            }));\n            if (textParts.length) {\n              messages.push({\n                role: \"user\",\n                content: textParts,\n              });\n            }\n          } else if (msg.role === \"assistant\") {\n            const textParts = msg.content.filter(\n              (c: any) => c.type === \"text\" && c.text\n            ).map((c: any) => ({\n              type: \"text\",\n              text: c.text,\n              cache_control: { type: \"ephemeral\" }\n            }));\n            if (textParts.length) {\n              messages.push(\n                ...textParts.map((text: any) => ({\n                  role: \"assistant\",\n                  content: text.text,\n                }))\n              );\n            }\n\n            const toolCallParts = msg.content.filter(\n              (c: any) => c.type === \"tool_use\" && c.id\n            );\n            if (toolCallParts.length) {\n              messages.push({\n                role: \"assistant\" as const,\n                content: null,\n                tool_calls: toolCallParts.map((tool: any) => {\n                  return {\n                    id: tool.id,\n                    type: \"function\" as const,\n                    function: {\n                      name: tool.name,\n                      arguments: JSON.stringify(tool.input || {}),\n                    },\n                  };\n                }),\n              });\n            }\n          }\n          return;\n        }\n      }\n    });\n\n    const result: UnifiedChatRequest = {\n      messages,\n      model: request.model,\n      max_tokens: request.max_tokens,\n      temperature: request.temperature,\n      stream: request.stream,\n      tools: request.tools\n        ? this.convertAnthropicToolsToUnified(request.tools)\n        : undefined,\n      tool_choice: request.tool_choice,\n    };\n    return result;\n  }\n\n  async transformResponseIn(response: Response): Promise<Response> {\n    const isStream = response.headers\n      .get(\"Content-Type\")\n      ?.includes(\"text/event-stream\");\n    \n    log(`\uD83D\uDCE1 [RESPONSE_TYPE] \u54CD\u5E94\u7C7B\u578B: ${isStream ? '\u6D41\u5F0F' : '\u975E\u6D41\u5F0F'}`);\n    log(`\uD83D\uDCE1 [RESPONSE_HEADERS] \u54CD\u5E94\u5934: Content-Type=${response.headers.get('Content-Type')}`);\n    \n    if (isStream) {\n      if (!response.body) {\n        throw new Error(\"Stream response body is null\");\n      }\n      const convertedStream = await this.convertOpenAIStreamToAnthropic(\n        response.body\n      );\n      return new Response(convertedStream, {\n        headers: {\n          \"Content-Type\": \"text/event-stream\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        },\n      });\n    } else {\n      const data = await response.json();\n      const anthropicResponse = this.convertOpenAIResponseToAnthropic(data);\n      \n      return new Response(JSON.stringify(anthropicResponse), {\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n    }\n  }\n\n  private convertAnthropicToolsToUnified(tools: any[]): UnifiedTool[] {\n    return tools.map((tool) => ({\n      type: \"function\",\n      function: {\n        name: tool.name,\n        description: tool.description || \"\",\n        parameters: tool.input_schema,\n      },\n    }));\n  }\n\n  private async convertOpenAIStreamToAnthropic(\n    openaiStream: ReadableStream\n  ): Promise<ReadableStream> {\n    const readable = new ReadableStream({\n      async start(controller) {\n        const encoder = new TextEncoder();\n        const messageId = `msg_${Date.now()}`;\n        let model = \"unknown\";\n        let hasStarted = false;\n        let hasTextContentStarted = false;\n        let hasFinished = false;\n        const toolCalls = new Map<number, any>();\n        const toolCallIndexToContentBlockIndex = new Map<number, number>();\n        let totalChunks = 0;\n        let contentChunks = 0;\n        let toolCallChunks = 0;\n        let isClosed = false;\n        let isThinkingStarted = false;\n        let contentIndex = 0;\n        let collectedText = \"\"; // \u6536\u96C6\u5B9E\u9645\u7684\u6587\u672C\u5185\u5BB9\n        let final_usage = { input_tokens: 0, output_tokens: 0 };\n\n        const safeEnqueue = (data: Uint8Array) => {\n          if (!isClosed) {\n            try {\n              controller.enqueue(data);\n              // const dataStr = new TextDecoder().decode(data);\n              // log(\"send data:\", dataStr.trim()); // \u6CE8\u91CA\u6389\u4EE5\u907F\u514D\u5237\u5C4F\n            } catch (error) {\n              if (\n                error instanceof TypeError &&\n                error.message.includes(\"Controller is already closed\")\n              ) {\n                isClosed = true;\n              } else {\n                log(`send data error: ${(error as Error).message}`);\n                throw error;\n              }\n            }\n          }\n        };\n\n        const safeClose = () => {\n          if (!isClosed) {\n            try {\n              controller.close();\n              isClosed = true;\n            } catch (error) {\n              if (\n                error instanceof TypeError &&\n                error.message.includes(\"Controller is already closed\")\n              ) {\n                isClosed = true;\n              } else {\n                throw error;\n              }\n            }\n          }\n        };\n\n        let reader: ReadableStreamDefaultReader<Uint8Array> | null = null;\n\n        try {\n          reader = openaiStream.getReader();\n          const decoder = new TextDecoder();\n          let buffer = \"\";\n\n          while (true) {\n            if (isClosed) {\n              break;\n            }\n\n            const { done, value } = await reader.read();\n            if (done) break;\n\n            buffer += decoder.decode(value, { stream: true });\n            const lines = buffer.split(\"\\n\");\n            buffer = lines.pop() || \"\";\n\n            for (const line of lines) {\n              if (isClosed || hasFinished) break;\n\n              if (!line.startsWith(\"data: \")) continue;\n              \n                              // \u76D1\u63A7\u80CC\u666F\u6A21\u578B\u7684\u6BCF\u4E2A\u6570\u636E\u884C\uFF08\u5DF2\u6CE8\u91CA\uFF0C\u907F\u514D\u5237\u5C4F\uFF09\n                // if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                //   log(`\uD83D\uDD0D [BACKGROUND_DATA] \u5904\u7406\u6570\u636E\u884C ${totalChunks}: ${line.substring(0, 100)}...`);\n                // }\n              const data = line.slice(6);\n              if (data === \"[DONE]\") {\n                continue;\n              }\n\n              try {\n                // \u8DF3\u8FC7\u7A7A\u6570\u636E\u6216\u65E0\u6548\u6570\u636E\n                if (!data || data.trim() === '') {\n                  continue;\n                }\n                \n                const chunk = JSON.parse(data);\n                if (chunk.usage) {\n                  final_usage = {\n                    input_tokens: chunk.usage.prompt_tokens || 0,\n                    output_tokens: chunk.usage.completion_tokens || 0,\n                  };\n                }\n                totalChunks++;\n                \n                // \u53EA\u5728\u7B2C\u4E00\u4E2A\u5757\u65F6\u8BB0\u5F55\u6A21\u578B\u4FE1\u606F\uFF0C\u907F\u514D\u5237\u5C4F\n                if (totalChunks === 1) {\n                  log(`\uD83D\uDCCA [FIRST_CHUNK] \u6A21\u578B: ${chunk.model || 'unknown'}, ID: ${chunk.id || 'unknown'}`);\n                  // \u7279\u522B\u6807\u8BB0\u80CC\u666F\u6A21\u578B\n                  if (chunk.model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                    log(`\uD83C\uDFAF [BACKGROUND_STREAM_START] \u80CC\u666F\u6A21\u578B\u6D41\u5F0F\u54CD\u5E94\u5F00\u59CB`);\n                  }\n                }\n\n                model = chunk.model || model;\n                // \u76D1\u63A7\u54CD\u5E94\u4E2D\u7684\u6A21\u578B\u4FE1\u606F\n                if (chunk.model && chunk.model !== model) {\n                  log(`\uD83D\uDD04 [MODEL_RESPONSE] \u54CD\u5E94\u6A21\u578B: ${chunk.model}`);\n                  if (chunk.model.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                    log(`\u2705 [BACKGROUND_MODEL_RESPONSE] \u80CC\u666F\u6A21\u578B\u54CD\u5E94\u786E\u8BA4: ${chunk.model}`);\n                  }\n                }\n\n                if (!hasStarted && !isClosed && !hasFinished) {\n                  hasStarted = true;\n\n                  const messageStart = {\n                    type: \"message_start\",\n                    message: {\n                      id: messageId,\n                      type: \"message\",\n                      role: \"assistant\",\n                      content: [],\n                      model: model,\n                      stop_reason: null,\n                      stop_sequence: null,\n                      usage: { input_tokens: 1, output_tokens: 1 },\n                    },\n                  };\n\n                  safeEnqueue(\n                    encoder.encode(\n                      `event: message_start\\ndata: ${JSON.stringify(\n                        messageStart\n                      )}\\n\\n`\n                    )\n                  );\n                }\n\n                const choice = chunk.choices?.[0];\n                if (!choice) {\n                  // \u76D1\u63A7\u80CC\u666F\u6A21\u578B\u7684\u7A7A\u9009\u62E9\n                  if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                    log(`\u26A0\uFE0F [BACKGROUND_NO_CHOICE] \u80CC\u666F\u6A21\u578B\u54CD\u5E94\u6CA1\u6709\u9009\u62E9: ${JSON.stringify(chunk).substring(0, 200)}...`);\n                  }\n                  continue;\n                }\n\n                if (choice?.delta?.thinking && !isClosed && !hasFinished) {\n                  if (!isThinkingStarted) {\n                    const contentBlockStart = {\n                      type: \"content_block_start\",\n                      index: contentIndex,\n                      content_block: { type: \"thinking\", thinking: \"\" },\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_start\\ndata: ${JSON.stringify(\n                          contentBlockStart\n                        )}\\n\\n`\n                      )\n                    );\n                    isThinkingStarted = true;\n                  }\n                  if (choice.delta.thinking.signature) {\n                    const thinkingSignature = {\n                      type: \"content_block_delta\",\n                      index: contentIndex,\n                      delta: {\n                        type: \"signature_delta\",\n                        signature: choice.delta.thinking.signature,\n                      },\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_delta\\ndata: ${JSON.stringify(\n                          thinkingSignature\n                        )}\\n\\n`\n                      )\n                    );\n                    const contentBlockStop = {\n                      type: \"content_block_stop\",\n                      index: contentIndex,\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_stop\\ndata: ${JSON.stringify(\n                          contentBlockStop\n                        )}\\n\\n`\n                      )\n                    );\n                    contentIndex++;\n                  } else if (choice.delta.thinking.content) {\n                    const thinkingChunk = {\n                      type: \"content_block_delta\",\n                      index: contentIndex,\n                      delta: {\n                        type: \"thinking_delta\",\n                        thinking: choice.delta.thinking.content || \"\",\n                      },\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_delta\\ndata: ${JSON.stringify(\n                          thinkingChunk\n                        )}\\n\\n`\n                      )\n                    );\n                  }\n                }\n\n                if (choice?.delta?.content && !isClosed && !hasFinished) {\n                  contentChunks++;\n                  // \u6536\u96C6\u5B9E\u9645\u6587\u672C\u5185\u5BB9\n                  collectedText += choice.delta.content;\n\n                  if (!hasTextContentStarted && !hasFinished) {\n                    hasTextContentStarted = true;\n                    const contentBlockStart = {\n                      type: \"content_block_start\",\n                      index: contentIndex,\n                      content_block: {\n                        type: \"text\",\n                        text: \"\",\n                      },\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_start\\ndata: ${JSON.stringify(\n                          contentBlockStart\n                        )}\\n\\n`\n                      )\n                    );\n                  }\n\n                  if (!isClosed && !hasFinished) {\n                    const anthropicChunk = {\n                      type: \"content_block_delta\",\n                      index: contentIndex,\n                      delta: {\n                        type: \"text_delta\",\n                        text: choice.delta.content,\n                      },\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_delta\\ndata: ${JSON.stringify(\n                          anthropicChunk\n                        )}\\n\\n`\n                      )\n                    );\n                  }\n                }\n\n                if (choice?.delta?.tool_calls && !isClosed && !hasFinished) {\n                  toolCallChunks++;\n                  const processedInThisChunk = new Set<number>();\n\n                  for (const toolCall of choice.delta.tool_calls) {\n                    if (isClosed) break;\n                    const toolCallIndex = toolCall.index ?? 0;\n                    if (processedInThisChunk.has(toolCallIndex)) {\n                      continue;\n                    }\n                    processedInThisChunk.add(toolCallIndex);\n                    const isUnknownIndex =\n                      !toolCallIndexToContentBlockIndex.has(toolCallIndex);\n\n                    if (isUnknownIndex) {\n                      const newContentBlockIndex = hasTextContentStarted\n                        ? toolCallIndexToContentBlockIndex.size + 1\n                        : toolCallIndexToContentBlockIndex.size;\n                      if (newContentBlockIndex !== 0) {\n                        log(\"content_block_stop2\");\n                        const contentBlockStop = {\n                          type: \"content_block_stop\",\n                          index: contentIndex,\n                        };\n                        safeEnqueue(\n                          encoder.encode(\n                            `event: content_block_stop\\ndata: ${JSON.stringify(\n                              contentBlockStop\n                            )}\\n\\n`\n                          )\n                        );\n                        contentIndex++\n                      }\n                      toolCallIndexToContentBlockIndex.set(\n                        toolCallIndex,\n                        newContentBlockIndex\n                      );\n                      const toolCallId =\n                        toolCall.id || `call_${Date.now()}_${toolCallIndex}`;\n                      const toolCallName =\n                        toolCall.function?.name || `tool_${toolCallIndex}`;\n                      const contentBlockStart = {\n                        type: \"content_block_start\",\n                        index: contentIndex,\n                        content_block: {\n                          type: \"tool_use\",\n                          id: toolCallId,\n                          name: toolCallName,\n                          input: {},\n                        },\n                      };\n\n                      safeEnqueue(\n                        encoder.encode(\n                          `event: content_block_start\\ndata: ${JSON.stringify(\n                            contentBlockStart\n                          )}\\n\\n`\n                        )\n                      );\n\n                      const toolCallInfo = {\n                        id: toolCallId,\n                        name: toolCallName,\n                        arguments: \"\",\n                        contentBlockIndex: newContentBlockIndex,\n                      };\n                      toolCalls.set(toolCallIndex, toolCallInfo);\n                    } else if (toolCall.id && toolCall.function?.name) {\n                      const existingToolCall = toolCalls.get(toolCallIndex)!;\n                      const wasTemporary =\n                        existingToolCall.id.startsWith(\"call_\") &&\n                        existingToolCall.name.startsWith(\"tool_\");\n\n                      if (wasTemporary) {\n                        existingToolCall.id = toolCall.id;\n                        existingToolCall.name = toolCall.function.name;\n                      }\n                    }\n\n                    if (\n                      toolCall.function?.arguments &&\n                      !isClosed &&\n                      !hasFinished\n                    ) {\n                      const blockIndex =\n                        toolCallIndexToContentBlockIndex.get(toolCallIndex);\n                      if (blockIndex === undefined) {\n                        continue;\n                      }\n                      const currentToolCall = toolCalls.get(toolCallIndex);\n                      if (currentToolCall) {\n                        currentToolCall.arguments +=\n                          toolCall.function.arguments;\n                        try {\n                          const trimmedArgs = currentToolCall.arguments.trim();\n                          if (\n                            trimmedArgs.startsWith(\"{\") &&\n                            trimmedArgs.endsWith(\"}\")\n                          ) {\n                            try {\n                              JSON.parse(trimmedArgs);\n                            } catch (e: any) {\n                              log(\n                                \"Tool call index:\",\n                                toolCallIndex,\n                                \"error\",\n                                e.message\n                              );\n                            }\n                          }\n                        } catch (e: any) {\n                          log(\n                            \"Tool call index:\",\n                            toolCallIndex,\n                            \"error\",\n                            e.message\n                          );\n                        }\n                      }\n\n                      try {\n                        const anthropicChunk = {\n                          type: \"content_block_delta\",\n                          index: contentIndex,\n                          delta: {\n                            type: \"input_json_delta\",\n                            partial_json: toolCall.function.arguments,\n                          },\n                        };\n                        safeEnqueue(\n                          encoder.encode(\n                            `event: content_block_delta\\ndata: ${JSON.stringify(\n                              anthropicChunk\n                            )}\\n\\n`\n                          )\n                        );\n                      } catch (error) {\n                        try {\n                          const fixedArgument = toolCall.function.arguments\n                            .replace(/[\\x00-\\x1F\\x7F-\\x9F]/g, \"\")\n                            .replace(/\\\\/g, \"\\\\\\\\\")\n                            .replace(/\"/g, '\\\\\"');\n\n                          const fixedChunk = {\n                            type: \"content_block_delta\",\n                            index: contentIndex,\n                            delta: {\n                              type: \"input_json_delta\",\n                              partial_json: fixedArgument,\n                            },\n                          };\n                          safeEnqueue(\n                            encoder.encode(\n                              `event: content_block_delta\\ndata: ${JSON.stringify(\n                                fixedChunk\n                              )}\\n\\n`\n                            )\n                          );\n                        } catch (fixError) {\n                          console.error(fixError);\n                        }\n                      }\n                    }\n                  }\n                }\n\n                if (choice?.finish_reason && !isClosed && !hasFinished) {\n                  hasFinished = true;\n                  \n                  // \u76D1\u63A7\u80CC\u666F\u6A21\u578B\u7684\u5B8C\u6210\u539F\u56E0\n                  if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                    log(`\uD83C\uDFAF [BACKGROUND_FINISH_REASON] \u80CC\u666F\u6A21\u578B\u5B8C\u6210\u539F\u56E0: ${choice.finish_reason}`);\n                  }\n                  \n                  // \u6D41\u5F0F\u54CD\u5E94\u7ED3\u675F\u7EDF\u8BA1\n                  log(`\uD83C\uDFC1 [STREAM_END] \u603B\u5757\u6570: ${totalChunks}, \u5185\u5BB9\u5757: ${contentChunks}, \u5DE5\u5177\u5757: ${toolCallChunks}, \u6A21\u578B: ${model}`);\n                  // \u7279\u522B\u6807\u8BB0\u80CC\u666F\u6A21\u578B\u7ED3\u675F\n                  if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                    log(`\uD83C\uDFAF [BACKGROUND_STREAM_END] \u80CC\u666F\u6A21\u578B\u6D41\u5F0F\u54CD\u5E94\u7ED3\u675F`);\n                  }\n                  \n                  if (contentChunks === 0 && toolCallChunks === 0) {\n                    console.error(\n                      \"Warning: No content in the stream response!\"\n                    );\n                  }\n\n                  if ((hasTextContentStarted || toolCallChunks > 0) && !isClosed) {\n                    log(\"content_block_stop hasTextContentStarted\");\n                    const contentBlockStop = {\n                      type: \"content_block_stop\",\n                      index: contentIndex,\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: content_block_stop\\ndata: ${JSON.stringify(\n                          contentBlockStop\n                        )}\\n\\n`\n                      )\n                    );\n                  }\n\n                  if (!isClosed) {\n                    const stopReasonMapping = {\n                      stop: \"end_turn\",\n                      length: \"max_tokens\",\n                      tool_calls: \"tool_use\",\n                      content_filter: \"stop_sequence\",\n                    };\n\n                    const anthropicStopReason =\n                      stopReasonMapping[choice.finish_reason as keyof typeof stopReasonMapping] || \"end_turn\";\n\n                    const messageDelta = {\n                      type: \"message_delta\",\n                      delta: {\n                        stop_reason: anthropicStopReason,\n                        stop_sequence: null,\n                      },\n                      usage: final_usage,\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: message_delta\\ndata: ${JSON.stringify(\n                          messageDelta\n                        )}\\n\\n`\n                      )\n                    );\n                  }\n\n                  if (!isClosed) {\n                    const messageStop = {\n                      type: \"message_stop\",\n                    };\n                    safeEnqueue(\n                      encoder.encode(\n                        `event: message_stop\\ndata: ${JSON.stringify(\n                          messageStop\n                        )}\\n\\n`\n                      )\n                    );\n                  }\n\n                  // \u6784\u5EFA\u5B8C\u6574\u7684\u6700\u7EC8\u54CD\u5E94\u7528\u4E8E\u65E5\u5FD7\u663E\u793A\n                  const finalResponse: any = {\n                    type: \"message\",\n                    role: \"assistant\",\n                    content: [],\n                    stop_reason: choice.finish_reason === \"stop\" ? \"end_turn\" : \n                                choice.finish_reason === \"length\" ? \"max_tokens\" :\n                                choice.finish_reason === \"tool_calls\" ? \"tool_use\" :\n                                choice.finish_reason === \"content_filter\" ? \"stop_sequence\" : \"end_turn\",\n                    stop_sequence: null,\n                    usage: final_usage,\n                  };\n\n                  // \u6536\u96C6\u6240\u6709\u5185\u5BB9\u5757\n                  if (contentChunks > 0) {\n                    finalResponse.content.push({\n                      type: \"text\",\n                      text: collectedText\n                    });\n                  }\n\n                  // \u6536\u96C6\u5DE5\u5177\u8C03\u7528\n                  if (toolCallChunks > 0) {\n                    toolCalls.forEach((toolCall) => {\n                      finalResponse.content.push({\n                        type: \"tool_use\",\n                        id: toolCall.id,\n                        name: toolCall.name,\n                        input: toolCall.arguments ? JSON.parse(toolCall.arguments) : {}\n                      });\n                    });\n                  }\n\n                  log(`\uD83C\uDFAF [FINAL_RESPONSE] Conversion complete, final Anthropic response: ${JSON.stringify(finalResponse, null, 2)}`);\n                  // \u7279\u522B\u6807\u8BB0\u80CC\u666F\u6A21\u578B\u6700\u7EC8\u54CD\u5E94\n                  if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                    log(`\uD83C\uDFAF [BACKGROUND_FINAL_RESPONSE] \u80CC\u666F\u6A21\u578B\u6700\u7EC8\u54CD\u5E94\u5B8C\u6210`);\n                  }\n\n                  break;\n                }\n              } catch (parseError: any) {\n                // \u7279\u522B\u6807\u8BB0\u80CC\u666F\u6A21\u578B\u7684\u89E3\u6790\u9519\u8BEF\n                if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                  log(`\u274C [BACKGROUND_PARSE_ERROR] \u80CC\u666F\u6A21\u578B\u54CD\u5E94\u89E3\u6790\u9519\u8BEF: ${parseError.message}`);\n                  log(`\u274C [BACKGROUND_PARSE_ERROR] \u95EE\u9898\u6570\u636E: ${data.substring(0, 200)}...`);\n                } else {\n                  log(`parseError: ${parseError.name} message: ${parseError.message} data: ${data.substring(0, 100)}...`);\n                }\n              }\n            }\n          }\n          \n          // \u76D1\u63A7\u80CC\u666F\u6A21\u578B\u7684\u6D41\u5F0F\u54CD\u5E94\u7ED3\u675F\n          if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n            log(`\uD83C\uDFC1 [BACKGROUND_STREAM_LOOP_END] \u80CC\u666F\u6A21\u578B\u6D41\u5F0F\u54CD\u5E94\u4E3B\u5FAA\u73AF\u7ED3\u675F\uFF0C\u603B\u5757\u6570: ${totalChunks}`);\n          }\n          \n          safeClose();\n        } catch (error) {\n          if (!isClosed) {\n            try {\n              // \u7279\u522B\u6807\u8BB0\u80CC\u666F\u6A21\u578B\u7684\u9519\u8BEF\n              if (model?.includes(\"gemini-2.5-flash-lite-preview-06-17\")) {\n                log(`\u274C [BACKGROUND_STREAM_ERROR] \u80CC\u666F\u6A21\u578B\u6D41\u5F0F\u54CD\u5E94\u9519\u8BEF: ${(error as Error).message}`);\n              }\n              controller.error(error);\n            } catch (controllerError) {\n              console.error(controllerError);\n            }\n          }\n        } finally {\n          if (reader) {\n            try {\n              reader.releaseLock();\n            } catch (releaseError) {\n              console.error(releaseError);\n            }\n          }\n        }\n      },\n      cancel(reason) {\n        log(\"cancle stream:\", reason);\n        // \u7279\u522B\u6807\u8BB0\u80CC\u666F\u6A21\u578B\u7684\u53D6\u6D88\n        log(`\u274C [STREAM_CANCEL] \u6D41\u5F0F\u54CD\u5E94\u88AB\u53D6\u6D88: ${reason}`);\n      },\n    });\n\n    return readable;\n  }\n\n  private convertOpenAIResponseToAnthropic(\n    openaiResponse: ChatCompletion\n  ): any {\n          // log(`Original OpenAI response: id=${openaiResponse.id || 'unknown'}`); // \u6CE8\u91CA\u6389\u8BE6\u7EC6\u65E5\u5FD7\uFF0C\u907F\u514D\u5237\u5C4F\n\n    const choice = openaiResponse.choices[0];\n    if (!choice) {\n      throw new Error(\"No choices found in OpenAI response\");\n    }\n    const content: any[] = [];\n    if (choice.message.content) {\n      content.push({\n        type: \"text\",\n        text: choice.message.content,\n      });\n    }\n    if (choice.message.tool_calls && choice.message.tool_calls.length > 0) {\n      choice.message.tool_calls.forEach((toolCall) => {\n        let parsedInput = {};\n        try {\n          const argumentsStr = toolCall.function.arguments || \"{}\";\n\n          if (typeof argumentsStr === \"object\") {\n            parsedInput = argumentsStr;\n          } else if (typeof argumentsStr === \"string\") {\n            parsedInput = JSON.parse(argumentsStr);\n          }\n        } catch (parseError) {\n          parsedInput = { text: toolCall.function.arguments || \"\" };\n        }\n\n        content.push({\n          type: \"tool_use\",\n          id: toolCall.id,\n          name: toolCall.function.name,\n          input: parsedInput,\n        });\n      });\n    }\n\n    const result = {\n      id: openaiResponse.id,\n      type: \"message\",\n      role: \"assistant\",\n      model: openaiResponse.model,\n      content: content,\n      stop_reason:\n        choice.finish_reason === \"stop\"\n          ? \"end_turn\"\n          : choice.finish_reason === \"length\"\n            ? \"max_tokens\"\n            : choice.finish_reason === \"tool_calls\"\n              ? \"tool_use\"\n              : choice.finish_reason === \"content_filter\"\n                ? \"stop_sequence\"\n                : \"end_turn\",\n      stop_sequence: null,\n      usage: {\n        input_tokens: openaiResponse.usage?.prompt_tokens || 0,\n        output_tokens: openaiResponse.usage?.completion_tokens || 0,\n      },\n    };\n    // \u663E\u793A\u5B8C\u6574\u7684\u6700\u7EC8\u54CD\u5E94\u4FE1\u606F\n    log(`\uD83C\uDFAF [FINAL_RESPONSE] Conversion complete, final Anthropic response: ${JSON.stringify(result, null, 2)}`);\n    return result;\n  }\n}\n", "import { log } from \"../utils/log\";\nimport { LLMProvider, UnifiedChatRequest, UnifiedMessage } from \"../types/llm\";\nimport { Transformer } from \"../types/transformer\";\nimport { Content, ContentListUnion, Part, ToolListUnion } from \"@google/genai\";\n\nexport class GeminiTransformer implements Transformer {\n  name = \"gemini\";\n\n  endPoint = \"/v1beta/models/:modelAndAction\";\n\n  transformRequestIn(\n    request: UnifiedChatRequest,\n    provider: LLMProvider\n  ): Record<string, any> {\n    return {\n      body: {\n        contents: request.messages.map((message: UnifiedMessage) => {\n          let role: \"user\" | \"model\";\n          if (message.role === \"assistant\") {\n            role = \"model\";\n          } else if ([\"user\", \"system\", \"tool\"].includes(message.role)) {\n            role = \"user\";\n          } else {\n            role = \"user\"; // Default to user if role is not recognized\n          }\n          const parts = [];\n          if (typeof message.content === \"string\") {\n            parts.push({\n              text: message.content,\n            });\n          } else if (Array.isArray(message.content)) {\n            parts.push(\n              ...message.content.map((content) => {\n                if (content.type === \"text\") {\n                  return {\n                    text: content.text || \"\",\n                  };\n                }\n              })\n            );\n          }\n\n          if (Array.isArray(message.tool_calls)) {\n            parts.push(\n              ...message.tool_calls.map((toolCall) => {\n                return {\n                  functionCall: {\n                    id:\n                      toolCall.id ||\n                      `tool_${Math.random().toString(36).substring(2, 15)}`,\n                    name: toolCall.function.name,\n                    args: JSON.parse(toolCall.function.arguments || \"{}\"),\n                  },\n                };\n              })\n            );\n          }\n          return {\n            role,\n            parts,\n          };\n        }),\n        tools: [\n          {\n            functionDeclarations:\n              request.tools?.map((tool) => {\n                delete tool.function.parameters?.$schema;\n                delete tool.function.parameters?.additionalProperties;\n                if (tool.function.parameters?.properties) {\n                  Object.keys(tool.function.parameters.properties).forEach(\n                    (key) => {\n                      delete tool.function.parameters.properties[key].$schema;\n                      delete tool.function.parameters.properties[key]\n                        .additionalProperties;\n                      if (\n                        tool.function.parameters.properties[key].items &&\n                        typeof tool.function.parameters.properties[key]\n                          .items === \"object\"\n                      ) {\n                        delete tool.function.parameters.properties[key].items\n                          .$schema;\n                        delete tool.function.parameters.properties[key].items\n                          .additionalProperties;\n                      }\n\n                      if (\n                        tool.function.parameters.properties[key].type ===\n                        \"string\"\n                      ) {\n                        if (\n                          ![\"enum\", \"date-time\"].includes(\n                            tool.function.parameters.properties[key].format\n                          )\n                        ) {\n                          delete tool.function.parameters.properties[key]\n                            .format;\n                        }\n                      }\n                    }\n                  );\n                }\n                return {\n                  name: tool.function.name,\n                  description: tool.function.description,\n                  parameters: tool.function.parameters,\n                };\n              }) || [],\n          },\n        ],\n      },\n      config: {\n        url: new URL(\n          `./${request.model}:${\n            request.stream ? \"streamGenerateContent?alt=sse\" : \"generateContent\"\n          }`,\n          provider.baseUrl\n        ),\n        headers: {\n          \"x-goog-api-key\": provider.apiKey,\n          Authorization: undefined,\n        },\n      },\n    };\n  }\n\n  transformRequestOut(request: Record<string, any>): UnifiedChatRequest {\n    const contents: ContentListUnion = request.contents;\n    const tools: ToolListUnion = request.tools;\n    const model: string = request.model;\n    const max_tokens: number | undefined = request.max_tokens;\n    const temperature: number | undefined = request.temperature;\n    const stream: boolean | undefined = request.stream;\n    const tool_choice: \"auto\" | \"none\" | string | undefined =\n      request.tool_choice;\n\n    const unifiedChatRequest: UnifiedChatRequest = {\n      messages: [],\n      model,\n      max_tokens,\n      temperature,\n      stream,\n      tool_choice,\n    };\n\n    if (Array.isArray(contents)) {\n      contents.forEach((content) => {\n        if (typeof content === \"string\") {\n          unifiedChatRequest.messages.push({\n            role: \"user\",\n            content,\n          });\n        } else if (typeof (content as Part).text === \"string\") {\n          unifiedChatRequest.messages.push({\n            role: \"user\",\n            content: (content as Part).text || null,\n          });\n        } else if ((content as Content).role === \"user\") {\n          unifiedChatRequest.messages.push({\n            role: \"user\",\n            content:\n              (content as Content)?.parts?.map((part: Part) => ({\n                type: \"text\",\n                text: part.text || \"\",\n              })) || [],\n          });\n        } else if ((content as Content).role === \"model\") {\n          unifiedChatRequest.messages.push({\n            role: \"assistant\",\n            content:\n              (content as Content)?.parts?.map((part: Part) => ({\n                type: \"text\",\n                text: part.text || \"\",\n              })) || [],\n          });\n        }\n      });\n    }\n\n    if (Array.isArray(tools)) {\n      unifiedChatRequest.tools = [];\n      tools.forEach((tool) => {\n        if (Array.isArray(tool.functionDeclarations)) {\n          tool.functionDeclarations.forEach((tool) => {\n            unifiedChatRequest.tools!.push({\n              type: \"function\",\n              function: {\n                name: tool.name,\n                description: tool.description,\n                parameters: tool.parameters,\n              },\n            });\n          });\n        }\n      });\n    }\n\n    return unifiedChatRequest;\n  }\n\n  // transformResponseIn(response: GeminiChatResponse): UnifiedChatResponse {\n  //     return {\n  //         id: response.id,\n  //         model: response.model,\n  //         content: response.content || null,\n  //         usage: response.usage ? {\n  //             prompt_tokens: response.usage.prompt_tokens,\n  //             completion_tokens: response.usage.completion_tokens,\n  //             total_tokens: response.usage.total_tokens,\n  //         } : undefined,\n  //         tool_calls: response.tool_calls?.map(call => ({\n  //             id: call.id,\n  //             type: call.type,\n  //             function: {\n  //                 name: call.function.name,\n  //                 arguments: call.function.arguments,\n  //             },\n  //         })),\n  //     };\n  // }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n      const jsonResponse: any = await response.json();\n      const tool_calls = jsonResponse.candidates[0].content.parts\n        .filter((part: Part) => part.functionCall)\n        .map((part: Part) => ({\n          id:\n            part.functionCall?.id ||\n            `tool_${Math.random().toString(36).substring(2, 15)}`,\n          type: \"function\",\n          function: {\n            name: part.functionCall?.name,\n            arguments: JSON.stringify(part.functionCall?.args || {}),\n          },\n        }));\n      const res = {\n        id: jsonResponse.responseId,\n        choices: [\n          {\n            finish_reason:\n              (\n                jsonResponse.candidates[0].finishReason as string\n              )?.toLowerCase() || null,\n            index: 0,\n            message: {\n              content: jsonResponse.candidates[0].content.parts\n                .filter((part: Part) => part.text)\n                .map((part: Part) => part.text)\n                .join(\"\\n\"),\n              role: \"assistant\",\n              tool_calls: tool_calls.length > 0 ? tool_calls : undefined,\n            },\n          },\n        ],\n        created: parseInt(new Date().getTime() / 1000 + \"\", 10),\n        model: jsonResponse.modelVersion,\n        object: \"chat.completion\",\n        usage: {\n          completion_tokens: jsonResponse.usageMetadata.candidatesTokenCount,\n          prompt_tokens: jsonResponse.usageMetadata.promptTokenCount,\n          total_tokens: jsonResponse.usageMetadata.totalTokenCount,\n        },\n      };\n      return new Response(JSON.stringify(res), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    } else if (response.headers.get(\"Content-Type\")?.includes(\"stream\")) {\n      if (!response.body) {\n        return response;\n      }\n\n      const decoder = new TextDecoder();\n      const encoder = new TextEncoder();\n      const stream = new ReadableStream({\n        async start(controller) {\n          const reader = response.body!.getReader();\n          try {\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) break;\n\n              let chunk = decoder.decode(value, { stream: true });\n              if (chunk.startsWith(\"data: \")) {\n                chunk = chunk.slice(6).trim();\n              } else {\n                break;\n              }\n              // log(\"gemini chunk:\", chunk); // \u6CE8\u91CA\u6389\u5355\u4E2A\u5757\u7684\u8BE6\u7EC6\u65E5\u5FD7\uFF0C\u907F\u514D\u5237\u5C4F\n              chunk = JSON.parse(chunk);\n              const tool_calls = chunk.candidates[0].content.parts\n                .filter((part: Part) => part.functionCall)\n                .map((part: Part) => ({\n                  id:\n                    part.functionCall?.id ||\n                    `tool_${Math.random().toString(36).substring(2, 15)}`,\n                  type: \"function\",\n                  function: {\n                    name: part.functionCall?.name,\n                    arguments: JSON.stringify(part.functionCall?.args || {}),\n                  },\n                }));\n              const res: any = {\n                choices: [\n                  {\n                    delta: {\n                      role: \"assistant\",\n                      content: chunk.candidates[0].content.parts\n                        .filter((part: Part) => part.text)\n                        .map((part: Part) => part.text)\n                        .join(\"\\n\"),\n                      tool_calls:\n                        tool_calls.length > 0 ? tool_calls : undefined,\n                    },\n                    finish_reason:\n                      chunk.candidates[0].finishReason?.toLowerCase() || null,\n                    index:\n                      chunk.candidates[0].index || tool_calls.length > 0\n                        ? 1\n                        : 0,\n                    logprobs: null,\n                  },\n                ],\n                created: parseInt(new Date().getTime() / 1000 + \"\", 10),\n                id: chunk.responseId || \"\",\n                model: chunk.modelVersion || \"\",\n                object: \"chat.completion.chunk\",\n                system_fingerprint: \"fp_a49d71b8a1\",\n              };\n              if (chunk.usageMetadata) {\n                res.usage = {\n                  completion_tokens: chunk.usageMetadata.candidatesTokenCount,\n                  prompt_tokens: chunk.usageMetadata.promptTokenCount,\n                  total_tokens: chunk.usageMetadata.totalTokenCount,\n                };\n              }\n              // log(`gemini response: candidates=${res.candidates?.length || 0}`); // \u6CE8\u91CA\u6389\u8BE6\u7EC6\u65E5\u5FD7\uFF0C\u907F\u514D\u5237\u5C4F\n              controller.enqueue(\n                encoder.encode(`data: ${JSON.stringify(res)}\\n\\n`)\n              );\n            }\n          } catch (error) {\n            controller.error(error);\n          } finally {\n            controller.close();\n          }\n        },\n      });\n\n      return new Response(stream, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    }\n    return response;\n  }\n}\n", "import { log } from \"../utils/log\";\nimport { LLMProvider, UnifiedChatRequest, UnifiedMessage, UnifiedTool } from \"../types/llm\";\nimport { Transformer } from \"../types/transformer\";\n\n// Gemini API \u7C7B\u578B\u5B9A\u4E49\ninterface GeminiPart {\n  text?: string;\n  functionCall?: {\n    id?: string;\n    name?: string;\n    args?: Record<string, any>;\n  };\n}\n\ninterface GeminiContent {\n  role: \"user\" | \"model\";\n  parts: GeminiPart[];\n}\n\n\n\ninterface GeminiFunctionDeclaration {\n  name: string;\n  description: string;\n  parameters: Record<string, any>;\n}\n\ninterface GeminiTool {\n  functionDeclarations?: GeminiFunctionDeclaration[];\n}\n\nexport class GeminiProTransformer implements Transformer {\n  name = \"gemini-pro\";\n\n//   endPoint = \"/v1beta/models/:modelAndAction\";\n\n  transformRequestIn(\n    request: UnifiedChatRequest,\n    provider: LLMProvider\n  ): Record<string, any> {\n    return {\n      body: {\n        contents: request.messages.map((message: UnifiedMessage) => {\n          let role: \"user\" | \"model\";\n          if (message.role === \"assistant\") {\n            role = \"model\";\n          } else if ([\"user\", \"system\", \"tool\"].includes(message.role)) {\n            role = \"user\";\n          } else {\n            role = \"user\"; // Default to user if role is not recognized\n          }\n          \n          const parts: GeminiPart[] = [];\n          \n          if (typeof message.content === \"string\") {\n            parts.push({\n              text: message.content,\n            });\n          } else if (Array.isArray(message.content)) {\n            parts.push(\n              ...message.content.map((content) => {\n                if (content.type === \"text\") {\n                  return {\n                    text: content.text || \"\",\n                  };\n                }\n                return { text: \"\" };\n              }).filter(part => part.text !== \"\")\n            );\n          }\n\n          if (Array.isArray(message.tool_calls)) {\n            parts.push(\n              ...message.tool_calls.map((toolCall) => {\n                // \u5B89\u5168\u5904\u7406 arguments\n                let args = {};\n                try {\n                  if (typeof toolCall.function.arguments === \"string\") {\n                    args = JSON.parse(toolCall.function.arguments || \"{}\");\n                  } else if (typeof toolCall.function.arguments === \"object\") {\n                    args = toolCall.function.arguments || {};\n                  }\n                } catch (error) {\n                  log(`\u26A0\uFE0F [GEMINI_TOOL_ARGS_PARSE_ERROR] \u5DE5\u5177\u53C2\u6570\u89E3\u6790\u5931\u8D25: ${error}`);\n                  args = {};\n                }\n                \n                return {\n                  functionCall: {\n                    id: toolCall.id || `tool_${Math.random().toString(36).substring(2, 15)}`,\n                    name: toolCall.function.name,\n                    args: args,\n                  },\n                };\n              })\n            );\n          }\n          \n          return {\n            role,\n            parts,\n          };\n        }),\n        tools: request.tools && request.tools.length > 0 ? [\n          {\n            functionDeclarations:\n              request.tools.map((tool: UnifiedTool) => {\n                // \u4E25\u683C\u6309\u7167Gemini\u6587\u6863\u683C\u5F0F\u6E05\u7406\u5DE5\u5177\u5B9A\u4E49\n                const cleanedTool: any = {\n                  name: tool.function.name,\n                  description: tool.function.description,\n                };\n                \n                // \u53EA\u6709\u5F53\u6709\u53C2\u6570\u65F6\u624D\u6DFB\u52A0 parameters \u5B57\u6BB5\n                if (tool.function.parameters && \n                    (tool.function.parameters.properties || tool.function.parameters.required)) {\n                  \n                  cleanedTool.parameters = {\n                    type: \"object\",\n                    properties: {} as Record<string, any>,\n                  };\n                  \n                  // \u590D\u5236\u5E76\u6E05\u7406 properties\n                  if (tool.function.parameters.properties) {\n                    Object.keys(tool.function.parameters.properties).forEach((key) => {\n                      const prop = tool.function.parameters.properties[key];\n                      const cleanedProp: any = {\n                        type: prop.type,\n                      };\n                      \n                      // \u53EA\u4FDD\u7559Gemini\u6587\u6863\u4E2D\u660E\u786E\u652F\u6301\u7684\u5B57\u6BB5\n                      if (prop.description) cleanedProp.description = prop.description;\n                      if (prop.enum) cleanedProp.enum = prop.enum;\n                      \n                      // \u5904\u7406 items\uFF08\u6570\u7EC4\u7C7B\u578B\uFF09\n                      if (prop.items && typeof prop.items === \"object\") {\n                        cleanedProp.items = {\n                          type: prop.items.type,\n                        };\n                        if (prop.items.description) cleanedProp.items.description = prop.items.description;\n                      }\n                      \n                      cleanedTool.parameters.properties[key] = cleanedProp;\n                    });\n                  }\n                  \n                  // \u590D\u5236 required \u5B57\u6BB5\n                  if (tool.function.parameters.required && \n                      Array.isArray(tool.function.parameters.required) && \n                      tool.function.parameters.required.length > 0) {\n                    cleanedTool.parameters.required = tool.function.parameters.required;\n                  }\n                }\n                \n                const paramCount = cleanedTool.parameters ? Object.keys(cleanedTool.parameters.properties || {}).length : 0;\n                log(`\uD83D\uDD27 [GEMINI_TOOL_DEF] \u5DE5\u5177\u5B9A\u4E49: ${cleanedTool.name}, \u53C2\u6570\u6570\u91CF: ${paramCount}, \u683C\u5F0F: ${JSON.stringify(cleanedTool).substring(0, 200)}...`);\n                \n                return cleanedTool;\n              }) || [],\n          },\n        ] : [],\n      },\n      config: {\n        url: new URL(\n          `./${request.model}:${\n            request.stream ? \"streamGenerateContent?alt=sse\" : \"generateContent\"\n          }`,\n          provider.baseUrl\n        ),\n        headers: {\n          \"x-goog-api-key\": provider.apiKey,\n          Authorization: undefined,\n        },\n      },\n    };\n  }\n\n  transformRequestOut(request: Record<string, any>): UnifiedChatRequest {\n    const contents: GeminiContent[] = request.contents || [];\n    const tools: GeminiTool[] = request.tools || [];\n    const model: string = request.model;\n    const max_tokens: number | undefined = request.max_tokens;\n    const temperature: number | undefined = request.temperature;\n    const stream: boolean | undefined = request.stream;\n    const tool_choice = request.tool_choice;\n\n    const unifiedChatRequest: UnifiedChatRequest = {\n      messages: [],\n      model,\n      max_tokens,\n      temperature,\n      stream,\n      tool_choice,\n    };\n\n    contents.forEach((content) => {\n      const message: UnifiedMessage = {\n        role: content.role === \"model\" ? \"assistant\" : \"user\",\n        content: content.parts\n          .filter(part => part.text)\n          .map(part => ({\n            type: \"text\" as const,\n            text: part.text || \"\",\n          })),\n      };\n      \n      // \u5904\u7406\u5DE5\u5177\u8C03\u7528\n      const toolCalls = content.parts\n        .filter(part => part.functionCall)\n        .map(part => ({\n          id: part.functionCall?.id || `tool_${Math.random().toString(36).substring(2, 15)}`,\n          type: \"function\" as const,\n          function: {\n            name: part.functionCall?.name || \"\",\n            arguments: JSON.stringify(part.functionCall?.args || {}),\n          },\n        }));\n      \n      if (toolCalls.length > 0) {\n        message.tool_calls = toolCalls;\n      }\n      \n      unifiedChatRequest.messages.push(message);\n    });\n\n    if (tools.length > 0) {\n      unifiedChatRequest.tools = [];\n      tools.forEach((tool) => {\n        if (tool.functionDeclarations) {\n          tool.functionDeclarations.forEach((funcDecl) => {\n            unifiedChatRequest.tools!.push({\n              type: \"function\",\n              function: {\n                name: funcDecl.name,\n                description: funcDecl.description,\n                parameters: {\n                  type: \"object\",\n                  properties: funcDecl.parameters.properties || {},\n                  required: funcDecl.parameters.required || [],\n                  additionalProperties: funcDecl.parameters.additionalProperties\n                },\n              },\n            });\n          });\n        }\n      });\n    }\n\n    return unifiedChatRequest;\n  }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n      return this.handleNonStreamResponse(response);\n    } else if (response.headers.get(\"Content-Type\")?.includes(\"stream\")) {\n      return this.handleStreamResponse(response);\n    }\n    return response;\n  }\n\n  private async handleNonStreamResponse(response: Response): Promise<Response> {\n    // \u68C0\u67E5\u54CD\u5E94\u72B6\u6001\n    if (!response.ok) {\n      const errorText = await response.text();\n      log(`\u274C [GEMINI_ERROR] Gemini API \u9519\u8BEF\u54CD\u5E94: ${response.status} ${response.statusText}`);\n      log(`\u274C [GEMINI_ERROR] \u9519\u8BEF\u8BE6\u60C5: ${errorText}`);\n      throw new Error(`Gemini API error: ${response.status} ${response.statusText} - ${errorText}`);\n    }\n    \n    // \u8BB0\u5F55\u539F\u59CB\u54CD\u5E94\u5185\u5BB9\n    const responseClone = response.clone();\n    const rawResponseText = await responseClone.text();\n    log(`\uD83D\uDD0D [GEMINI_RAW_RESPONSE] \u670D\u52A1\u5668\u539F\u59CB\u54CD\u5E94: ${rawResponseText}`);\n    \n    const jsonResponse: any = JSON.parse(rawResponseText);\n    \n    // \u68C0\u67E5\u662F\u5426\u6709\u9519\u8BEF\u4FE1\u606F\n    if (jsonResponse.error) {\n      log(`\u274C [GEMINI_ERROR] Gemini API \u8FD4\u56DE\u9519\u8BEF: ${JSON.stringify(jsonResponse.error)}`);\n      throw new Error(`Gemini API error: ${jsonResponse.error.message || 'Unknown error'}`);\n    }\n    \n    if (!jsonResponse.candidates || !jsonResponse.candidates[0]) {\n      throw new Error(\"Invalid Gemini response format\");\n    }\n    \n    // \u68C0\u67E5 finishReason \u662F\u5426\u4E3A\u9519\u8BEF\u72B6\u6001\n    const candidate = jsonResponse.candidates[0];\n    if (candidate.finishReason === \"MALFORMED_FUNCTION_CALL\") {\n      log(`\u26A0\uFE0F [GEMINI_MALFORMED_FUNCTION] \u68C0\u6D4B\u5230\u5DE5\u5177\u8C03\u7528\u683C\u5F0F\u9519\u8BEF`);\n      // \u8FD4\u56DE\u4E00\u4E2A\u7A7A\u7684\u6210\u529F\u54CD\u5E94\uFF0C\u800C\u4E0D\u662F\u629B\u51FA\u9519\u8BEF\n      const errorRes = {\n        id: jsonResponse.responseId || `chatcmpl-${Date.now()}`,\n        choices: [\n          {\n            finish_reason: \"stop\",\n            index: 0,\n            message: {\n              content: \"\u62B1\u6B49\uFF0C\u5DE5\u5177\u8C03\u7528\u683C\u5F0F\u6709\u8BEF\uFF0C\u65E0\u6CD5\u6267\u884C\u3002\",\n              role: \"assistant\" as const,\n            },\n          },\n        ],\n        created: Math.floor(Date.now() / 1000),\n        model: jsonResponse.modelVersion || \"gemini-pro\",\n        object: \"chat.completion\" as const,\n        usage: jsonResponse.usageMetadata ? {\n          completion_tokens: jsonResponse.usageMetadata.candidatesTokenCount,\n          prompt_tokens: jsonResponse.usageMetadata.promptTokenCount,\n          total_tokens: jsonResponse.usageMetadata.totalTokenCount,\n        } : undefined,\n      };\n      \n      return new Response(JSON.stringify(errorRes), {\n        status: 200, // \u8FD4\u56DE200\u800C\u4E0D\u662F\u9519\u8BEF\u72B6\u6001\n        statusText: \"OK\",\n        headers: response.headers,\n      });\n    }\n    const tool_calls = candidate.content.parts\n      .filter((part: GeminiPart) => part.functionCall)\n      .map((part: GeminiPart) => {\n        // \u5B89\u5168\u5904\u7406 arguments\n        let args = part.functionCall?.args || {};\n        let argsString = \"\";\n        \n        try {\n          if (typeof args === \"string\") {\n            // \u5982\u679C\u5DF2\u7ECF\u662F\u5B57\u7B26\u4E32\uFF0C\u76F4\u63A5\u4F7F\u7528\n            argsString = args;\n          } else {\n            // \u5982\u679C\u662F\u5BF9\u8C61\uFF0C\u5E8F\u5217\u5316\u4E3A\u5B57\u7B26\u4E32\n            argsString = JSON.stringify(args);\n          }\n        } catch (error) {\n          log(`\u26A0\uFE0F [GEMINI_TOOL_ARGS_ERROR] \u5DE5\u5177\u53C2\u6570\u5E8F\u5217\u5316\u5931\u8D25: ${error}`);\n          argsString = \"{}\";\n        }\n        \n        return {\n          id: part.functionCall?.id || `tool_${Math.random().toString(36).substring(2, 15)}`,\n          type: \"function\" as const,\n          function: {\n            name: part.functionCall?.name || \"\",\n            arguments: argsString,\n          },\n        };\n      });\n\n    const res = {\n      id: jsonResponse.responseId || `chatcmpl-${Date.now()}`,\n      choices: [\n        {\n          finish_reason: candidate.finishReason?.toLowerCase() || null,\n          index: 0,\n          message: {\n            content: candidate.content.parts\n              .filter((part: GeminiPart) => part.text)\n              .map((part: GeminiPart) => part.text)\n              .join(\"\"),\n            role: \"assistant\" as const,\n            tool_calls: tool_calls.length > 0 ? tool_calls : undefined,\n          },\n        },\n      ],\n      created: Math.floor(Date.now() / 1000),\n      model: jsonResponse.modelVersion || \"gemini-pro\",\n      object: \"chat.completion\" as const,\n      usage: jsonResponse.usageMetadata ? {\n        completion_tokens: jsonResponse.usageMetadata.candidatesTokenCount,\n        prompt_tokens: jsonResponse.usageMetadata.promptTokenCount,\n        total_tokens: jsonResponse.usageMetadata.totalTokenCount,\n      } : undefined,\n    };\n\n    return new Response(JSON.stringify(res), {\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n    });\n  }\n\n  private handleStreamResponse(response: Response): Response {\n    if (!response.body) {\n      return response;\n    }\n\n    const decoder = new TextDecoder();\n    const encoder = new TextEncoder();\n    const stream = new ReadableStream({\n      async start(controller) {\n        const reader = response.body!.getReader();\n        let buffer = \"\"; // \u5F15\u5165\u7F13\u51B2\u533A\n        let usageMetadata: any = null;\n\n        try {\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) {\n              // \u5904\u7406\u7F13\u51B2\u533A\u4E2D\u53EF\u80FD\u6B8B\u7559\u7684\u6700\u540E\u4E00\u70B9\u6570\u636E\n              if (buffer.trim()) {\n                log(`\u26A0\uFE0F [GEMINI_STREAM_WARN] \u6D41\u7ED3\u675F\u65F6\u7F13\u51B2\u533A\u4E2D\u4ECD\u6709\u672A\u5904\u7406\u6570\u636E: ${buffer.substring(0, 200)}...`);\n              }\n\n              // \u53D1\u9001\u6700\u7EC8\u7684\u7ED3\u675F\u5757\n              log(`\uD83C\uDFC1 [GEMINI_STREAM_END] \u6D41\u771F\u6B63\u7ED3\u675F\uFF0C\u53D1\u9001\u6700\u7EC8\u5757`);\n              const finalRes: any = {\n                choices: [\n                  {\n                    delta: {\n                      role: \"assistant\",\n                      content: null,\n                    },\n                    finish_reason: \"stop\",\n                    index: 0,\n                    logprobs: null,\n                  },\n                ],\n                created: parseInt(new Date().getTime() / 1000 + \"\", 10),\n                id: \"final\",\n                model: \"gemini-pro\",\n                object: \"chat.completion.chunk\",\n                system_fingerprint: \"fp_a49d71b8a1\",\n              };\n              \n              if (usageMetadata) {\n                finalRes.usage = {\n                  completion_tokens: usageMetadata.candidatesTokenCount || 0,\n                  prompt_tokens: usageMetadata.promptTokenCount || 0,\n                  total_tokens: usageMetadata.totalTokenCount || 0,\n                };\n              }\n              \n              const finalChunk = `data: ${JSON.stringify(finalRes)}\\n\\n`;\n              log(`\uD83C\uDFC1 [GEMINI_FINAL_CHUNK] \u6700\u7EC8\u5757\u5185\u5BB9: ${finalChunk}`);\n              \n              controller.enqueue(\n                encoder.encode(finalChunk)\n              );\n              break;\n            }\n\n            // \u5C06\u65B0\u8BFB\u53D6\u7684\u6570\u636E\u8FFD\u52A0\u5230\u7F13\u51B2\u533A\n            buffer += decoder.decode(value, { stream: true });\n\n            // \u5904\u7406\u7F13\u51B2\u533A\u4E2D\u6240\u6709\u5B8C\u6574\u7684\u6D88\u606F\n            let boundary;\n            while ((boundary = buffer.indexOf('\\n\\n')) !== -1) {\n              const messageString = buffer.slice(0, boundary);\n              buffer = buffer.slice(boundary + 2); // \u4ECE\u7F13\u51B2\u533A\u79FB\u9664\u5DF2\u5904\u7406\u7684\u6D88\u606F\n\n              if (!messageString.startsWith(\"data: \")) {\n                continue;\n              }\n\n              const jsonStr = messageString.slice(6).trim();\n              if (!jsonStr) {\n                continue;\n              }\n\n              let chunk: any;\n              try {\n                chunk = JSON.parse(jsonStr);\n                if (chunk.usageMetadata) {\n                  usageMetadata = chunk.usageMetadata;\n                }\n              } catch (parseError: any) {\n                log(`\u26A0\uFE0F [GEMINI_CHUNK_PARSE_ERROR] \u5757\u89E3\u6790\u5931\u8D25: ${parseError}, \u5757\u5185\u5BB9: ${jsonStr.substring(0, 200)}...`);\n                // \u8FD9\u91CC\u4E0D\u518D\u5C1D\u8BD5\u4FEE\u590D\uFF0C\u56E0\u4E3A\u4E0D\u5B8C\u6574\u7684\u5757\u65E0\u6CD5\u4FEE\u590D\uFF0C\u76F4\u63A5\u8DF3\u8FC7\u7B49\u4E0B\u4E00\u4E2A\u5757\n                continue;\n              }\n\n              // \u68C0\u67E5\u662F\u5426\u6709 MALFORMED_FUNCTION_CALL \u9519\u8BEF\n              if ((chunk as any).candidates?.[0]?.finishReason === \"MALFORMED_FUNCTION_CALL\") {\n                log(`\u26A0\uFE0F [GEMINI_MALFORMED_FUNCTION_STREAM] \u68C0\u6D4B\u5230\u6D41\u5F0F\u54CD\u5E94\u4E2D\u7684\u5DE5\u5177\u8C03\u7528\u683C\u5F0F\u9519\u8BEF`);\n                // \u53D1\u9001\u9519\u8BEF\u6D88\u606F\u7ED9\u5BA2\u6237\u7AEF\n                const errorRes = {\n                  choices: [\n                    {\n                      delta: {\n                        role: \"assistant\",\n                        content: \"\u62B1\u6B49\uFF0C\u5DE5\u5177\u8C03\u7528\u683C\u5F0F\u6709\u8BEF\uFF0C\u65E0\u6CD5\u6267\u884C\u3002\",\n                      },\n                      finish_reason: \"stop\",\n                      index: 0,\n                      logprobs: null,\n                    },\n                  ],\n                  created: parseInt(new Date().getTime() / 1000 + \"\", 10),\n                  id: \"\",\n                  model: \"\",\n                  object: \"chat.completion.chunk\",\n                  system_fingerprint: \"fp_a49d71b8a1\",\n                };\n                controller.enqueue(\n                  encoder.encode(`data: ${JSON.stringify(errorRes)}\\n\\n`)\n                );\n                break; // \u7ED3\u675F\u6D41\n              }\n\n              const tool_calls = (chunk as any).candidates[0].content.parts\n                .filter((part: any) => part.functionCall)\n                .map((part: any) => {\n                  // \u5B89\u5168\u5904\u7406 arguments\n                  let args = part.functionCall?.args || {};\n                  let argsString = \"\";\n                  \n                  try {\n                    if (typeof args === \"string\") {\n                      // \u5982\u679C\u5DF2\u7ECF\u662F\u5B57\u7B26\u4E32\uFF0C\u76F4\u63A5\u4F7F\u7528\n                      argsString = args;\n                    } else {\n                      // \u5982\u679C\u662F\u5BF9\u8C61\uFF0C\u5E8F\u5217\u5316\u4E3A\u5B57\u7B26\u4E32\n                      argsString = JSON.stringify(args);\n                    }\n                  } catch (error) {\n                    log(`\u26A0\uFE0F [GEMINI_TOOL_ARGS_ERROR] \u5DE5\u5177\u53C2\u6570\u5E8F\u5217\u5316\u5931\u8D25: ${error}`);\n                    argsString = \"{}\";\n                  }\n                  \n                  // \u8BB0\u5F55\u5DE5\u5177\u8C03\u7528\u4FE1\u606F\n                  log(`\uD83D\uDD27 [GEMINI_TOOL_CALL] \u5DE5\u5177: ${part.functionCall?.name}, \u53C2\u6570\u957F\u5EA6: ${argsString.length}`);\n                  \n                  return {\n                    id:\n                      part.functionCall?.id ||\n                      `tool_${Math.random().toString(36).substring(2, 15)}`,\n                    type: \"function\",\n                    function: {\n                      name: part.functionCall?.name,\n                      arguments: argsString,\n                    },\n                  };\n                });\n\n              // \u63D0\u53D6 content\n              const content = (chunk as any).candidates[0].content.parts\n                .filter((part: any) => part.text)\n                .map((part: any) => part.text)\n                .join(\"\");\n\n              if (content) {\n                log(`\uD83D\uDCDD [GEMINI_CONTENT] content:\"${content}\"`);\n              }\n\n              if (tool_calls.length > 0) {\n                log(`\uD83D\uDD27 [GEMINI_TOOL_CALLS] \u5DE5\u5177\u8C03\u7528\u6570\u91CF: ${tool_calls.length}`);\n              }\n\n              // \u6D41\u8FDB\u884C\u4E2D\uFF0C\u6240\u6709\u5757\u90FD\u8BBE\u7F6E finish_reason: null\n              // \u5FFD\u7565 Gemini \u7684 finishReason\uFF0C\u56E0\u4E3A\u5B83\u53EA\u662F\u4E2D\u95F4\u4FE1\u53F7\n              const res: any = {\n                choices: [\n                  {\n                    delta: {\n                      role: \"assistant\",\n                      content: content || null,\n                      tool_calls:\n                        tool_calls.length > 0 ? tool_calls : undefined,\n                    },\n                    finish_reason: null, // \u6D41\u8FDB\u884C\u4E2D\uFF0C\u59CB\u7EC8\u4E3A null\n                    index:\n                      (chunk as any).candidates[0].index || tool_calls.length > 0\n                        ? 1\n                        : 0,\n                    logprobs: null,\n                  },\n                ],\n                created: parseInt(new Date().getTime() / 1000 + \"\", 10),\n                id: (chunk as any).responseId || \"\",\n                model: (chunk as any).modelVersion || \"\",\n                object: \"chat.completion.chunk\",\n                system_fingerprint: \"fp_a49d71b8a1\",\n              };\n\n              if ((chunk as any).usageMetadata) {\n                res.usage = {\n                  completion_tokens: (chunk as any).usageMetadata.candidatesTokenCount,\n                  prompt_tokens: (chunk as any).usageMetadata.promptTokenCount,\n                  total_tokens: (chunk as any).usageMetadata.totalTokenCount,\n                };\n              }\n\n              controller.enqueue(\n                encoder.encode(`data: ${JSON.stringify(res)}\\n\\n`)\n              );\n            }\n          }\n        } catch (error) {\n          log(`\u274C [GEMINI_STREAM_ERROR] \u6D41\u5904\u7406\u9519\u8BEF: ${error}`);\n          // \u53D1\u9001\u9519\u8BEF\u6D88\u606F\u7ED9\u5BA2\u6237\u7AEF\u800C\u4E0D\u662F\u76F4\u63A5\u9519\u8BEF\n          try {\n            const errorRes = {\n              choices: [\n                {\n                  delta: {\n                    role: \"assistant\",\n                    content: \"\u62B1\u6B49\uFF0C\u5904\u7406\u54CD\u5E94\u65F6\u51FA\u73B0\u9519\u8BEF\u3002\",\n                  },\n                  finish_reason: \"stop\",\n                  index: 0,\n                  logprobs: null,\n                },\n              ],\n              created: parseInt(new Date().getTime() / 1000 + \"\", 10),\n              id: \"\",\n              model: \"\",\n              object: \"chat.completion.chunk\",\n              system_fingerprint: \"fp_a49d71b8a1\",\n            };\n            controller.enqueue(\n              encoder.encode(`data: ${JSON.stringify(errorRes)}\\n\\n`)\n            );\n          } catch (finalError) {\n            log(`\u274C [GEMINI_FINAL_ERROR] \u53D1\u9001\u9519\u8BEF\u6D88\u606F\u5931\u8D25: ${finalError}`);\n          }\n        } finally {\n          controller.close();\n        }\n      },\n    });\n\n    return new Response(stream, {\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n    });\n  }\n} ", "import { UnifiedChatRequest } from \"../types/llm\";\nimport { Transformer } from \"../types/transformer\";\n\nexport class DeepseekTransformer implements Transformer {\n  name = \"deepseek\";\n\n  transformRequestIn(request: UnifiedChatRequest): UnifiedChatRequest {\n    if (request.max_tokens && request.max_tokens > 8192) {\n      request.max_tokens = 8192; // DeepSeek has a max token limit of 8192\n    }\n    return request;\n  }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n      const jsonResponse = await response.json();\n      // Handle non-streaming response if needed\n      return new Response(JSON.stringify(jsonResponse), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    } else if (response.headers.get(\"Content-Type\")?.includes(\"stream\")) {\n      if (!response.body) {\n        return response;\n      }\n\n      const decoder = new TextDecoder();\n      const encoder = new TextEncoder();\n      let reasoningContent = \"\";\n      let isReasoningComplete = false;\n\n      const stream = new ReadableStream({\n        async start(controller) {\n          const reader = response.body!.getReader();\n          try {\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) break;\n\n              const chunk = decoder.decode(value, { stream: true });\n              const lines = chunk.split(\"\\n\");\n\n              for (const line of lines) {\n                if (\n                  line.startsWith(\"data: \") &&\n                  line.trim() !== \"data: [DONE]\"\n                ) {\n                  try {\n                    const data = JSON.parse(line.slice(6));\n\n                    // Extract reasoning_content from delta\n                    if (data.choices?.[0]?.delta?.reasoning_content) {\n                      reasoningContent +=\n                        data.choices[0].delta.reasoning_content;\n                      const thinkingChunk = {\n                        ...data,\n                        choices: [\n                          {\n                            ...data.choices[0],\n                            delta: {\n                              ...data.choices[0].delta,\n                              thinking: {\n                                content:\n                                  data.choices[0].delta.reasoning_content,\n                              },\n                            },\n                          },\n                        ],\n                      };\n                      delete thinkingChunk.choices[0].delta.reasoning_content;\n                      const thinkingLine = `data: ${JSON.stringify(\n                        thinkingChunk\n                      )}\\n\\n`;\n                      controller.enqueue(encoder.encode(thinkingLine));\n                      continue;\n                    }\n\n                    // Check if reasoning is complete (when delta has content but no reasoning_content)\n                    if (\n                      data.choices?.[0]?.delta?.content &&\n                      reasoningContent &&\n                      !isReasoningComplete\n                    ) {\n                      isReasoningComplete = true;\n                      const signature = Date.now().toString();\n\n                      // Create a new chunk with thinking block\n                      const thinkingChunk = {\n                        ...data,\n                        choices: [\n                          {\n                            ...data.choices[0],\n                            delta: {\n                              ...data.choices[0].delta,\n                              content: null,\n                              thinking: {\n                                content: reasoningContent,\n                                signature: signature,\n                              },\n                            },\n                          },\n                        ],\n                      };\n                      delete thinkingChunk.choices[0].delta.reasoning_content;\n                      // Send the thinking chunk\n                      const thinkingLine = `data: ${JSON.stringify(\n                        thinkingChunk\n                      )}\\n\\n`;\n                      controller.enqueue(encoder.encode(thinkingLine));\n                    }\n\n                    if (data.choices[0]?.delta?.reasoning_content) {\n                      delete data.choices[0].delta.reasoning_content;\n                    }\n\n                    // Send the modified chunk\n                    if (\n                      data.choices?.[0]?.delta &&\n                      Object.keys(data.choices[0].delta).length > 0\n                    ) {\n                      if (isReasoningComplete) {\n                        data.choices[0].index++;\n                      }\n                      const modifiedLine = `data: ${JSON.stringify(data)}\\n\\n`;\n                      controller.enqueue(encoder.encode(modifiedLine));\n                    }\n                  } catch (e) {\n                    // If JSON parsing fails, pass through the original line\n                    controller.enqueue(encoder.encode(line + \"\\n\"));\n                  }\n                } else {\n                  // Pass through non-data lines (like [DONE])\n                  controller.enqueue(encoder.encode(line + \"\\n\"));\n                }\n              }\n            }\n          } catch (error) {\n            controller.error(error);\n          } finally {\n            try {\n              reader.releaseLock();\n            } catch (e) {\n              console.error(\"Error releasing reader lock:\", e);\n            }\n            controller.close();\n          }\n        },\n      });\n\n      return new Response(stream, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: {\n          \"Content-Type\": response.headers.get(\"Content-Type\") || \"text/plain\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        },\n      });\n    }\n\n    return response;\n  }\n}\n", "import { UnifiedChatRequest } from \"../types/llm\";\nimport { Transformer } from \"../types/transformer\";\n\nexport class TooluseTransformer implements Transformer {\n  name = \"tooluse\";\n\n  transformRequestIn(request: UnifiedChatRequest): UnifiedChatRequest {\n    request.messages.push({\n      role: \"system\",\n      content: `<system-reminder>Tool mode is active. The user expects you to proactively execute the most suitable tool to help complete the task. \nBefore invoking a tool, you must carefully evaluate whether it matches the current task. If no available tool is appropriate for the task, you MUST call the \\`ExitTool\\` to exit tool mode \u2014 this is the only valid way to terminate tool mode.\nAlways prioritize completing the user's task effectively and efficiently by using tools whenever appropriate.</system-reminder>`,\n    });\n    if (request.tools?.length) {\n      request.tool_choice = \"required\";\n      request.tools.unshift({\n        type: \"function\",\n        function: {\n          name: \"ExitTool\",\n          description: `Use this tool when you are in tool mode and have completed the task. This is the only valid way to exit tool mode.\nIMPORTANT: Before using this tool, ensure that none of the available tools are applicable to the current task. You must evaluate all available options \u2014 only if no suitable tool can help you complete the task should you use ExitTool to terminate tool mode.\nExamples:\n1. Task: \"Use a tool to summarize this document\" \u2014 Do not use ExitTool if a summarization tool is available.\n2. Task: \"What\u2019s the weather today?\" \u2014 If no tool is available to answer, use ExitTool after reasoning that none can fulfill the task.`,\n          parameters: {\n            type: \"object\",\n            properties: {\n              response: {\n                type: \"string\",\n                description:\n                  \"Your response will be forwarded to the user exactly as returned \u2014 the tool will not modify or post-process it in any way.\",\n              },\n            },\n            required: [\"response\"],\n          },\n        },\n      });\n    }\n    return request;\n  }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n      const jsonResponse = await response.json();\n      if (\n        jsonResponse?.choices[0]?.message.tool_calls?.length &&\n        jsonResponse?.choices[0]?.message.tool_calls[0]?.function?.name ===\n          \"ExitTool\"\n      ) {\n        const toolCall = jsonResponse?.choices[0]?.message.tool_calls[0];\n        const toolArguments = JSON.parse(toolCall.function.arguments || \"{}\");\n        jsonResponse.choices[0].message.content = toolArguments.response || \"\";\n        delete jsonResponse.choices[0].message.tool_calls;\n      }\n\n      // Handle non-streaming response if needed\n      return new Response(JSON.stringify(jsonResponse), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    } else if (response.headers.get(\"Content-Type\")?.includes(\"stream\")) {\n      if (!response.body) {\n        return response;\n      }\n\n      const decoder = new TextDecoder();\n      const encoder = new TextEncoder();\n      let exitToolIndex = -1;\n      let exitToolResponse = \"\";\n\n      const stream = new ReadableStream({\n        async start(controller) {\n          const reader = response.body!.getReader();\n          try {\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) break;\n              const chunk = decoder.decode(value, { stream: true });\n              const lines = chunk.split(\"\\n\");\n              for (const line of lines) {\n                if (\n                  line.startsWith(\"data: \") &&\n                  line.trim() !== \"data: [DONE]\"\n                ) {\n                  try {\n                    const data = JSON.parse(line.slice(6));\n\n                    if (data.choices[0]?.delta?.tool_calls?.length) {\n                      const toolCall = data.choices[0].delta.tool_calls[0];\n\n                      if (toolCall.function?.name === \"ExitTool\") {\n                        exitToolIndex = toolCall.index;\n                        continue;\n                      } else if (\n                        exitToolIndex > -1 &&\n                        toolCall.index === exitToolIndex &&\n                        toolCall.function.arguments\n                      ) {\n                        exitToolResponse += toolCall.function.arguments;\n                        try {\n                          const response = JSON.parse(exitToolResponse);\n                          data.choices = [\n                            {\n                              delta: {\n                                role: \"assistant\",\n                                content: response.response || \"\",\n                              },\n                            },\n                          ];\n                          const modifiedLine = `data: ${JSON.stringify(\n                            data\n                          )}\\n\\n`;\n                          controller.enqueue(encoder.encode(modifiedLine));\n                        } catch (e) {}\n                        continue;\n                      }\n                    }\n\n                    if (\n                      data.choices?.[0]?.delta &&\n                      Object.keys(data.choices[0].delta).length > 0\n                    ) {\n                      const modifiedLine = `data: ${JSON.stringify(data)}\\n\\n`;\n                      controller.enqueue(encoder.encode(modifiedLine));\n                    }\n                  } catch (e) {\n                    // If JSON parsing fails, pass through the original line\n                    controller.enqueue(encoder.encode(line + \"\\n\"));\n                  }\n                } else {\n                  // Pass through non-data lines (like [DONE])\n                  controller.enqueue(encoder.encode(line + \"\\n\"));\n                }\n              }\n            }\n          } catch (error) {\n            controller.error(error);\n          } finally {\n            try {\n              reader.releaseLock();\n            } catch (e) {\n              console.error(\"Error releasing reader lock:\", e);\n            }\n            controller.close();\n          }\n        },\n      });\n\n      return new Response(stream, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: {\n          \"Content-Type\": response.headers.get(\"Content-Type\") || \"text/plain\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        },\n      });\n    }\n\n    return response;\n  }\n}\n", "import { MessageContent, TextContent, UnifiedChatRequest } from \"@/types/llm\";\nimport { Transformer } from \"../types/transformer\";\n\nexport class OpenrouterTransformer implements Transformer {\n  name = \"openrouter\";\n\n  transformRequestIn(request: UnifiedChatRequest): UnifiedChatRequest {\n    if (!request.model.includes('claude')) {\n      request.messages.forEach(msg => {\n        if (Array.isArray(msg.content)) {\n          (msg.content as MessageContent[]).forEach((item) => {\n            if ((item as TextContent).cache_control) {\n              delete (item as TextContent).cache_control;\n            }\n          });\n        } else if (msg.cache_control) {\n          delete msg.cache_control;\n        }\n      })\n    }\n    return request\n  }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    if (response.headers.get(\"Content-Type\")?.includes(\"application/json\")) {\n      const jsonResponse = await response.json();\n\n      // Handle non-streaming response if needed\n      return new Response(JSON.stringify(jsonResponse), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    } else if (response.headers.get(\"Content-Type\")?.includes(\"stream\")) {\n      if (!response.body) {\n        return response;\n      }\n\n      const decoder = new TextDecoder();\n      const encoder = new TextEncoder();\n\n      let hasTextContent = false;\n      let reasoningContent = \"\";\n      let isReasoningComplete = false;\n\n      const stream = new ReadableStream({\n        async start(controller) {\n          const reader = response.body!.getReader();\n          try {\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) break;\n              const chunk = decoder.decode(value, { stream: true });\n              const lines = chunk.split(\"\\n\");\n              for (const line of lines) {\n                if (\n                  line.startsWith(\"data: \") &&\n                  line.trim() !== \"data: [DONE]\"\n                ) {\n                  try {\n                    const data = JSON.parse(line.slice(6));\n\n                    if (data.choices[0]?.delta?.content && !hasTextContent) {\n                      hasTextContent = true;\n                    }\n\n                    // Extract reasoning_content from delta\n                    if (data.choices?.[0]?.delta?.reasoning) {\n                      reasoningContent += data.choices[0].delta.reasoning;\n                      const thinkingChunk = {\n                        ...data,\n                        choices: [\n                          {\n                            ...data.choices[0],\n                            delta: {\n                              ...data.choices[0].delta,\n                              thinking: {\n                                content: data.choices[0].delta.reasoning,\n                              },\n                            },\n                          },\n                        ],\n                      };\n                      delete thinkingChunk.choices[0].delta.reasoning;\n                      const thinkingLine = `data: ${JSON.stringify(\n                        thinkingChunk\n                      )}\\n\\n`;\n                      controller.enqueue(encoder.encode(thinkingLine));\n                      continue;\n                    }\n\n                    // Check if reasoning is complete (when delta has content but no reasoning_content)\n                    if (\n                      data.choices?.[0]?.delta?.content &&\n                      reasoningContent &&\n                      !isReasoningComplete\n                    ) {\n                      isReasoningComplete = true;\n                      const signature = Date.now().toString();\n\n                      // Create a new chunk with thinking block\n                      const thinkingChunk = {\n                        ...data,\n                        choices: [\n                          {\n                            ...data.choices[0],\n                            delta: {\n                              ...data.choices[0].delta,\n                              content: null,\n                              thinking: {\n                                content: reasoningContent,\n                                signature: signature,\n                              },\n                            },\n                          },\n                        ],\n                      };\n                      delete thinkingChunk.choices[0].delta.reasoning;\n                      // Send the thinking chunk\n                      const thinkingLine = `data: ${JSON.stringify(\n                        thinkingChunk\n                      )}\\n\\n`;\n                      controller.enqueue(encoder.encode(thinkingLine));\n                    }\n\n                    if (data.choices[0]?.delta?.reasoning) {\n                      delete data.choices[0].delta.reasoning;\n                    }\n\n                    if (\n                      data.choices[0]?.delta?.tool_calls?.length &&\n                      hasTextContent\n                    ) {\n                      data.choices[0].index += 1;\n                    }\n                    const modifiedLine = `data: ${JSON.stringify(data)}\\n\\n`;\n                    controller.enqueue(encoder.encode(modifiedLine));\n                  } catch (e) {\n                    // If JSON parsing fails, pass through the original line\n                    controller.enqueue(encoder.encode(line + \"\\n\"));\n                  }\n                } else {\n                  // Pass through non-data lines (like [DONE])\n                  controller.enqueue(encoder.encode(line + \"\\n\"));\n                }\n              }\n            }\n          } catch (error) {\n            controller.error(error);\n          } finally {\n            try {\n              reader.releaseLock();\n            } catch (e) {\n              console.error(\"Error releasing reader lock:\", e);\n            }\n            controller.close();\n          }\n        },\n      });\n\n      return new Response(stream, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: {\n          \"Content-Type\": response.headers.get(\"Content-Type\") || \"text/plain\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        },\n      });\n    }\n\n    return response;\n  }\n}\n", "import { Transformer, UnifiedChatRequest } from \"@/types/transformer\";\nimport { log } from \"@/utils/log\";\n\n/**\n * OpenAI Transformer - \u6A19\u6E96 OpenAI \u683C\u5F0F\u8655\u7406\u5668\n *\n * \u9019\u500B Transformer \u8CA0\u8CAC\u8655\u7406\u6240\u6709\u9032\u51FA `/v1/chat/completions` \u8DEF\u7531\u7684\u8ACB\u6C42\u548C\u97FF\u61C9\u3002\n * \u5B83\u6703\u8A18\u9304\u8ACB\u6C42\u548C\u97FF\u61C9\u7684\u65E5\u8A8C\uFF0C\u4E26\u78BA\u4FDD\u6578\u64DA\u683C\u5F0F\u7B26\u5408\u6A19\u6E96\u3002\n */\nexport class OpenAITransformer implements Transformer {\n  name = \"openai\";\n  endPoint = \"/v1/chat/completions\";\n\n  /**\n   * \u8F49\u63DB\u5916\u90E8\u8ACB\u6C42\u70BA\u7D71\u4E00\u683C\u5F0F\n   * @param request - \u5916\u90E8\u50B3\u5165\u7684\u8ACB\u6C42\u5C0D\u8C61 (any)\n   * @returns - \u7D71\u4E00\u683C\u5F0F\u7684\u804A\u5929\u8ACB\u6C42 (UnifiedChatRequest)\n   */\n  transformRequestOut(request: any): UnifiedChatRequest {\n    log(\"[OpenAI-Transformer] \u6536\u5230\u539F\u59CB\u8ACB\u6C42:\", JSON.stringify(request, null, 2));\n    // \u5047\u8A2D\u50B3\u5165\u7684 request \u5DF2\u7D93\u662F UnifiedChatRequest \u683C\u5F0F\n    return request as UnifiedChatRequest;\n  }\n\n  /**\n   * \u8F49\u63DB\u6700\u7D42\u97FF\u61C9\u4EE5\u4FBF\u767C\u56DE\u5BA2\u6236\u7AEF\n   * @param response - \u7D93\u904E Provider \u8655\u7406\u5F8C\u7684\u97FF\u61C9 (Response)\n   * @returns - \u6E96\u5099\u767C\u56DE\u7D66\u5BA2\u6236\u7AEF\u7684\u6700\u7D42\u97FF\u61C9 (Promise<Response>)\n   */\n  async transformResponseOut(response: Response): Promise<Response> {\n    // \u514B\u9686\u97FF\u61C9\u4EE5\u5B89\u5168\u5730\u8B80\u53D6\u5176\u5167\u5BB9\n    const responseClone = response.clone();\n    try {\n      const responseBody = await responseClone.json();\n      log(\n        \"[OpenAI-Transformer] \u767C\u9001\u6700\u7D42\u97FF\u61C9:\",\n        JSON.stringify(responseBody, null, 2)\n      );\n    } catch (error) {\n      log(\"[OpenAI-Transformer] \u7121\u6CD5\u89E3\u6790\u6700\u7D42\u97FF\u61C9\u70BA JSON:\", error);\n      // \u5982\u679C\u89E3\u6790\u5931\u6557\uFF0C\u53EF\u4EE5\u8A18\u9304\u6587\u672C\u5167\u5BB9\n      const textBody = await response.clone().text();\n      log(\"[OpenAI-Transformer] \u6700\u7D42\u97FF\u61C9 (\u6587\u672C):\", textBody);\n    }\n\n    // \u8FD4\u56DE\u539F\u59CB\u97FF\u61C9\uFF0C\u56E0\u70BA clone \u5F8C\u7684 body \u53EA\u80FD\u8B80\u53D6\u4E00\u6B21\n    return response;\n  }\n} ", "import { UnifiedTool } from \"../types/llm\";\nimport { log } from \"./log\";\n\n/**\n * NewAPI\u5DE5\u5177\u6E05\u7406\u5668 - \u667A\u80FD\u66FF\u6362\u7248\u672C\n * \u4E0D\u662F\u7B80\u5355\u5220\u9664\u5B57\u6BB5\uFF0C\u800C\u662F\u4F7F\u7528OpenAI\u652F\u6301\u7684\u7B49\u6548\u683C\u5F0F\u66FF\u4EE3\n */\nexport class NewAPIToolCleaner {\n  \n  /**\n   * \u6E05\u7406\u5DE5\u5177\u6570\u7EC4\uFF0C\u5C06\u4E0D\u517C\u5BB9\u5B57\u6BB5\u8F6C\u6362\u4E3A\u517C\u5BB9\u683C\u5F0F\n   */\n  static cleanTools(tools: UnifiedTool[]): UnifiedTool[] {\n    if (!tools || !Array.isArray(tools)) {\n      return tools;\n    }\n\n    const cleanedTools = tools.map(tool => this.cleanSingleTool(tool));\n    return cleanedTools;\n  }\n\n  /**\n   * \u6E05\u7406\u5355\u4E2A\u5DE5\u5177\u5B9A\u4E49\n   */\n  private static cleanSingleTool(tool: UnifiedTool): UnifiedTool {\n    const cleanedTool = JSON.parse(JSON.stringify(tool)); // \u6DF1\u62F7\u8D1D\n    \n    if (cleanedTool.function?.parameters) {\n      this.cleanJsonSchema(cleanedTool.function.parameters);\n    }\n    \n    return cleanedTool;\n  }\n\n  /**\n   * \u667A\u80FD\u6E05\u7406JSON Schema - \u4F7F\u7528\u66FF\u6362\u800C\u975E\u5220\u9664\u7B56\u7565\n   */\n  private static cleanJsonSchema(schema: any): void {\n    if (!schema || typeof schema !== 'object') return;\n\n    // \u5904\u7406properties\n    if (schema.properties && typeof schema.properties === 'object') {\n      Object.keys(schema.properties).forEach(key => {\n        this.cleanSchemaProperty(schema.properties[key]);\n      });\n    }\n\n    // \u5904\u7406\u6570\u7EC4items\n    if (schema.items) {\n      this.cleanSchemaProperty(schema.items);\n    }\n\n    // \u9012\u5F52\u5904\u7406\u5D4C\u5957\u7684anyOf, allOf, oneOf\u7B49\n    ['anyOf', 'allOf', 'oneOf'].forEach(key => {\n      if (Array.isArray(schema[key])) {\n        schema[key].forEach((subSchema: any) => this.cleanJsonSchema(subSchema));\n      }\n    });\n\n    // \u79FB\u9664\u786E\u8BA4\u4E0D\u652F\u6301\u7684\u5143\u6570\u636E\u5B57\u6BB5\uFF08\u8FD9\u4E9B\u5B57\u6BB5OpenAI\u786E\u5B9E\u4E0D\u9700\u8981\uFF09\n    delete schema.$schema;\n    delete schema.additionalProperties; // OpenAI\u7528strict\u6A21\u5F0F\u5904\u7406\n  }\n\n  /**\n   * \u6E05\u7406\u5355\u4E2A\u5C5E\u6027\uFF0C\u91CD\u70B9\u5904\u7406const\u5B57\u6BB5\n   */\n  private static cleanSchemaProperty(property: any): void {\n    if (!property || typeof property !== 'object') return;\n\n    // \uD83D\uDE80 \u5173\u952E\u6539\u8FDB\uFF1A\u5C06const\u8F6C\u6362\u4E3Aenum\uFF0C\u4FDD\u6301\u529F\u80FD\u5B8C\u6574\u6027\n    if (property.const !== undefined) {\n      // const: \"value\" \u2192 enum: [\"value\"]  \n      // \u8FD9\u6837\u4FDD\u6301\u4E86\u76F8\u540C\u7684\u7EA6\u675F\u529F\u80FD\uFF0C\u4F46\u4F7F\u7528OpenAI\u652F\u6301\u7684\u683C\u5F0F\n      property.enum = [property.const];\n      delete property.const;\n    }\n\n    // \u9012\u5F52\u5904\u7406\u5D4C\u5957\u5C5E\u6027\n    this.cleanJsonSchema(property);\n  }\n\n  /**\n   * \u9A8C\u8BC1\u6E05\u7406\u540E\u7684\u5DE5\u5177\u5B9A\u4E49\n   */\n  static validateCleanedTools(tools: UnifiedTool[]): boolean {\n    try {\n      // \u68C0\u67E5\u57FA\u672C\u7ED3\u6784\n      if (!Array.isArray(tools)) return false;\n      \n      for (const tool of tools) {\n        if (!tool.function?.name || !tool.function?.parameters) {\n          return false;\n        }\n        \n        // \u68C0\u67E5\u662F\u5426\u8FD8\u6709\u4E0D\u517C\u5BB9\u5B57\u6BB5\n        const hasIncompatibleFields = this.hasIncompatibleFields(tool.function.parameters);\n        if (hasIncompatibleFields) {\n          log(`\u26A0\uFE0F \u5DE5\u5177 ${tool.function.name} \u4ECD\u5305\u542B\u4E0D\u517C\u5BB9\u5B57\u6BB5`);\n          return false;\n        }\n      }\n      \n      return true;\n    } catch (error) {\n      log(`\u274C \u5DE5\u5177\u9A8C\u8BC1\u5931\u8D25: ${error}`);\n      return false;\n    }\n  }\n\n  /**\n   * \u68C0\u67E5\u662F\u5426\u8FD8\u6709\u4E0D\u517C\u5BB9\u5B57\u6BB5\n   */\n  private static hasIncompatibleFields(obj: any): boolean {\n    if (!obj || typeof obj !== 'object') return false;\n\n    // \u68C0\u67E5\u5DF2\u77E5\u7684\u4E0D\u517C\u5BB9\u5B57\u6BB5\n    const incompatibleFields = ['const', '$schema'];\n    \n    for (const field of incompatibleFields) {\n      if (obj[field] !== undefined) return true;\n    }\n\n    // \u9012\u5F52\u68C0\u67E5\u5D4C\u5957\u5BF9\u8C61\n    for (const key in obj) {\n      if (typeof obj[key] === 'object' && obj[key] !== null) {\n        if (this.hasIncompatibleFields(obj[key])) return true;\n      }\n    }\n\n    return false;\n  }\n} ", "/// <reference lib=\"DOM\" />\nimport { LLMProvider, UnifiedChatRequest } from \"../types/llm\";\nimport { Transformer } from \"../types/transformer\";\nimport { log } from \"../utils/log\";\nimport { NewAPIToolCleaner } from \"../utils/tool-cleaner\";\n\n// \u7248\u672C\u53F7\u5E38\u91CF\u5B9A\u4E49\nconst NEWAPI_VERSION = \"v18.1\"; // \uD83C\uDFAF \u7CBE\u7B80\u7A33\u5B9A\u7248\u672C\n\n// \uD83D\uDD27 \u5B89\u5168\u4E0E\u8C03\u8BD5\u914D\u7F6E\nconst SAFE_CONFIG = {\n  // \u5B89\u5168\u9608\u503C\n  MAX_REASONING_LENGTH: 50000,    // \u63A8\u7406\u5185\u5BB9\u6700\u5927\u957F\u5EA6\n  MAX_CHUNKS_PER_REQUEST: 1000,   // \u6BCF\u8BF7\u6C42\u6700\u5927chunk\u6570\n  \n  // \u8C03\u8BD5\u6A21\u5F0F\n  DEBUG_MODE: process.env.NEWAPI_DEBUG === 'true',\n  LOG_RAW_DATA: process.env.NEWAPI_LOG_RAW === 'true'\n};\n\n// \uD83D\uDD0D \u589E\u5F3A\u65E5\u5FD7\u7CFB\u7EDF - \u7ED3\u6784\u5316\u6807\u8BC6\u7B26 (\u4FDD\u6301\u4E0D\u53D8)\nconst LOG_PREFIX = `[NewAPI-${NEWAPI_VERSION}]`;\nconst LOG_MARKERS = {\n  ENTRY: `${LOG_PREFIX} \uD83D\uDCE5 [ENTRY]`,\n  EXIT: `${LOG_PREFIX} \uD83D\uDCE4 [EXIT]`,\n  PROCESSING: `${LOG_PREFIX} \u2699\uFE0F [PROCESSING]`,\n  MODEL_DETECT: `${LOG_PREFIX} \uD83D\uDD0D [MODEL-DETECT]`,\n  MODEL_THINKING: `${LOG_PREFIX} \uD83E\uDDE0 [MODEL-THINKING]`,\n  MSG_ANALYSIS: `${LOG_PREFIX} \uD83D\uDCCA [MSG-ANALYSIS]`,\n  MSG_TRANSFORM: `${LOG_PREFIX} \uD83D\uDD04 [MSG-TRANSFORM]`,\n  MSG_FIX: `${LOG_PREFIX} \uD83D\uDD27 [MSG-FIX]`,\n  MSG_VALIDATE: `${LOG_PREFIX} \u2705 [MSG-VALIDATE]`,\n  DEBUG_DETAIL: `${LOG_PREFIX} \uD83D\uDD0D [DEBUG]`,\n  DEBUG_CONTENT: `${LOG_PREFIX} \uD83D\uDCDD [DEBUG-CONTENT]`,\n  DEBUG_STRUCTURE: `${LOG_PREFIX} \uD83C\uDFD7\uFE0F [DEBUG-STRUCTURE]`,\n  SUCCESS: `${LOG_PREFIX} \u2705 [SUCCESS]`,\n  WARNING: `${LOG_PREFIX} \u26A0\uFE0F [WARNING]`,\n  ERROR: `${LOG_PREFIX} \u274C [ERROR]`,\n  INFO: `${LOG_PREFIX} \u2139\uFE0F [INFO]`,\n  TOOL_CLEAN: `${LOG_PREFIX} \uD83E\uDDF9 [TOOL-CLEAN]`,\n  TOOL_CHOICE: `${LOG_PREFIX} \uD83C\uDFAF [TOOL-CHOICE]`,\n  STATS: `${LOG_PREFIX} \uD83D\uDCC8 [STATS]`,\n  SUMMARY: `${LOG_PREFIX} \uD83D\uDCCB [SUMMARY]`,\n  RESPONSE_IN: `${LOG_PREFIX} \uD83D\uDCE8 [RESPONSE-IN]`,\n  RESPONSE_OUT: `${LOG_PREFIX} \uD83D\uDCE4 [RESPONSE-OUT]`,\n  STREAM_PROCESSING: `${LOG_PREFIX} \uD83C\uDF0A [STREAM]`,\n  REASONING_CONVERT: `${LOG_PREFIX} \uD83E\uDDE0 [REASONING-CONVERT]`,\n  SAFETY_CHECK: `${LOG_PREFIX} \uD83D\uDEE1\uFE0F [SAFETY]`,\n  DATA_FLOW: `${LOG_PREFIX} \uD83D\uDCCA [DATA-FLOW]`,\n  COMPLETION_DETECT: `${LOG_PREFIX} \uD83C\uDFAF [COMPLETION-DETECT]`,\n  SIGNATURE_GEN: `${LOG_PREFIX} \uD83D\uDD10 [SIGNATURE]`,\n  INDEX_HANDLE: `${LOG_PREFIX} \uD83D\uDCCD [INDEX]`,\n  CONTENT_TRACK: `${LOG_PREFIX} \uD83D\uDCDD [CONTENT-TRACK]`,\n  THINKING_TRACK: `${LOG_PREFIX} \uD83E\uDDE0 [THINKING-TRACK]`,\n  TEXT_TRACK: `${LOG_PREFIX} \uD83D\uDCC4 [TEXT-TRACK]`\n};\n\n/**\n * NewAPI Transformer - \u7CBE\u7B80\u7A33\u5B9A\u7248 v18.1\n * \n * \uD83C\uDFAF \u6838\u5FC3\u539F\u5219\uFF1A\n * 1. \u4E13\u6CE8\u6838\u5FC3\u8F6C\u6362\u903B\u8F91\uFF1A\u5904\u7406thinking\u6A21\u5F0F\u7684\u8BF7\u6C42\u548C\u54CD\u5E94\u3002\n * 2. \u4FDD\u7559\u8BE6\u7EC6\u65E5\u5FD7\uFF1A\u63D0\u4F9B\u5B8C\u6574\u7684\u53EF\u89C2\u6D4B\u6027\u3002\n * 3. \u79FB\u9664\u590D\u6742\u8BBE\u8BA1\uFF1A\u53BB\u9664A/B\u6D4B\u8BD5\u5F00\u5173\u548C\u5197\u4F59\u7684\u8F85\u52A9\u65B9\u6CD5\uFF0C\u4F7F\u4EE3\u7801\u66F4\u6613\u7EF4\u62A4\u3002\n */\nexport class NewAPITransformer implements Transformer {\n  name = \"newapi\";\n  version = `${NEWAPI_VERSION} - \u7CBE\u7B80\u7A33\u5B9A\u7248`;\n  /**\n   * \u5904\u7406\u53D1\u9001\u7ED9NewAPI\u7684\u8BF7\u6C42\n   */\n  transformRequestIn(\n    request: UnifiedChatRequest,\n    provider: LLMProvider\n  ): Record<string, any> {\n    log(`${LOG_MARKERS.ENTRY} \u5F00\u59CB\u5904\u7406\u8BF7\u6C42 - \u6A21\u578B: ${request.model}`);\n    \n    if (request.messages) {\n      log(`${LOG_MARKERS.MSG_ANALYSIS} \u5206\u6790\u6D88\u606F\u7ED3\u6784 - \u6D88\u606F\u6570\u91CF: ${request.messages.length}`);\n    }\n    let transformedRequest = { ...request };\n\n    log(`${LOG_MARKERS.PROCESSING} \u5F00\u59CB\u6A21\u578B\u68C0\u6D4B\u548C\u53C2\u6570\u4FEE\u590D`);\n    if (this.isThinkingModel(transformedRequest.model)) {\n      transformedRequest = this.fixThinkingModeParameters(transformedRequest);\n    }\n\n    if (transformedRequest.tools && transformedRequest.tools.length > 0) {\n      log(`${LOG_MARKERS.TOOL_CLEAN} \u5F00\u59CB\u6E05\u7406\u5DE5\u5177\u5B9A\u4E49 - \u5DE5\u5177\u6570\u91CF: ${transformedRequest.tools.length}`);\n      transformedRequest.tools = NewAPIToolCleaner.cleanTools(transformedRequest.tools);\n      log(`${LOG_MARKERS.TOOL_CLEAN} \u5DE5\u5177\u6E05\u7406\u5B8C\u6210`);\n    }\n\n    const hasThinking = (transformedRequest as any).thinking ? 'Yes' : 'No';\n    const toolCount = transformedRequest.tools ? transformedRequest.tools.length : 0;\n    log(`${LOG_MARKERS.SUMMARY} \u8F6C\u6362\u5B8C\u6210 - thinking\u6A21\u5F0F: ${hasThinking}, \u5DE5\u5177\u6570\u91CF: ${toolCount}`);\n    log(`${LOG_MARKERS.EXIT} \u8BF7\u6C42\u5904\u7406\u5B8C\u6210`);\n\n    return transformedRequest;\n  }\n\n  /**\n   * \u5904\u7406\u4ECENewAPI\u8FD4\u56DE\u7684\u54CD\u5E94\uFF08\u7CBE\u7B80\u7248\uFF09\n   */\n  async transformResponseOut(response: Response): Promise<Response> {\n    log(`${LOG_MARKERS.RESPONSE_IN} \u5F00\u59CB\u5904\u7406\u54CD\u5E94\u8F6C\u6362`);\n    if (response.headers.get(\"Content-Type\")?.includes(\"text/event-stream\")) {\n      log(`${LOG_MARKERS.STREAM_PROCESSING} \u5904\u7406\u6D41\u5F0F\u54CD\u5E94`);\n      \n      if (!response.body) {\n        log(`${LOG_MARKERS.WARNING} \u54CD\u5E94\u4F53\u4E3A\u7A7A\uFF0C\u76F4\u63A5\u8FD4\u56DE`);\n        return response;\n      }\n\n      const decoder = new TextDecoder();\n      const encoder = new TextEncoder();\n\n      const stream = new ReadableStream({\n        async start(controller) {\n          // \u6BCF\u4E2A\u6D41\u72EC\u7ACB\u7684\u72B6\u6001\u53D8\u91CF\uFF0C\u907F\u514D\u5E76\u53D1\u95EE\u9898\n          let chunkCounter = 0;\n          let reasoningAccumulator = \"\";\n          let isReasoningCompleted = false;\n          let hasTextContent = false;\n\n          const reader = response.body!.getReader();\n          \n          try {\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) {\n                log(`${LOG_MARKERS.DATA_FLOW} \u6D41\u5F0F\u54CD\u5E94\u5B8C\u6210 - \u603Bchunks: ${chunkCounter}, reasoning: ${reasoningAccumulator.length > 0 ? 'Yes' : 'No'}, text: ${hasTextContent ? 'Yes' : 'No'}`);\n                break;\n              }\n\n              const chunk = decoder.decode(value, { stream: true });\n              const lines = chunk.split(\"\\n\");\n\n              for (const line of lines) {\n                if (line.startsWith(\"data: \") && line.trim() !== \"data: [DONE]\") {\n                  try {\n                    let data = JSON.parse(line.slice(6));\n                    chunkCounter++;\n\n                    // \uD83D\uDEE1\uFE0F \u5B89\u5168\u68C0\u67E5\n                    if (chunkCounter > SAFE_CONFIG.MAX_CHUNKS_PER_REQUEST) {\n                      log(`${LOG_MARKERS.WARNING} chunk\u6570\u91CF\u8D85\u9650\uFF0C\u8DF3\u8FC7`);\n                      continue;\n                    }\n\n                    const delta = data.choices?.[0]?.delta;\n                    if (delta) {\n                      // \u8FFD\u8E2A\u63A8\u7406\u5185\u5BB9\n                      if (delta.reasoning_content) {\n                        reasoningAccumulator += delta.reasoning_content;\n                        log(`${LOG_MARKERS.THINKING_TRACK} \u63A8\u7406\u5185\u5BB9\u7D2F\u79EF - \u5F53\u524D\u957F\u5EA6: ${reasoningAccumulator.length}, \u65B0\u589E: ${delta.reasoning_content.length}`);\n                      }\n\n                      // \u8FFD\u8E2A\u6B63\u6587\u5185\u5BB9\n                      if (delta.content && !hasTextContent) {\n                        hasTextContent = true;\n                      }\n\n                      // \uD83D\uDD27 \u5173\u952E\u8F6C\u6362\uFF1A\u5C06reasoning_content\u8F6C\u6362\u4E3Athinking\n    if (delta.reasoning_content) {\n                        log(`${LOG_MARKERS.REASONING_CONVERT} \u8F6C\u6362reasoning_content \u2192 delta.thinking`);\n                        delta.thinking = { content: delta.reasoning_content };\n                        delete delta.reasoning_content;\n    }\n                    }\n\n                    // \u6784\u5EFA\u56DE\u590D\u884C\n                    const finalLine = `data: ${JSON.stringify(data)}\\n\\n`;\n                    controller.enqueue(encoder.encode(finalLine));\n    } catch (e: any) {\n                    log(`${LOG_MARKERS.ERROR} JSON\u89E3\u6790\u5931\u8D25: ${e.message}`);\n                    // \u5B89\u5168\u56DE\u9000\uFF1A\u900F\u4F20\u539F\u59CB\u884C\n                    controller.enqueue(encoder.encode(line + \"\\n\"));\n    }\n                } else {\n                  // \u900F\u4F20\u975E\u6570\u636E\u884C\n                  controller.enqueue(encoder.encode(line + \"\\n\"));\n                }\n              }\n            }\n          } catch (error: any) {\n            log(`${LOG_MARKERS.ERROR} \u6D41\u5F0F\u54CD\u5E94\u5904\u7406\u9519\u8BEF: ${error.message}`);\n    try {\n              controller.error(error);\n            } catch (e) {\n              controller.close();\n    }\n          } finally {\n    try {\n              reader.releaseLock();\n              controller.close();\n    } catch (e: any) {\n              log(`${LOG_MARKERS.WARNING} \u6E05\u7406\u65F6\u51FA\u9519: ${e.message}`);\n    }\n  }\n        },\n      });\n\n      return new Response(stream, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    } else {\n      log(`${LOG_MARKERS.RESPONSE_IN} \u5904\u7406\u975E\u6D41\u5F0F\u54CD\u5E94`);\n      const jsonResponse = await response.json();\n\n      if (jsonResponse.choices?.[0]?.message?.reasoning_content) {\n        log(`${LOG_MARKERS.REASONING_CONVERT} \u68C0\u6D4B\u5230reasoning_content\uFF0C\u8F6C\u6362\u4E3Athinking\u683C\u5F0F`);\n        const reasoning = jsonResponse.choices[0].message.reasoning_content;\n        jsonResponse.choices[0].message.thinking = { content: reasoning };\n      }\n\n      return new Response(JSON.stringify(jsonResponse), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    }\n  }\n\n  /**\n   * \u4FEE\u590DClaude thinking\u6A21\u5F0F\u7684\u53C2\u6570\u683C\u5F0F\n   */\n  private fixThinkingModeParameters(request: UnifiedChatRequest): UnifiedChatRequest {\n    log(`${LOG_MARKERS.MODEL_THINKING} \u5F00\u59CB\u4FEE\u590Dthinking\u6A21\u5F0F\u53C2\u6570`);\n    const fixedRequest = { ...request };\n\n    (fixedRequest as any).thinking = {\n      type: \"enabled\",\n      budget_tokens: 10000\n    };\n    log(`${LOG_MARKERS.MODEL_THINKING} \u5DF2\u6DFB\u52A0thinking\u53C2\u6570: type=enabled, budget_tokens=10000`);\n\n    if (fixedRequest.messages && fixedRequest.messages.length > 0) {\n      fixedRequest.messages = this.fixMessagesForThinking(fixedRequest.messages);\n  }\n\n    if (fixedRequest.tool_choice && typeof fixedRequest.tool_choice === 'object') {\n      if (fixedRequest.tool_choice.type === \"any\" || fixedRequest.tool_choice.type === \"tool\") {\n        log(`${LOG_MARKERS.TOOL_CHOICE} \u4FEE\u6B63tool_choice: \u4E0D\u652F\u6301thinking\u6A21\u5F0F\u7684'${fixedRequest.tool_choice.type}'\uFF0C\u6539\u4E3A'auto'`);\n        fixedRequest.tool_choice = \"auto\";\n} \n    }\n\n    log(`${LOG_MARKERS.MODEL_THINKING} thinking\u6A21\u5F0F\u53C2\u6570\u4FEE\u590D\u5B8C\u6210`);\n    return fixedRequest;\n  }\n\n  private fixMessagesForThinking(messages: any[]): any[] {\n    log(`${LOG_MARKERS.MSG_ANALYSIS} \u5F00\u59CB\u5206\u6790\u6D88\u606F\u683C\u5F0F - \u603B\u6D88\u606F\u6570: ${messages.length}`);\n    const messageStats: { [key: string]: number } = {};\n    messages.forEach((msg, i) => {\n      messageStats[msg.role] = (messageStats[msg.role] || 0) + 1;\n    });\n\n    log(`${LOG_MARKERS.STATS} \u6D88\u606F\u7EDF\u8BA1: ${Object.entries(messageStats).map(([role, count]) => `${role}=${count}`).join(', ')}`);\n\n    const assistantIndices: number[] = [];\n    for (let i = 0; i < messages.length; i++) {\n      if (messages[i].role === 'assistant') {\n        assistantIndices.push(i);\n      }\n    }\n\n    if (assistantIndices.length === 0) {\n      log(`${LOG_MARKERS.INFO} \u672A\u627E\u5230assistant\u6D88\u606F\uFF0C\u65E0\u9700\u4FEE\u590Dthinking\u5757`);\n      return messages;\n    }\n\n    log(`${LOG_MARKERS.MSG_FIX} \u627E\u5230${assistantIndices.length}\u4E2Aassistant\u6D88\u606F\uFF0C\u5904\u7406\u4E2D`);\n    let fixedCount = 0;\n\n    for (const index of assistantIndices) {\n      const original = messages[index];\n      const fixed = this.ensureThinkingBlock(original.content, index);\n\n      if (fixed !== original.content) {\n        messages[index] = { ...original, content: fixed };\n        fixedCount++;\n      }\n    }\n\n    log(`${LOG_MARKERS.SUMMARY} thinking\u5757\u4FEE\u590D\u5B8C\u6210: \u4FEE\u590D\u4E86${fixedCount}\u4E2Aassistant\u6D88\u606F`);\n    return messages;\n  }\n\n  private ensureThinkingBlock(content: any, messageIndex: number): any {\n    if (!content || (Array.isArray(content) && content.length === 0)) {\n      log(`${LOG_MARKERS.WARNING} assistant\u6D88\u606F[${messageIndex}] content\u4E3A\u7A7A\uFF0C\u4EC5\u6DFB\u52A0thinking\u5757`);\n      return [\n        { type: 'thinking', text: '\u6211\u6B63\u5728\u5904\u7406\u8FD9\u4E2A\u8BF7\u6C42\u3002' }\n      ];\n    }\n\n    if (typeof content === 'string') {\n      log(`${LOG_MARKERS.MSG_TRANSFORM} assistant\u6D88\u606F[${messageIndex}] \u5B57\u7B26\u4E32content\u8F6C\u6362\u4E3A\u6570\u7EC4\u5E76\u6DFB\u52A0thinking\u5757`);\n      return [\n        { type: 'thinking', text: '\u8BA9\u6211\u5206\u6790\u8FD9\u4E2A\u8BF7\u6C42\u3002' },\n        { type: 'text', text: content }\n      ];\n    }\n\n    if (Array.isArray(content)) {\n      const hasThinking = content.length > 0 && [\"thinking\", \"redacted_thinking\"].includes(content[0]?.type);\n      if (hasThinking) return content;\n\n      log(`${LOG_MARKERS.MSG_FIX} assistant\u6D88\u606F[${messageIndex}] \u7F3A\u5C11thinking\u5757\uFF0C\u6DFB\u52A0\u5230\u5F00\u5934`);\n      const hasToolUse = content.some((block: any) => block.type === \"tool_use\");\n      const thinkingText = hasToolUse ? \"\u6211\u9700\u8981\u4F7F\u7528\u5DE5\u5177\u6765\u5B8C\u6210\u8FD9\u4E2A\u8BF7\u6C42\u3002\" : \"\u6211\u6B63\u5728\u5206\u6790\u8FD9\u4E2A\u8BF7\u6C42\u5E76\u51C6\u5907\u56DE\u5E94\u3002\";\n      return [\n        { type: 'thinking', text: thinkingText },\n        ...content\n      ];\n    }\n\n    return content;\n  }\n\n  /**\n   * \u68C0\u6D4B\u662F\u5426\u4E3Athinking\u6A21\u5F0F\u6A21\u578B\n   */\n  private isThinkingModel(model: string): boolean {\n    // \u68C0\u6D4B\u6A21\u578B\u540D\u4E2D\u662F\u5426\u5305\u542B\"thinking\"\n    const hasThinkingInName = model.includes(\"thinking\");\n\n    // \u68C0\u6D4B\u662F\u5426\u4E3A\u652F\u6301thinking\u7684\u7279\u5B9AClaude\u6A21\u578B\n    const isClaude4ThinkingModel =\n      model.includes(\"claude-sonnet-4-20250514\") ||\n      model.includes(\"claude-opus-4-20250514\") ||\n      model.includes(\"claude-3-7-sonnet\");\n\n    // \uD83C\uDD95 \u65B0\u589E\uFF1A\u68C0\u6D4B\u662F\u5426\u4E3A\u9700\u8981\u542F\u7528thinking\u6A21\u5F0F\u7684Gemini\u6A21\u578B\n    const isGeminiProThinkingModel = model.includes(\"gemini-2.5-pro\");\n\n    const isThinking = hasThinkingInName || isClaude4ThinkingModel || isGeminiProThinkingModel;\n\n    log(`${LOG_MARKERS.MODEL_DETECT} \u6A21\u578B\u68C0\u6D4B: \"${model}\"`);\n    log(`${LOG_MARKERS.MODEL_DETECT}   - \u540D\u79F0\u5305\u542Bthinking: ${hasThinkingInName}`);\n    log(`${LOG_MARKERS.MODEL_DETECT}   - \u662FClaude4\u6A21\u578B: ${isClaude4ThinkingModel}`);\n    log(`${LOG_MARKERS.MODEL_DETECT}   - \u662FGemini 2.5 Pro\u6A21\u578B: ${isGeminiProThinkingModel}`); // \uD83C\uDD95 \u65B0\u589E\u65E5\u5FD7\n    log(`${LOG_MARKERS.MODEL_DETECT}   - \u6700\u7EC8\u5224\u65AD: ${isThinking ? '\u542F\u7528thinking\u6A21\u5F0F' : '\u4E0D\u542F\u7528thinking\u6A21\u5F0F'}`);\n\n    return isThinking;\n  }\n  transformRequestOut(request: Record<string, any>): UnifiedChatRequest {\n    return request as UnifiedChatRequest;\n  }\n}\n", "import { LLMProvider, UnifiedChatRequest } from \"../types/llm\";\nimport { Transformer } from \"../types/transformer\";\nimport { log } from \"../utils/log\";\n\n// \u7248\u672C\u53F7\nconst GEMINI_NATIVE_VERSION = \"v1.0\";\n\n// \u65E5\u5FD7\u6807\u8BC6\u7B26\nconst LOG_PREFIX = `[Gemini-Native-${GEMINI_NATIVE_VERSION}]`;\nconst LOG_MARKERS = {\n  ENTRY: `${LOG_PREFIX} \uD83D\uDCE5 [\u5165\u53E3]`,\n  EXIT: `${LOG_PREFIX} \uD83D\uDCE4 [\u51FA\u53E3]`,\n  REQ_TRANSFORM: `${LOG_PREFIX} \uD83D\uDD04 [\u8BF7\u6C42\u8F6C\u6362]`,\n  RES_TRANSFORM: `${LOG_PREFIX} \uD83D\uDD04 [\u54CD\u5E94\u8F6C\u6362]`,\n  STREAM_PROCESSING: `${LOG_PREFIX} \uD83C\uDF0A [\u6D41\u5F0F\u5904\u7406]`,\n  TOOL_CONVERT: `${LOG_PREFIX} \uD83D\uDEE0\uFE0F [\u5DE5\u5177\u8F6C\u6362]`,\n  MESSAGE_CONVERT: `${LOG_PREFIX} \uD83D\uDCAC [\u6D88\u606F\u8F6C\u6362]`,\n  ERROR: `${LOG_PREFIX} \u274C [\u9519\u8BEF]`,\n  INFO: `${LOG_PREFIX} \u2139\uFE0F [\u4FE1\u606F]`,\n  DEBUG: `${LOG_PREFIX} \uD83D\uDD0D [\u8C03\u8BD5]`,\n};\n\n/**\n * GeminiNativeTransformer\n *\n * \u8D1F\u8D23\u5728\u7EDF\u4E00\u804A\u5929\u683C\u5F0F (UnifiedChatRequest) \u548C Google Gemini \u539F\u751F API \u683C\u5F0F\u4E4B\u95F4\u8FDB\u884C\u53CC\u5411\u8F6C\u6362\u3002\n *\n * \u4E3B\u8981\u529F\u80FD:\n * 1.  **\u8BF7\u6C42\u8F6C\u6362**: \u5C06\u4F20\u5165\u7684\u7EDF\u4E00\u8BF7\u6C42\u8F6C\u6362\u4E3A Gemini API \u6240\u9700\u7684 `generateContent` \u683C\u5F0F\u3002\n *     - \u8F6C\u6362 `messages` \u6570\u7EC4\uFF0C\u5904\u7406 `user`, `assistant`, `tool` \u7B49\u89D2\u8272\u3002\n *     - \u8F6C\u6362 `tools` \u6570\u7EC4\u4E3A Gemini \u7684 `tools` \u548C `tool_config` \u683C\u5F0F\u3002\n * 2.  **\u54CD\u5E94\u8F6C\u6362**: \u5C06 Gemini API \u7684\u54CD\u5E94\uFF08\u5305\u62EC\u6D41\u5F0F\u548C\u975E\u6D41\u5F0F\uFF09\u8F6C\u6362\u56DE\u7EDF\u4E00\u683C\u5F0F\u3002\n *     - \u5C06 Gemini \u7684 `functionCall` \u8F6C\u6362\u56DE `tool_calls`\u3002\n *     - \u5904\u7406\u6D41\u5F0F\u54CD\u5E94\u4E2D\u7684\u6587\u672C\u548C\u5DE5\u5177\u8C03\u7528\u589E\u91CF\u3002\n */\nexport class GeminiNativeTransformer implements Transformer {\n  name = \"gemini-native\";\n  version = `${GEMINI_NATIVE_VERSION} - \u521D\u59CB\u7248\u672C`;\n\n  /**\n   * \u5C06\u7EDF\u4E00\u8BF7\u6C42\u8F6C\u6362\u4E3A Gemini \u539F\u751F\u683C\u5F0F\n   */\n  transformRequestIn(\n    request: UnifiedChatRequest,\n    provider: LLMProvider\n  ): Record<string, any> {\n    log(`${LOG_MARKERS.ENTRY} \u5F00\u59CB\u8F6C\u6362\u53D1\u5F80 Gemini \u7684\u8BF7\u6C42`);\n\n    const geminiRequest: Record<string, any> = {};\n\n    // 1. \u8F6C\u6362\u6D88\u606F (contents)\n    geminiRequest.contents = this.convertMessagesToGemini(request.messages || []);\n    log(`${LOG_MARKERS.MESSAGE_CONVERT} \u6D88\u606F\u8F6C\u6362\u5B8C\u6210\uFF0C\u5171 ${geminiRequest.contents.length} \u6761`);\n\n    // 2. \u8F6C\u6362\u5DE5\u5177 (tools & tool_config)\n    if (request.tools && request.tools.length > 0) {\n      // \u9012\u5F52\u6E05\u7406\u6BCF\u4E2A tool \u7684\u53C2\u6570\n      request.tools.forEach(t => {\n        if (t.function && t.function.parameters) {\n          removeSchema(t.function.parameters);\n        }\n      });\n      geminiRequest.tools = [{ functionDeclarations: request.tools.map(t => t.function) }];\n      log(`${LOG_MARKERS.TOOL_CONVERT} \u5DE5\u5177\u5B9A\u4E49\u8F6C\u6362\u5B8C\u6210\uFF0C\u5171 ${request.tools.length} \u4E2A\u5DE5\u5177`);\n\n      // \u8BBE\u7F6E tool_config\n      if (request.tool_choice) {\n        if (typeof request.tool_choice === 'string' && ['auto', 'any', 'none'].includes(request.tool_choice)) {\n          geminiRequest.tool_config = { function_calling_config: { mode: request.tool_choice.toUpperCase() } };\n        } else if (typeof request.tool_choice === 'object' && request.tool_choice.type === 'tool') {\n          geminiRequest.tool_config = {\n            function_calling_config: {\n              mode: \"ANY\",\n              allowed_function_names: [request.tool_choice.name]\n            }\n          };\n        }\n        log(`${LOG_MARKERS.TOOL_CONVERT} \u5DE5\u5177\u9009\u62E9\u6A21\u5F0F\u8BBE\u7F6E\u4E3A: ${JSON.stringify(geminiRequest.tool_config)}`);\n      } else {\n        // \u9ED8\u8BA4\u884C\u4E3A\n        geminiRequest.tool_config = { function_calling_config: { mode: \"AUTO\" } };\n      }\n    }\n\n    // 3. \u8F6C\u6362\u5176\u4ED6\u53C2\u6570 (generationConfig)\n    geminiRequest.generationConfig = {\n        temperature: request.temperature,\n        maxOutputTokens: request.max_tokens,\n        ...(typeof (request as any).top_p !== 'undefined' ? { topP: (request as any).top_p } : {}),\n        ...(typeof (request as any).stop !== 'undefined' ? { stopSequences: (request as any).stop } : {}),\n    };\n\n    log(`${LOG_MARKERS.EXIT} Gemini \u8BF7\u6C42\u8F6C\u6362\u5B8C\u6210`);\n    if (process.env.GEMINI_LOG_RAW_REQ === 'true') {\n        log(`${LOG_MARKERS.DEBUG} \u8F6C\u6362\u540E\u7684\u8BF7\u6C42: ${JSON.stringify(geminiRequest, null, 2)}`);\n    }\n\n    return geminiRequest;\n  }\n\n  /**\n   * \u5C06 Gemini \u539F\u751F\u54CD\u5E94\u8F6C\u6362\u4E3A\u7EDF\u4E00\u683C\u5F0F\n   */\n  async transformResponseOut(response: Response): Promise<Response> {\n    log(`${LOG_MARKERS.RES_TRANSFORM} \u5F00\u59CB\u8F6C\u6362\u6765\u81EA Gemini \u7684\u54CD\u5E94 (\u5F3A\u5236\u975E\u6D41\u5F0F)`);\n    if (!response.body) {\n        log(`${LOG_MARKERS.ERROR} \u54CD\u5E94\u4F53\u4E3A\u7A7A`);\n        return new Response(JSON.stringify({ error: \"Empty response body\" }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' },\n        });\n    }\n\n    try {\n        const geminiJson = await response.json();\n        if (process.env.GEMINI_LOG_RAW_RES === 'true') {\n            log(`${LOG_MARKERS.DEBUG} \u539F\u59CB Gemini \u54CD\u5E94: ${JSON.stringify(geminiJson, null, 2)}`);\n        }\n        const unifiedJson = this.convertGeminiChunkToUnified(geminiJson, \"NON_STREAM\");\n        log(`${LOG_MARKERS.RES_TRANSFORM} \u975E\u6D41\u5F0F\u54CD\u5E94\u8F6C\u6362\u5B8C\u6210`);\n        return new Response(JSON.stringify(unifiedJson), {\n            status: response.status,\n            headers: { 'Content-Type': 'application/json' },\n        });\n    } catch (e: any) {\n        log(`${LOG_MARKERS.ERROR} \u89E3\u6790\u975E\u6D41\u5F0F\u54CD\u5E94\u5931\u8D25: ${e.message}`);\n        const responseText = await response.text(); // \u5C1D\u8BD5\u8BFB\u53D6\u539F\u59CB\u6587\u672C\n        log(`${LOG_MARKERS.ERROR} \u539F\u59CB\u54CD\u5E94\u6587\u672C: ${responseText}`);\n        return new Response(JSON.stringify({ \n            error: `Failed to parse non-streaming response: ${e.message}`,\n            original_response: responseText\n        }), {\n            status: 500,\n            headers: { 'Content-Type': 'application/json' },\n        });\n    }\n  }\n\n  // \u8F85\u52A9\u65B9\u6CD5\uFF1A\u5C06\u7EDF\u4E00\u6D88\u606F\u8F6C\u6362\u4E3A Gemini \u683C\u5F0F\n  private convertMessagesToGemini(messages: any[]): any[] {\n    const geminiMessages: any[] = [];\n    let systemContent = '';\n\n    // 1. \u63D0\u53D6\u7CFB\u7EDF\u63D0\u793A\u5185\u5BB9\u5E76\u8FC7\u6EE4\u6389 system \u6D88\u606F\n    const otherMessages = messages.filter(msg => {\n        if (msg.role === 'system') {\n            if (typeof msg.content === 'string') {\n                systemContent += `${msg.content}\\n\\n`;\n            } else if (Array.isArray(msg.content)) {\n                msg.content.forEach((c: any) => {\n                    if (c.type === 'text' && c.text) {\n                        systemContent += `${c.text}\\n\\n`;\n                    }\n                });\n            }\n            return false; // \u4ECE\u6D88\u606F\u5217\u8868\u4E2D\u79FB\u9664 system \u6D88\u606F\n        }\n        return true;\n    });\n\n    if (systemContent) {\n        log(`${LOG_MARKERS.DEBUG} \u63D0\u53D6\u5230\u7CFB\u7EDF\u63D0\u793A\u5185\u5BB9\uFF0C\u5C06\u5408\u5E76\u5230\u9996\u4E2A\u7528\u6237\u6D88\u606F\u4E2D\u3002`);\n    }\n\n    // 2. \u5904\u7406\u5269\u4F59\u7684\u6D88\u606F\n    otherMessages.forEach((msg, index) => {\n        let role: string;\n        let parts: any[] = [];\n        let isFirstUserMessage = false;\n\n        if (msg.role === 'user') {\n            role = 'user';\n            let userContent = '';\n            \n            // \u67E5\u627E\u8FD9\u662F\u4E0D\u662F\u5904\u7406\u5217\u8868\u4E2D\u7684\u7B2C\u4E00\u6761\u7528\u6237\u6D88\u606F\n            if (otherMessages.findIndex(m => m.role === 'user') === index) {\n                isFirstUserMessage = true;\n            }\n\n            if (typeof msg.content === 'string') {\n                userContent = msg.content;\n            } else if (Array.isArray(msg.content)) {\n                msg.content.forEach((c: any) => {\n                    if (c && c.type === 'text' && c.text) {\n                        userContent += c.text;\n                    }\n                    // \u6CE8\u610F: \u6B64\u5904\u7B80\u5316\u4E86\u5904\u7406\uFF0C\u672A\u5305\u542B\u56FE\u7247\u7B49\u5176\u4ED6\u5185\u5BB9\u7C7B\u578B\n                });\n            }\n            \n            // \u5C06\u7CFB\u7EDF\u63D0\u793A\u5185\u5BB9\u524D\u7F6E\u5230\u7B2C\u4E00\u6761\u7528\u6237\u6D88\u606F\n            if (isFirstUserMessage && systemContent) {\n                userContent = systemContent + userContent;\n                log(`${LOG_MARKERS.DEBUG} \u5DF2\u5C06\u7CFB\u7EDF\u63D0\u793A\u5408\u5E76\u5230\u7528\u6237\u6D88\u606F\u3002`);\n            }\n            parts.push({ text: userContent });\n\n        } else if (msg.role === 'assistant') {\n            role = 'model';\n            if (typeof msg.content === 'string' && msg.content) {\n                parts.push({ text: msg.content });\n            }\n            if (msg.tool_calls) {\n                msg.tool_calls.forEach((toolCall: any) => {\n                    try {\n                        parts.push({\n                            functionCall: {\n                                name: toolCall.function.name,\n                                args: JSON.parse(toolCall.function.arguments || '{}'),\n                            },\n                        });\n                    } catch (e: any) {\n                         log(`${LOG_MARKERS.ERROR} \u89E3\u6790\u5DE5\u5177\u8C03\u7528\u53C2\u6570\u5931\u8D25: ${e.message}`);\n                    }\n                });\n            }\n        } else if (msg.role === 'tool' || msg.role === 'function') {\n            role = 'function';\n            const toolName = msg.name;\n            if (!toolName) {\n                log(`${LOG_MARKERS.ERROR} tool/function \u6D88\u606F\u7F3A\u5C11 'name' \u5B57\u6BB5\uFF0C\u5DF2\u8DF3\u8FC7: ${JSON.stringify(msg)}`);\n                return;\n            }\n            let responseContent = {};\n            try {\n                // Gemini \u9700\u8981\u4E00\u4E2A JSON \u5BF9\u8C61\u4F5C\u4E3A response\n                responseContent = typeof msg.content === 'string' ? JSON.parse(msg.content) : msg.content;\n            } catch(e) {\n                responseContent = { content: msg.content };\n            }\n\n            parts.push({\n                functionResponse: {\n                    name: toolName,\n                    response: responseContent,\n                },\n            });\n        } else {\n            // \u5FFD\u7565\u4EFB\u4F55\u5176\u4ED6\u672A\u77E5\u89D2\u8272\n            return; \n        }\n\n        if (parts.length > 0 || (role === 'model' && msg.tool_calls)) {\n             geminiMessages.push({ role, parts });\n        }\n    });\n\n    return geminiMessages;\n  }\n\n  // \u8F85\u52A9\u65B9\u6CD5\uFF1A\u521B\u5EFA\u7EDF\u4E00\u683C\u5F0F\u7684\u6D41\n  private createUnifiedStream(responseBody: ReadableStream<Uint8Array>): ReadableStream<Uint8Array> {\n    const decoder = new TextDecoder();\n    const encoder = new TextEncoder();\n    let buffer = '';\n\n    return new ReadableStream({\n        start: async (controller) => {\n            const reader = responseBody.getReader();\n\n            const processBuffer = () => {\n                const lines = buffer.split(/\\r?\\n/);\n                buffer = lines.pop() || '';\n\n                for (const line of lines) {\n                    if (line.trim().length === 0) continue;\n\n                    log(`${LOG_MARKERS.DEBUG} Processing line: ${line}`);\n\n                    if (line.startsWith('data:')) {\n                        const jsonStr = line.substring(5).trim();\n                        if (jsonStr === '[DONE]') {\n                            log(`${LOG_MARKERS.DEBUG} Received [DONE] marker.`);\n                            continue;\n                        }\n                        try {\n                            const geminiChunk = JSON.parse(jsonStr);\n                            const unifiedChunk = this.convertGeminiChunkToUnified(geminiChunk, \"STREAM\");\n                            if (unifiedChunk) {\n                                const message = `data: ${JSON.stringify(unifiedChunk)}\\n\\n`;\n                                controller.enqueue(encoder.encode(message));\n                                log(`${LOG_MARKERS.STREAM_PROCESSING} Enqueued chunk.`);\n                            }\n                        } catch (e: any) {\n                            log(`${LOG_MARKERS.ERROR} JSON parse failed: ${e.message} - on line: ${jsonStr}`);\n                        }\n                    }\n                }\n            };\n\n            try {\n                while (true) {\n                    const { done, value } = await reader.read();\n                    if (done) {\n                        log(`${LOG_MARKERS.STREAM_PROCESSING} Reader is done.`);\n                        if (buffer.length > 0) {\n                            processBuffer();\n                        }\n                        break;\n                    }\n                    buffer += decoder.decode(value, { stream: true });\n                    processBuffer();\n                }\n            } catch (e: any) {\n                log(`${LOG_MARKERS.ERROR} Stream reading failed: ${e.message}`);\n                controller.error(e);\n            } finally {\n                log(`${LOG_MARKERS.STREAM_PROCESSING} Closing controller.`);\n                controller.close();\n            }\n        },\n        cancel: () => {\n            log(`${LOG_MARKERS.INFO} Stream was cancelled.`);\n        },\n    });\n  }\n\n\n  // \u6838\u5FC3\u8F6C\u6362\u903B\u8F91\uFF1A\u5C06\u5355\u4E2A Gemini \u5757\uFF08\u6D41\u5F0F\u6216\u975E\u6D41\u5F0F\uFF09\u8F6C\u6362\u4E3A\u7EDF\u4E00\u683C\u5F0F\n  private convertGeminiChunkToUnified(geminiChunk: any, context: \"STREAM\" | \"NON_STREAM\"): any {\n    const candidate = geminiChunk.candidates?.[0];\n    if (!candidate) {\n        return context === \"STREAM\" ? { id: 'unknown', choices: [{ delta: {} }] } : { id: 'unknown', choices: [{ message: {} }] };\n    }\n\n    const delta: Record<string, any> = {};\n    const parts = candidate.content?.parts || [];\n    const toolCalls: any[] = [];\n    let textContent = '';\n\n    parts.forEach((part: any, index: number) => {\n        if (part.text) {\n            textContent += part.text;\n        }\n        if (part.functionCall) {\n            toolCalls.push({\n                index: index,\n                id: part.functionCall.name, // Gemini \u4E0D\u63D0\u4F9B ID\uFF0C\u6682\u7528 name\n                type: 'function',\n                function: {\n                    name: part.functionCall.name,\n                    arguments: JSON.stringify(part.functionCall.args || {}),\n                },\n            });\n        }\n    });\n    \n    if (textContent) {\n        delta.content = textContent;\n    }\n    \n    if (toolCalls.length > 0) {\n        delta.tool_calls = toolCalls;\n    }\n\n    // \u6839\u636E\u4E0A\u4E0B\u6587\u6784\u5EFA\u4E0D\u540C\u7684\u54CD\u5E94\u7ED3\u6784\n    if (context === \"STREAM\") {\n        return {\n            id: geminiChunk.id || `chatcmpl-${Date.now()}`,\n            object: 'chat.completion.chunk',\n            created: Math.floor(Date.now() / 1000),\n            model: 'gemini-native', // or a more specific model from request\n            choices: [{\n                index: 0,\n                delta: delta,\n                finish_reason: candidate.finishReason || null,\n            }],\n        };\n    } else { // NON_STREAM\n        const finishReason = candidate.finishReason || null;\n        return {\n            id: geminiChunk.responseId || `chatcmpl-${Date.now()}`,\n            object: 'chat.completion',\n            created: Math.floor(Date.now() / 1000),\n            model: geminiChunk.modelVersion || 'gemini-native',\n            choices: [{\n                index: 0,\n                message: {\n                    role: 'assistant',\n                    ...delta,\n                },\n                finish_reason: finishReason ? finishReason.toLowerCase() : null,\n            }],\n            usage: this.convertUsage(geminiChunk.usageMetadata),\n        };\n    }\n  }\n\n  // \u8F85\u52A9\u65B9\u6CD5\uFF1A\u8F6C\u6362 token \u7EDF\u8BA1\n  private convertUsage(usageMetadata?: any): Record<string, number> {\n      return {\n          completion_tokens: usageMetadata?.candidatesTokenCount || 0,\n          prompt_tokens: usageMetadata?.promptTokenCount || 0,\n          total_tokens: usageMetadata?.totalTokenCount || 0,\n      };\n  }\n  \n  // \u7528\u4E8E\u9002\u914D Transformer \u63A5\u53E3\uFF0C\u6B64\u5904\u8BF7\u6C42\u51FA\u7AD9\u65E0\u9700\u8F6C\u6362\n  transformRequestOut(request: Record<string, any>): UnifiedChatRequest {\n    return request as UnifiedChatRequest;\n  }\n}\n\n// \u9012\u5F52\u5220\u9664 $schema \u548C additionalProperties \u5B57\u6BB5\nfunction removeSchema(obj: any) {\n  if (Array.isArray(obj)) {\n    obj.forEach(removeSchema);\n  } else if (obj && typeof obj === 'object') {\n    delete obj.$schema;\n    delete obj.additionalProperties;\n    Object.values(obj).forEach(removeSchema);\n  }\n}\n", "import { Transformer } from \"../types/transformer.js\";\nimport { UnifiedChatRequest } from \"../types/llm\";\nimport { LLMProvider } from \"../types/llm\";\nimport { log } from \"@/utils/log\";\n\nexport class ZjcspaceProTransformer implements Transformer {\n  static LOG_PREFIX = '[ZjcspaceProTransformer v1.0.0]';\n  name = \"zjcspace-pro\";\n\n  transformRequestIn(request: UnifiedChatRequest, provider: LLMProvider): Record<string, any> {\n    const LOG_PREFIX = ZjcspaceProTransformer.LOG_PREFIX;\n    const LOG_MARKERS = {\n      REQUEST_OUT: `${LOG_PREFIX} \uD83D\uDCE4 [REQUEST-OUT]`,\n      REQUEST_BODY: `${LOG_PREFIX} \uD83D\uDCDD [REQUEST-BODY]`,\n      REQUEST_HEADERS: `${LOG_PREFIX} \uD83C\uDFF7\uFE0F [REQUEST-HEADERS]`,\n      STRICT_CLEAN: `${LOG_PREFIX} \uD83E\uDDF9 [STRICT-CLEAN]`,\n    };\n    // This is a simplified version of the strict clean from zjcspace, assuming the core logic is sound.\n    // For a production system, this would be refactored into a shared utility.\n    const allowedTop = [\n      'model', 'messages', 'tools', 'tool_choice', 'stream', 'max_tokens', 'temperature',\n      'top_p', 'n', 'stop', 'user'\n    ];\n    const allowedMsg = ['role', 'content', 'name', 'tool_calls', 'tool_call_id'];\n\n    function strictCleanMessages(messages: any[]): any[] {\n      if (!Array.isArray(messages)) return [];\n      return messages.map(msg => {\n        const cleanedMsg: any = {};\n        for (const k of allowedMsg) {\n          if (msg[k] !== undefined) {\n            cleanedMsg[k] = msg[k];\n          }\n        }\n        return cleanedMsg;\n      });\n    }\n\n    const requestBody: any = {};\n    for (const key of allowedTop) {\n        if ((request as any)[key] !== undefined) {\n            if (key === 'messages') {\n                requestBody[key] = strictCleanMessages((request as any)[key]);\n            } else {\n                requestBody[key] = (request as any)[key];\n            }\n        }\n    }\n    \n    // Ensure stream is explicitly set if not present, for clarity\n    if (requestBody.stream === undefined) {\n        requestBody.stream = true; // Defaulting to stream as we handle it manually\n    }\n\n\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${provider.apiKey}`\n    };\n\n    log(`${LOG_MARKERS.REQUEST_OUT} Building request for provider.`);\n    \n    return {\n      body: requestBody,\n      config: {\n        url: new URL(provider.baseUrl),\n        headers,\n      },\n    };\n  }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    const LOG_PREFIX = ZjcspaceProTransformer.LOG_PREFIX;\n    const LOG_MARKERS = {\n      RESPONSE_IN: `${LOG_PREFIX} \uD83D\uDCE8 [RESPONSE-IN]`,\n      STREAM_PROCESSING: `${LOG_PREFIX} \uD83C\uDF0A [STREAM-MANUAL]`,\n      EVENT: `${LOG_PREFIX} \uD83D\uDCE4 [EVENT]`,\n      ERROR: `${LOG_PREFIX} \u274C [ERROR]`,\n      INFO: `${LOG_PREFIX} \u2139\uFE0F [INFO]`,\n    };\n\n    const headersObj: Record<string, string> = {};\n    response.headers.forEach((value, key) => {\n      headersObj[key] = value;\n    });\n    log(`${LOG_MARKERS.RESPONSE_IN} Response headers: ` + JSON.stringify(headersObj));\n\n    if (!response.body) {\n        log(`${LOG_MARKERS.ERROR} Response body is empty, cannot process.`);\n        return new Response(\"Error: Response body is empty.\", { status: 500 });\n    }\n\n    log(`${LOG_MARKERS.STREAM_PROCESSING} Response detected, starting manual stream processing...`);\n    const decoder = new TextDecoder(\"utf-8\");\n    const encoder = new TextEncoder();\n\n    const stream = new ReadableStream({\n      async start(controller) {\n        const reader = response.body!.getReader();\n        \n        let buffer = \"\";\n        let braceCount = 0;\n        let jsonStartIndex = -1;\n\n        try {\n          while (true) {\n            const { done, value } = await reader.read();\n            if (done) {\n              if (buffer.trim().length > 0) {\n                  log(`${LOG_MARKERS.INFO} Stream ended, processing remaining buffer content:`, buffer);\n                  try {\n                      const finalJson = JSON.parse(buffer);\n                      const finalChunk = { choices: [{ delta: finalJson.choices[0].message, finish_reason: \"stop\" }] };\n                      controller.enqueue(encoder.encode(`data: ${JSON.stringify(finalChunk)}\\n\\n`));\n                  } catch (e) {\n                      log(`${LOG_MARKERS.ERROR} Failed to parse remaining buffer:`, e);\n                  }\n              }\n              break;\n            }\n\n            buffer += decoder.decode(value, { stream: true });\n\n            let cursor = 0;\n            while (cursor < buffer.length) {\n              const char = buffer[cursor];\n              \n              if (braceCount === 0 && char === '{') {\n                braceCount = 1;\n                jsonStartIndex = cursor;\n              } else if (jsonStartIndex !== -1) {\n                if (char === '{') braceCount++;\n                if (char === '}') braceCount--;\n              }\n\n              if (jsonStartIndex !== -1 && braceCount === 0) {\n                const jsonString = buffer.substring(jsonStartIndex, cursor + 1);\n                \n                try {\n                  const jsonData = JSON.parse(jsonString);\n                  log(`${LOG_MARKERS.EVENT} Successfully parsed and forwarding an independent message.`);\n\n                  const chunkToSend = {\n                    id: jsonData.id || `chunk-${Date.now()}`,\n                    object: \"chat.completion.chunk\",\n                    created: jsonData.created || Math.floor(Date.now() / 1000),\n                    model: jsonData.model || \"zjcspace-pro-model\",\n                    choices: [{\n                      index: 0,\n                      delta: jsonData.choices[0].message,\n                      finish_reason: null\n                    }]\n                  };\n                  \n                  controller.enqueue(encoder.encode(`data: ${JSON.stringify(chunkToSend)}\\n\\n`));\n\n                } catch (e) {\n                  log(`${LOG_MARKERS.ERROR} JSON parse failed, skipping chunk:`, jsonString, e);\n                }\n\n                buffer = buffer.substring(cursor + 1);\n                cursor = -1;\n                jsonStartIndex = -1;\n              }\n              cursor++;\n            }\n          }\n        } catch (error) {\n          log(`${LOG_MARKERS.ERROR} Manual stream processing exception:`, error);\n          controller.error(error);\n        } finally {\n          log(`${LOG_MARKERS.STREAM_PROCESSING} Manual stream processing complete, sending [DONE] signal.`);\n          controller.enqueue(encoder.encode(\"data: [DONE]\\n\\n\"));\n          try {\n            reader.releaseLock();\n          } catch {}\n          controller.close();\n        }\n      }\n    });\n\n    return new Response(stream, {\n      status: response.status,\n      statusText: response.statusText,\n      headers: {\n        \"Content-Type\": \"text/event-stream; charset=utf-8\",\n        \"Cache-Control\": \"no-cache\",\n        \"Connection\": \"keep-alive\",\n      },\n    });\n  }\n}\n", "import { Transformer } from \"../types/transformer.js\";\nimport { UnifiedChatRequest } from \"../types/llm\";\nimport { LLMProvider } from \"../types/llm\";\nimport { log } from \"@/utils/log\"; // \u5982\u679C\u6709 log \u5DE5\u5177\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport class ZjcspaceTransformer implements Transformer {\n  static LOG_PREFIX = '[ZjcspaceTransformer v1.7.0]';\n  name = \"zjcspace\"; \n  // endPoint = \"/v1/chat/completions\";\n  \n  // \u65E5\u5FD7\u7EA7\u522B\u914D\u7F6E\n  private logLevel: 'none' | 'error' | 'warn' | 'info' | 'debug' | 'verbose' = 'info';\n  \n  // \u65E5\u5FD7\u7EA7\u522B\u6743\u91CD\n  private readonly LOG_LEVELS = {\n    none: 0,\n    error: 1,\n    warn: 2,\n    info: 3,\n    debug: 4,\n    verbose: 5\n  };\n  \n  // \u65E5\u5FD7\u5206\u7C7B\u914D\u7F6E\n  private logCategories: {\n    input: boolean;\n    fieldCleanup: boolean;\n    tools: boolean;\n    messages: boolean;\n    requestBody: boolean;\n    responseProcessing: boolean;\n    streamProcessing: boolean;\n    contentAnalysis: boolean;\n    rawData: boolean;\n    chunkProcessing: boolean;\n  } = {\n    input: true,\n    fieldCleanup: true,\n    tools: true,\n    messages: true,\n    requestBody: true,\n    responseProcessing: true,\n    streamProcessing: true,\n    contentAnalysis: true,\n    rawData: false, // \u9ED8\u8BA4\u5173\u95ED\uFF0C\u56E0\u4E3A\u6570\u636E\u91CF\u5F88\u5927\n    chunkProcessing: false, // \u9ED8\u8BA4\u5173\u95ED\uFF0C\u56E0\u4E3Achunk\u6570\u91CF\u5F88\u591A\n  };\n  \n  constructor(options?: {\n    logLevel?: 'none' | 'error' | 'warn' | 'info' | 'debug' | 'verbose';\n    logCategories?: Partial<typeof ZjcspaceTransformer.prototype.logCategories>;\n  }) {\n    if (options?.logLevel) {\n      this.logLevel = options.logLevel;\n    }\n    if (options?.logCategories) {\n      this.logCategories = { ...this.logCategories, ...options.logCategories };\n    }\n  }\n  \n  // \u65E5\u5FD7\u8F93\u51FA\u65B9\u6CD5\n  private shouldLog(level: 'error' | 'warn' | 'info' | 'debug' | 'verbose', category?: keyof typeof ZjcspaceTransformer.prototype.logCategories): boolean {\n    // \u68C0\u67E5\u65E5\u5FD7\u7EA7\u522B\n    if (this.LOG_LEVELS[level] > this.LOG_LEVELS[this.logLevel]) {\n      return false;\n    }\n    \n    // \u68C0\u67E5\u65E5\u5FD7\u5206\u7C7B\n    if (category && !this.logCategories[category]) {\n      return false;\n    }\n    \n    return true;\n  }\n  \n  private log(level: 'error' | 'warn' | 'info' | 'debug' | 'verbose', message: string, category?: keyof typeof ZjcspaceTransformer.prototype.logCategories): void {\n    if (this.shouldLog(level, category)) {\n      log(message);\n    }\n  }\n\n  // \u6301\u4E45\u5316\u8BF7\u6C42\u4F53\u5230debug\u76EE\u5F55\n  private persistRequestBody(requestBody: any, requestId: string): void {\n    try {\n      // \u4F7F\u7528\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u7684debug\u6587\u4EF6\u5939\n      const debugDir = path.join(process.cwd(), 'debug');\n      \n      // \u786E\u4FDDdebug\u76EE\u5F55\u5B58\u5728\n      if (!fs.existsSync(debugDir)) {\n        fs.mkdirSync(debugDir, { recursive: true });\n      }\n      \n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const filename = `request-${requestId}-${timestamp}.json`;\n      const filepath = path.join(debugDir, filename);\n      \n      const debugData = {\n        timestamp: new Date().toISOString(),\n        requestId,\n        requestBody,\n        metadata: {\n          transformer: 'ZjcspaceTransformer',\n          version: 'v1.7.0'\n        }\n      };\n      \n      fs.writeFileSync(filepath, JSON.stringify(debugData, null, 2), 'utf8');\n      log(`[ZjcspaceTransformer] \uD83D\uDCBE \u8BF7\u6C42\u4F53\u5DF2\u6301\u4E45\u5316\u5230: ${filepath}`);\n    } catch (error) {\n      log(`[ZjcspaceTransformer] \u274C \u6301\u4E45\u5316\u8BF7\u6C42\u4F53\u5931\u8D25: ${error}`);\n    }\n  }\n\n  // \u6301\u4E45\u5316\u54CD\u5E94\u4F53\u5230debug\u76EE\u5F55\n  private persistResponseBody(responseBody: any, requestId: string, status: number): void {\n    try {\n      // \u4F7F\u7528\u5F53\u524D\u5DE5\u4F5C\u76EE\u5F55\u7684debug\u6587\u4EF6\u5939\n      const debugDir = path.join(process.cwd(), 'debug');\n      \n      // \u786E\u4FDDdebug\u76EE\u5F55\u5B58\u5728\n      if (!fs.existsSync(debugDir)) {\n        fs.mkdirSync(debugDir, { recursive: true });\n      }\n      \n      const timestamp = new Date().toISOString().replace(/[:.]/g, '-');\n      const filename = `response-${requestId}-${timestamp}.json`;\n      const filepath = path.join(debugDir, filename);\n      \n      const debugData = {\n        timestamp: new Date().toISOString(),\n        requestId,\n        status,\n        responseBody,\n        metadata: {\n          transformer: 'ZjcspaceTransformer',\n          version: 'v1.7.0'\n        }\n      };\n      \n      fs.writeFileSync(filepath, JSON.stringify(debugData, null, 2), 'utf8');\n      log(`[ZjcspaceTransformer] \uD83D\uDCBE \u54CD\u5E94\u4F53\u5DF2\u6301\u4E45\u5316\u5230: ${filepath}`);\n    } catch (error) {\n      log(`[ZjcspaceTransformer] \u274C \u6301\u4E45\u5316\u54CD\u5E94\u4F53\u5931\u8D25: ${error}`);\n    }\n  }\n\n  transformRequestIn(request: UnifiedChatRequest, provider: LLMProvider): Record<string, any> {\n    const LOG_PREFIX = ZjcspaceTransformer.LOG_PREFIX;\n    const LOG_MARKERS = {\n      REQUEST_OUT: `${LOG_PREFIX} \uD83D\uDCE4 [REQUEST-OUT]`,\n      REQUEST_BODY: `${LOG_PREFIX} \uD83D\uDCDD [REQUEST-BODY]`,\n      REQUEST_HEADERS: `${LOG_PREFIX} \uD83C\uDFF7\uFE0F [REQUEST-HEADERS]`,\n      STRICT_CLEAN: `${LOG_PREFIX} \uD83E\uDDF9 [STRICT-CLEAN]`,\n      INPUT_VALIDATION: `${LOG_PREFIX} \uD83D\uDD0D [INPUT-VALIDATION]`,\n      FIELD_CLEANUP: `${LOG_PREFIX} \uD83E\uDDFD [FIELD-CLEANUP]`,\n      TOOLS_PROCESSING: `${LOG_PREFIX} \uD83D\uDD27 [TOOLS-PROCESSING]`,\n      MESSAGES_PROCESSING: `${LOG_PREFIX} \uD83D\uDCAC [MESSAGES-PROCESSING]`,\n    };\n    \n    // \u8F93\u5165\u9A8C\u8BC1\u65E5\u5FD7\n    this.log('info', `${LOG_MARKERS.INPUT_VALIDATION} \u5F00\u59CB\u5904\u7406\u8BF7\u6C42 - model: ${request.model}, messages\u6570\u91CF: ${request.messages?.length || 0}, tools\u6570\u91CF: ${request.tools?.length || 0}`, 'input');\n    this.log('debug', `${LOG_MARKERS.INPUT_VALIDATION} provider\u4FE1\u606F - baseUrl: ${provider.baseUrl}, apiKey\u957F\u5EA6: ${provider.apiKey?.length || 0}`, 'input');\n    // \u9876\u5C42\u5B57\u6BB5\u767D\u540D\u5355 - \u9075\u5FAAOpenAI\u6807\u51C6\n    const allowedTop = [\n      'model', 'messages', 'tools', 'tool_choice', 'stream', 'max_tokens', 'max_completion_tokens',\n      'temperature', 'top_p', 'n', 'stop', 'user', 'logprobs', 'top_logprobs', 'response_format',\n      'seed', 'parallel_tool_calls', 'web_search_options', 'audio', 'modalities', 'prediction',\n      'reasoning_effort', 'metadata', 'store'\n    ];\n    \n    // messages \u5B57\u6BB5\u767D\u540D\u5355 (\u5DF2\u4FEE\u6539\uFF0C\u652F\u6301\u591A\u8F6E\u5BF9\u8BDD\u548C\u5DE5\u5177\u8C03\u7528)\n    const allowedMsg = ['role', 'content', 'name', 'tool_calls', 'tool_call_id'];\n    \n    // tools \u5B57\u6BB5\u767D\u540D\u5355\n    const allowedTool = ['type', 'function'];\n    // function \u5B57\u6BB5\u767D\u540D\u5355\n    const allowedFn = ['name', 'description', 'parameters'];\n    // parameters \u5B57\u6BB5\u767D\u540D\u5355 - \u4E25\u683C\u6309\u7167OpenAI\u5B98\u65B9\u6587\u6863\n    const allowedParam = [\n      'type', 'properties', 'required', 'enum', 'description', 'items'\n    ];\n\n    // \u5B57\u6BB5\u53D8\u66F4\u8FFD\u8E2A\n    const removedFields: string[] = [];\n    const addedFields: string[] = [];\n    \n    this.log('debug', `${LOG_MARKERS.FIELD_CLEANUP} \u5F00\u59CB\u5B57\u6BB5\u6E05\u7406 - \u8FFD\u8E2A\u5B57\u6BB5\u53D8\u66F4`, 'fieldCleanup');\n\n    function strictCleanParameters(params: any, path = ''): any {\n      if (!params || typeof params !== 'object') return params;\n      const cleaned: any = {};\n      for (const k in params) {\n        if (!allowedParam.includes(k)) {\n          removedFields.push(path ? `${path}.${k}` : k);\n        }\n      }\n      for (const k of allowedParam) {\n        if (params[k] !== undefined) {\n          if (k === 'properties' && typeof params[k] === 'object') {\n            cleaned.properties = {};\n            for (const pk in params.properties) {\n              cleaned.properties[pk] = strictCleanParameters(params.properties[pk], path ? `${path}.properties.${pk}` : `properties.${pk}`);\n            }\n          } else if (k === 'items' && typeof params[k] === 'object') {\n            cleaned.items = strictCleanParameters(params.items, path ? `${path}.items` : 'items');\n          } else {\n            cleaned[k] = params[k];\n          }\n        }\n      }\n      // array \u5FC5\u987B\u6709 items\n      if (cleaned.type === 'array' && !cleaned.items) {\n        cleaned.items = { type: 'string' };\n        addedFields.push(path ? `${path}.items` : 'items');\n      }\n      return cleaned;\n    }\n    const strictCleanTools = (tools: any[]): any[] | undefined => {\n      if (!Array.isArray(tools)) {\n        this.log('warn', `${LOG_MARKERS.TOOLS_PROCESSING} tools\u4E0D\u662F\u6570\u7EC4\uFF0C\u8DF3\u8FC7\u5904\u7406`, 'tools');\n        return undefined;\n      }\n      \n      this.log('info', `${LOG_MARKERS.TOOLS_PROCESSING} \u5F00\u59CB\u5904\u7406tools - \u539F\u59CB\u6570\u91CF: ${tools.length}`, 'tools');\n      \n      const cleaned = tools.map((tool, idx) => {\n        if (tool?.type === \"function\" && tool.function) {\n          const fn = tool.function;\n          const cleanedFn: any = {};\n          for (const k in fn) {\n            if (!allowedFn.includes(k)) {\n              removedFields.push(`tools[${idx}].function.${k}`);\n            }\n          }\n          for (const k of allowedFn) {\n            if (fn[k] !== undefined) {\n              if (k === 'parameters') {\n                cleanedFn.parameters = strictCleanParameters(fn.parameters, `tools[${idx}].function.parameters`);\n              } else {\n                cleanedFn[k] = fn[k];\n              }\n            }\n          }\n          return {\n            type: \"function\",\n            function: cleanedFn\n          };\n        }\n        return undefined;\n      }).filter(Boolean);\n      \n      this.log('info', `${LOG_MARKERS.TOOLS_PROCESSING} tools\u5904\u7406\u5B8C\u6210 - \u6E05\u7406\u540E\u6570\u91CF: ${cleaned.length}, \u79FB\u9664\u5B57\u6BB5: ${removedFields.filter(f => f.startsWith('tools')).join(', ') || '\u65E0'}`, 'tools');\n      \n      return cleaned.length > 0 ? cleaned : undefined;\n    };\n    const strictCleanMessages = (messages: any[]): any[] => {\n      if (!Array.isArray(messages)) {\n        this.log('warn', `${LOG_MARKERS.MESSAGES_PROCESSING} messages\u4E0D\u662F\u6570\u7EC4\uFF0C\u8FD4\u56DE\u7A7A\u6570\u7EC4`, 'messages');\n        return [];\n      }\n      \n      this.log('info', `${LOG_MARKERS.MESSAGES_PROCESSING} \u5F00\u59CB\u5904\u7406messages - \u539F\u59CB\u6570\u91CF: ${messages.length}`, 'messages');\n      \n      // \u5185\u5BB9\u6E05\u7406\u51FD\u6570\n      const cleanContent = (content: string): string => {\n        if (typeof content !== 'string') {\n          return content;\n        }\n        \n        let cleanedContent = content;\n        const originalLength = content.length;\n        const cleanupStats = {\n          nestedImages: 0,\n          malformedLinks: 0,\n          windowsPaths: 0,\n          excessiveLength: 0,\n          invalidUrls: 0,\n          brokenSyntax: 0\n        };\n        \n        // 1. \u4FEE\u590D\u5D4C\u5957Markdown\u56FE\u7247\u8BED\u6CD5 [![...](...)](...) -> [...](...)\n        const nestedImagePattern = /\\[!\\[([^\\]]*)\\]\\(([^)]+)\\)\\]\\(([^)]+)\\)/g;\n        const nestedImageMatches = content.match(nestedImagePattern);\n        if (nestedImageMatches && nestedImageMatches.length > 0) {\n          cleanupStats.nestedImages = nestedImageMatches.length;\n          this.log('warn', `${LOG_MARKERS.MESSAGES_PROCESSING} \u68C0\u6D4B\u5230\u5D4C\u5957Markdown\u56FE\u7247\u8BED\u6CD5\uFF0C\u8FDB\u884C\u6E05\u7406: ${nestedImageMatches.length} \u4E2A`, 'messages');\n          cleanedContent = cleanedContent.replace(nestedImagePattern, '[$1]($3)');\n        }\n        \n        // 2. \u4FEE\u590D\u4E0D\u5B8C\u6574\u7684Markdown\u94FE\u63A5\u8BED\u6CD5\n        // 2.1 \u4FEE\u590D\u7F3A\u5C11\u53F3\u62EC\u53F7\u7684\u94FE\u63A5 [...](... -> [...](...)\n        const incompleteLinkPattern = /\\[([^\\]]+)\\]\\(([^)]*)$/gm;\n        const incompleteLinkMatches = cleanedContent.match(incompleteLinkPattern);\n        if (incompleteLinkMatches && incompleteLinkMatches.length > 0) {\n          cleanupStats.malformedLinks += incompleteLinkMatches.length;\n          this.log('warn', `${LOG_MARKERS.MESSAGES_PROCESSING} \u68C0\u6D4B\u5230\u4E0D\u5B8C\u6574\u7684Markdown\u94FE\u63A5\uFF0C\u8FDB\u884C\u4FEE\u590D: ${incompleteLinkMatches.length} \u4E2A`, 'messages');\n          cleanedContent = cleanedContent.replace(incompleteLinkPattern, '[$1]($2)');\n        }\n        \n        // 2.2 \u4FEE\u590D\u7F3A\u5C11\u5DE6\u62EC\u53F7\u7684\u94FE\u63A5 [...](... -> [...](...)\n        const missingOpenBracketPattern = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n        const validLinks = cleanedContent.match(missingOpenBracketPattern);\n        if (validLinks) {\n          // \u68C0\u67E5\u662F\u5426\u6709\u4E0D\u5339\u914D\u7684\u62EC\u53F7\n          const openBrackets = (cleanedContent.match(/\\[/g) || []).length;\n          const closeBrackets = (cleanedContent.match(/\\]/g) || []).length;\n          const openParens = (cleanedContent.match(/\\(/g) || []).length;\n          const closeParens = (cleanedContent.match(/\\)/g) || []).length;\n          \n          if (openBrackets !== closeBrackets || openParens !== closeParens) {\n            cleanupStats.brokenSyntax = Math.abs(openBrackets - closeBrackets) + Math.abs(openParens - closeParens);\n            this.log('warn', `${LOG_MARKERS.MESSAGES_PROCESSING} \u68C0\u6D4B\u5230\u4E0D\u5339\u914D\u7684\u62EC\u53F7\uFF0C\u8FDB\u884C\u4FEE\u590D: \u65B9\u62EC\u53F7\u5DEE${Math.abs(openBrackets - closeBrackets)}, \u5706\u62EC\u53F7\u5DEE${Math.abs(openParens - closeParens)}`, 'messages');\n          }\n        }\n        \n        // 3. \u4FEE\u590DWindows\u8DEF\u5F84\u683C\u5F0F \\\\\\\\ -> /\n        const windowsPathPattern = /\\\\\\\\/g;\n        const windowsPathMatches = cleanedContent.match(windowsPathPattern);\n        if (windowsPathMatches && windowsPathMatches.length > 0) {\n          cleanupStats.windowsPaths = windowsPathMatches.length;\n          this.log('info', `${LOG_MARKERS.MESSAGES_PROCESSING} \u68C0\u6D4B\u5230Windows\u8DEF\u5F84\u683C\u5F0F\uFF0C\u8FDB\u884C\u4FEE\u590D: ${windowsPathMatches.length} \u4E2A`, 'messages');\n          cleanedContent = cleanedContent.replace(windowsPathPattern, '/');\n        }\n        \n        // 4. \u4FEE\u590D\u65E0\u6548\u7684URL\u683C\u5F0F\n        // 4.1 \u4FEE\u590D\u7F3A\u5C11\u534F\u8BAE\u7684URL\n        const urlPattern = /\\[([^\\]]+)\\]\\(([^)]+)\\)/g;\n        const urlMatches = cleanedContent.match(urlPattern);\n        if (urlMatches) {\n          let invalidUrlCount = 0;\n          cleanedContent = cleanedContent.replace(urlPattern, (match, text, url) => {\n            // \u68C0\u67E5URL\u662F\u5426\u6709\u6548\n            if (url && !url.startsWith('http://') && !url.startsWith('https://') && !url.startsWith('mailto:') && !url.startsWith('tel:') && !url.startsWith('#')) {\n              // \u5982\u679C\u662F\u76F8\u5BF9\u8DEF\u5F84\u6216\u672C\u5730\u8DEF\u5F84\uFF0C\u4FDD\u6301\u539F\u6837\n              if (url.startsWith('/') || url.startsWith('./') || url.startsWith('../')) {\n                return match;\n              }\n              // \u5982\u679C\u662F\u770B\u8D77\u6765\u50CF\u57DF\u540D\u7684\uFF0C\u6DFB\u52A0https://\n              if (url.includes('.') && !url.includes(' ') && !url.includes('\\\\')) {\n                invalidUrlCount++;\n                return `[${text}](https://${url})`;\n              }\n            }\n            return match;\n          });\n          if (invalidUrlCount > 0) {\n            cleanupStats.invalidUrls = invalidUrlCount;\n            this.log('info', `${LOG_MARKERS.MESSAGES_PROCESSING} \u4FEE\u590D\u65E0\u6548URL\u683C\u5F0F: ${invalidUrlCount} \u4E2A`, 'messages');\n          }\n        }\n        \n        // 5. \u6E05\u7406\u8FC7\u957F\u7684\u5185\u5BB9\uFF08\u5982\u679C\u8D85\u8FC7\u67D0\u4E2A\u9608\u503C\uFF09\n        const maxContentLength = 10000; // 10KB\n        if (cleanedContent.length > maxContentLength) {\n          cleanupStats.excessiveLength = cleanedContent.length - maxContentLength;\n          this.log('warn', `${LOG_MARKERS.MESSAGES_PROCESSING} \u5185\u5BB9\u8FC7\u957F (${cleanedContent.length} \u5B57\u7B26)\uFF0C\u8FDB\u884C\u622A\u65AD`, 'messages');\n          cleanedContent = cleanedContent.substring(0, maxContentLength) + '\\n\\n[\u5185\u5BB9\u5DF2\u622A\u65AD...]';\n        }\n        \n        // 6. \u4FEE\u590D\u5176\u4ED6\u5E38\u89C1\u7684Markdown\u8BED\u6CD5\u95EE\u9898\n        // 6.1 \u4FEE\u590D\u591A\u4F59\u7684\u7A7A\u683C\n        cleanedContent = cleanedContent.replace(/\\s+/g, ' ').replace(/\\n\\s*\\n\\s*\\n/g, '\\n\\n');\n        \n        // 6.2 \u4FEE\u590D\u4E0D\u6B63\u786E\u7684\u56FE\u7247\u8BED\u6CD5\n        const malformedImagePattern = /!\\[([^\\]]*)\\]\\(([^)]*)\\)/g;\n        const malformedImages = cleanedContent.match(malformedImagePattern);\n        if (malformedImages) {\n          cleanedContent = cleanedContent.replace(malformedImagePattern, (match, alt, src) => {\n            // \u5982\u679Calt\u4E3A\u7A7A\uFF0C\u4F7F\u7528\u9ED8\u8BA4\u503C\n            if (!alt || alt.trim() === '') {\n              return `![\u56FE\u7247](${src})`;\n            }\n            return match;\n          });\n        }\n        \n        // \u8BB0\u5F55\u6E05\u7406\u7EDF\u8BA1\n        if (cleanedContent !== content) {\n          const reduction = originalLength - cleanedContent.length;\n          const totalFixes = Object.values(cleanupStats).reduce((sum, count) => sum + count, 0);\n          \n          this.log('info', `${LOG_MARKERS.MESSAGES_PROCESSING} \u5185\u5BB9\u6E05\u7406\u5B8C\u6210 - \u539F\u59CB\u957F\u5EA6: ${originalLength}, \u6E05\u7406\u540E\u957F\u5EA6: ${cleanedContent.length}, \u51CF\u5C11: ${reduction} \u5B57\u7B26`, 'messages');\n          \n          if (totalFixes > 0) {\n            this.log('info', `${LOG_MARKERS.MESSAGES_PROCESSING} \u6E05\u7406\u7EDF\u8BA1: \u5D4C\u5957\u56FE\u7247${cleanupStats.nestedImages}, \u7578\u5F62\u94FE\u63A5${cleanupStats.malformedLinks}, Windows\u8DEF\u5F84${cleanupStats.windowsPaths}, \u65E0\u6548URL${cleanupStats.invalidUrls}, \u8BED\u6CD5\u9519\u8BEF${cleanupStats.brokenSyntax}, \u8D85\u957F\u5185\u5BB9${cleanupStats.excessiveLength}`, 'messages');\n          }\n        }\n        \n        return cleanedContent;\n      };\n      \n      const cleaned = messages.map((msg, idx) => {\n        const cleanedMsg: any = {};\n        for (const k of allowedMsg) {\n          if (msg[k] !== undefined) {\n            if (k === 'content') {\n              // content \u53EA\u5141\u8BB8 string, array, \u6216\u5728 tool_calls \u5B58\u5728\u65F6\u4E3A null\n              if (typeof msg.content === 'string' || Array.isArray(msg.content) || (msg.content === null && msg.tool_calls)) {\n                if (typeof msg.content === 'string') {\n                  // \u5BF9\u5B57\u7B26\u4E32\u5185\u5BB9\u8FDB\u884C\u6E05\u7406\n                  cleanedMsg.content = cleanContent(msg.content);\n                } else {\n                  cleanedMsg.content = msg.content;\n                }\n              }\n            } else {\n              cleanedMsg[k] = msg[k];\n            }\n          }\n        }\n        return cleanedMsg;\n      });\n      \n      this.log('info', `${LOG_MARKERS.MESSAGES_PROCESSING} messages\u5904\u7406\u5B8C\u6210 - \u6E05\u7406\u540E\u6570\u91CF: ${cleaned.length}`, 'messages');\n      \n      return cleaned;\n    };\n    function deepStrictClean(obj: any): any {\n      if (Array.isArray(obj)) {\n        return obj.map(deepStrictClean).filter(v => v !== undefined && v !== null && !(Array.isArray(v) && v.length === 0));\n      } else if (typeof obj === 'object' && obj !== null) {\n        const cleaned: any = {};\n        for (const k in obj) {\n          const v = deepStrictClean(obj[k]);\n          if (v !== undefined && v !== null && !(Array.isArray(v) && v.length === 0) && !(typeof v === 'object' && Object.keys(v).length === 0)) {\n            cleaned[k] = v;\n          }\n        }\n        return cleaned;\n      }\n      return obj;\n    }\n    // \u6784\u5EFA\u4E25\u683C\u683C\u5F0F\u5316\u540E\u7684\u8BF7\u6C42\u4F53\n    this.log('info', `${LOG_MARKERS.REQUEST_BODY} \u5F00\u59CB\u6784\u5EFA\u8BF7\u6C42\u4F53`, 'requestBody');\n    \n    const cleanedMessages = strictCleanMessages(request.messages);\n    const rawStrict: Record<string, any> = {\n      model: request.model,\n      messages: cleanedMessages,\n      tools: strictCleanTools(request.tools ?? []),\n      tool_choice: request.tool_choice, // \u6309\u5B9E\u9645\u8BF7\u6C42\u4F53\u51B3\u5B9A\n      stream: false, // \u5F3A\u5236\u975E\u6D41\u5F0F\u8BF7\u6C42 - \u8FD9\u6837\u670D\u52A1\u5668\u4F1A\u8FD4\u56DE\u975E\u6D41\u5F0F\u54CD\u5E94\uFF0C\u4FBF\u4E8E\u51C6\u786E\u8F6C\u53D1\n      max_tokens: request.max_tokens,\n      max_completion_tokens: (request as any).max_completion_tokens,\n      temperature: request.temperature,\n      top_p: (request as any).top_p,\n      n: (request as any).n,\n      stop: (request as any).stop,\n      user: (request as any).user,\n      logprobs: (request as any).logprobs,\n      top_logprobs: (request as any).top_logprobs,\n      response_format: (request as any).response_format,\n      seed: (request as any).seed,\n      parallel_tool_calls: (request as any).parallel_tool_calls,\n      web_search_options: (request as any).web_search_options,\n      audio: (request as any).audio,\n      modalities: (request as any).modalities,\n      prediction: (request as any).prediction,\n      reasoning_effort: (request as any).reasoning_effort,\n      metadata: (request as any).metadata,\n      store: (request as any).store,\n    };\n    \n    this.log('debug', `${LOG_MARKERS.REQUEST_BODY} \u539F\u59CB\u8BF7\u6C42\u4F53\u5B57\u6BB5: ${Object.keys(rawStrict).filter(k => rawStrict[k] !== undefined).join(', ')}`, 'requestBody');\n    \n    const requestBody: any = {};\n    for (const k of allowedTop) {\n      if (rawStrict[k] !== undefined) requestBody[k] = rawStrict[k];\n    }\n    \n    this.log('debug', `${LOG_MARKERS.REQUEST_BODY} \u767D\u540D\u5355\u8FC7\u6EE4\u540E\u5B57\u6BB5: ${Object.keys(requestBody).join(', ')}`, 'requestBody');\n    \n    const cleanedBody = deepStrictClean(requestBody);\n    \n    this.log('debug', `${LOG_MARKERS.REQUEST_BODY} \u6DF1\u5EA6\u6E05\u7406\u540E\u5B57\u6BB5: ${Object.keys(cleanedBody).join(', ')}`, 'requestBody');\n    this.log('info', `${LOG_MARKERS.REQUEST_BODY} \u5B57\u6BB5\u53D8\u66F4\u7EDF\u8BA1 - \u79FB\u9664: ${removedFields.length}, \u6DFB\u52A0: ${addedFields.length}`, 'requestBody');\n    if (removedFields.length > 0) {\n      this.log('debug', `${LOG_MARKERS.REQUEST_BODY} \u79FB\u9664\u7684\u5B57\u6BB5: ${removedFields.join(', ')}`, 'requestBody');\n    }\n    if (addedFields.length > 0) {\n      this.log('debug', `${LOG_MARKERS.REQUEST_BODY} \u6DFB\u52A0\u7684\u5B57\u6BB5: ${addedFields.join(', ')}`, 'requestBody');\n    }\n    \n    // \u4FDD\u5B58\u8BF7\u6C42\u4F53\u5230\u6587\u4EF6\n    const headers = {\n      \"Content-Type\": \"application/json\",\n      \"Authorization\": `Bearer ${provider.apiKey}`\n    };\n    this.log('info', `${LOG_MARKERS.REQUEST_OUT} \u5F00\u59CB\u6784\u5EFA\u8BF7\u6C42 (\u5F3A\u5236\u975E\u6D41\u5F0F\u8BF7\u6C42\uFF0C\u670D\u52A1\u5668\u5C06\u8FD4\u56DE\u975E\u6D41\u5F0F\u54CD\u5E94)`, 'requestBody');\n    this.log('debug', `${LOG_MARKERS.REQUEST_HEADERS} \u8BF7\u6C42\u5934: Content-Type=${headers[\"Content-Type\"]}, Authorization\u957F\u5EA6=${headers[\"Authorization\"].length}`, 'requestBody');\n    \n    // \u751F\u6210\u8BF7\u6C42ID\u7528\u4E8E\u6301\u4E45\u5316\n    const requestId = `req_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    // \u6301\u4E45\u5316\u8BF7\u6C42\u4F53\u5230debug\u76EE\u5F55\n    this.persistRequestBody(cleanedBody, requestId);\n    \n    // \u4E0D\u518D\u5728\u65E5\u5FD7\u4E2D\u6253\u5370\u5B8C\u6574\u7684\u8BF7\u6C42\u4F53\uFF0C\u907F\u514D\u5360\u6EE1\u7F13\u51B2\u533A\n    // \u8BF7\u6C42\u4F53\u5DF2\u901A\u8FC7persistRequestBody\u6301\u4E45\u5316\u5230debug\u76EE\u5F55\n    this.log('debug', `${LOG_MARKERS.REQUEST_BODY} \u8BF7\u6C42\u4F53\u5DF2\u6301\u4E45\u5316\u5230debug\u76EE\u5F55\uFF0C\u5B57\u6BB5\u6570\u91CF: ${Object.keys(cleanedBody).length}`, 'requestBody');\n    return {\n      body: cleanedBody,\n      config: {\n        url: new URL(provider.baseUrl),\n        headers,\n      },\n    };\n  }\n\n  async transformResponseOut(response: Response): Promise<Response> {\n    // \u751F\u6210\u54CD\u5E94ID\u7528\u4E8E\u6301\u4E45\u5316\n    const responseId = `resp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    // \u65E5\u5FD7\u6807\u7B7E\u5B9A\u4E49\n    const LOG_PREFIX = ZjcspaceTransformer.LOG_PREFIX;\n    const LOG_MARKERS = {\n      RESPONSE_IN: `${LOG_PREFIX} \uD83D\uDCE8 [RESPONSE-IN]`,\n      STREAM_PROCESSING: `${LOG_PREFIX} \uD83C\uDF0A [STREAM]`,\n      EVENT: `${LOG_PREFIX} \uD83D\uDCE4 [EVENT]`,\n      ERROR: `${LOG_PREFIX} \u274C [ERROR]`,\n      INFO: `${LOG_PREFIX} \u2139\uFE0F [INFO]`,\n      RAW_CHUNK: `${LOG_PREFIX} \uD83D\uDFE6 [RAW-CHUNK]`,\n      CHUNK_JSON: `${LOG_PREFIX} \uD83D\uDFE7 [CHUNK-JSON]`,\n      DECODED: `${LOG_PREFIX} \uD83D\uDFE9 [DECODED]`,\n      RESPONSE_PROCESSING: `${LOG_PREFIX} \uD83D\uDD04 [RESPONSE-PROCESSING]`,\n      CONTENT_ANALYSIS: `${LOG_PREFIX} \uD83D\uDCCA [CONTENT-ANALYSIS]`,\n    };\n    \n    this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} \u5F00\u59CB\u5904\u7406\u54CD\u5E94 - status: ${response.status}, statusText: ${response.statusText}`, 'responseProcessing');\n    // \u6253\u5370\u54CD\u5E94\u5934\n    const headersObj: Record<string, string> = {};\n    response.headers.forEach((value, key) => {\n      headersObj[key] = value;\n    });\n    this.log('info', `${LOG_MARKERS.RESPONSE_IN} \u54CD\u5E94\u5934: ` + JSON.stringify(headersObj), 'responseProcessing');\n    \n    // \u8BE6\u7EC6\u5206\u6790\u54CD\u5E94\u7C7B\u578B\n    this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} \u54CD\u5E94\u5206\u6790 - status: ${response.status}, statusText: ${response.statusText}`, 'contentAnalysis');\n    this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} Content-Type: ${response.headers.get(\"Content-Type\")}`, 'contentAnalysis');\n    this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} Content-Length: ${response.headers.get(\"Content-Length\")}`, 'contentAnalysis');\n    this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} Transfer-Encoding: ${response.headers.get(\"Transfer-Encoding\")}`, 'contentAnalysis');\n\n    const contentType = response.headers.get(\"Content-Type\") || \"\";\n    this.log('debug', `${LOG_MARKERS.CONTENT_ANALYSIS} \u54CD\u5E94Content-Type: ${contentType}`, 'contentAnalysis');\n    \n    // \u7531\u4E8E\u6211\u4EEC\u53D1\u9001\u7684\u662F\u975E\u6D41\u5F0F\u8BF7\u6C42\uFF0C206\u72B6\u6001\u7801\u53EF\u80FD\u662F\u7279\u6B8A\u7684\u54CD\u5E94\u683C\u5F0F\n    // \u4F18\u5148\u5C1D\u8BD5\u4F5C\u4E3AJSON\u54CD\u5E94\u5904\u7406\n    if (response.status === 206 && contentType.includes(\"application/json\")) {\n      this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} \u68C0\u6D4B\u5230206\u72B6\u6001\u7801\u7684JSON\u54CD\u5E94\uFF0C\u5C1D\u8BD5\u4F5C\u4E3AJSON\u54CD\u5E94\u5904\u7406`, 'responseProcessing');\n      try {\n        const clonedResponse = response.clone();\n        const jsonData = await clonedResponse.json();\n        this.log('info', `${LOG_MARKERS.RAW_CHUNK} 206\u54CD\u5E94\u5B9E\u9645\u5185\u5BB9: ${JSON.stringify(jsonData)}`, 'rawData');\n        \n        // \u6301\u4E45\u5316206\u54CD\u5E94\u5230debug\u76EE\u5F55\n        this.persistResponseBody(jsonData, responseId, response.status);\n        \n        // \u68C0\u67E5\u662F\u5426\u662F\u9519\u8BEF\u54CD\u5E94\n        if (jsonData && jsonData.error) {\n          this.log('error', `${LOG_MARKERS.ERROR} 206\u54CD\u5E94\u5305\u542B\u9519\u8BEF\u4FE1\u606F: ${jsonData.error.message}`, 'responseProcessing');\n          // \u5C06206\u9519\u8BEF\u54CD\u5E94\u8F6C\u6362\u4E3A200\u72B6\u6001\u7801\uFF0C\u4F46\u4FDD\u6301\u9519\u8BEF\u5185\u5BB9\n          return new Response(JSON.stringify(jsonData), {\n            status: 200,\n            statusText: 'OK',\n            headers: {\n              'Content-Type': 'application/json',\n              ...response.headers\n            },\n          });\n        }\n        \n        // \u5982\u679C\u786E\u5B9E\u662F\u6B63\u5E38\u7684JSON\u683C\u5F0F\uFF0C\u6309JSON\u54CD\u5E94\u5904\u7406\n        if (jsonData && typeof jsonData === 'object') {\n          this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} 206\u54CD\u5E94\u5B9E\u9645\u662FJSON\u683C\u5F0F\uFF0C\u6309JSON\u54CD\u5E94\u5904\u7406`, 'responseProcessing');\n          return this.handleJsonResponse(response, jsonData);\n        }\n      } catch (e) {\n        this.log('error', `${LOG_MARKERS.ERROR} 206\u54CD\u5E94JSON\u89E3\u6790\u5931\u8D25: ${e}`, 'responseProcessing');\n        return response;\n      }\n    }\n    \n    // \u771F\u6B63\u7684\u6D41\u5F0F\u54CD\u5E94\u5904\u7406\uFF08Content-Type\u5305\u542Bstream\uFF09\n    if (contentType.includes(\"stream\")) {\n      this.log('info', `${LOG_MARKERS.STREAM_PROCESSING} \u68C0\u6D4B\u5230\u771F\u6B63\u7684\u6D41\u5F0F\u54CD\u5E94 (status: ${response.status}, contentType: ${contentType})\uFF0C\u5F00\u59CB\u6807\u51C6OpenAI\u6D41\u5F0F\u8F93\u51FA`, 'streamProcessing');\n      if (!response.body) {\n        this.log('error', `${LOG_MARKERS.ERROR} \u6D41\u5F0F\u54CD\u5E94\u4F46body\u4E3A\u7A7A`, 'streamProcessing');\n        return response;\n      }\n      const decoder = new TextDecoder();\n      const encoder = new TextEncoder();\n      let chunkIndex = 0;\n      const transformer = this; // \u4FDD\u5B58\u5BF9transformer\u5B9E\u4F8B\u7684\u5F15\u7528\n      const stream = new ReadableStream({\n        async start(controller) {\n          const reader = response.body!.getReader();\n          try {\n            transformer.log('info', `${LOG_MARKERS.STREAM_PROCESSING} \u5F00\u59CB\u8BFB\u53D6\u6D41\u5F0F\u6570\u636E`, 'streamProcessing');\n            while (true) {\n              const { done, value } = await reader.read();\n              if (done) {\n                transformer.log('info', `${LOG_MARKERS.STREAM_PROCESSING} \u6D41\u5F0F\u8BFB\u53D6\u5B8C\u6210`, 'streamProcessing');\n                break;\n              }\n              const chunk = decoder.decode(value, { stream: true });\n              transformer.log('verbose', `${LOG_MARKERS.RAW_CHUNK} \u539F\u59CBchunk\u6570\u636E: ${JSON.stringify(chunk)}`, 'rawData');\n              const lines = chunk.split(\"\\n\");\n              transformer.log('debug', `${LOG_MARKERS.STREAM_PROCESSING} \u5206\u5272\u540E\u884C\u6570: ${lines.length}`, 'streamProcessing');\n              for (const line of lines) {\n                if (line.startsWith(\"data: \") && line.trim() !== \"data: [DONE]\") {\n                  try {\n                    const data = JSON.parse(line.slice(6));\n                    transformer.log('verbose', `${LOG_MARKERS.RAW_CHUNK} \u89E3\u6790chunk\u6570\u636E: ${JSON.stringify(data)}`, 'rawData');\n                    \n                    // \u6DFB\u52A0\u989D\u5916\u7684\u5B89\u5168\u68C0\u67E5\n                    if (!data || !data.choices || !Array.isArray(data.choices) || data.choices.length === 0) {\n                      transformer.log('error', `${LOG_MARKERS.ERROR} chunk\u6570\u636E\u683C\u5F0F\u5F02\u5E38: choices\u5B57\u6BB5\u7F3A\u5931\u6216\u4E3A\u7A7A`, 'streamProcessing');\n                      controller.enqueue(encoder.encode(line + \"\\n\"));\n                      continue;\n                    }\n                    const content = data.choices?.[0]?.delta?.content;\n                    transformer.log('debug', `${LOG_MARKERS.CHUNK_JSON} \u63D0\u53D6content: ${typeof content} - ${content}`, 'chunkProcessing');\n                    \n                    if (typeof content === \"string\" && content.length > 0) {\n                      const res = {\n                        choices: [\n                          {\n                            delta: {\n                              ...(chunkIndex === 0 ? { role: \"assistant\" } : {}),\n                              content\n                            },\n                            index: chunkIndex,\n                            finish_reason: null\n                          }\n                        ],\n                        created: data.created || Math.floor(Date.now() / 1000),\n                        id: data.id || \"\",\n                        model: data.model || \"\",\n                        object: \"chat.completion.chunk\"\n                      };\n                      transformer.log('debug', `${LOG_MARKERS.DECODED} \u53D1\u9001chunk ${chunkIndex}: ${JSON.stringify(res)}`, 'chunkProcessing');\n                      controller.enqueue(encoder.encode(`data: ${JSON.stringify(res)}\\n\\n`));\n                      chunkIndex++;\n                    } else {\n                      transformer.log('debug', `${LOG_MARKERS.INFO} \u8DF3\u8FC7\u7A7Acontent\u7684chunk`, 'chunkProcessing');\n                    }\n                  } catch (e) {\n                    transformer.log('error', `${LOG_MARKERS.ERROR} chunk\u89E3\u6790\u5931\u8D25: ${e}`, 'streamProcessing');\n                    controller.enqueue(encoder.encode(line + \"\\n\"));\n                  }\n                } else {\n                  controller.enqueue(encoder.encode(line + \"\\n\"));\n                }\n              }\n            }\n            // \u8865\u53D1\u6700\u540E\u4E00\u4E2A finish_reason: 'stop' \u7684 chunk\n            transformer.log('info', `${LOG_MARKERS.INFO} \u6D41\u5F0F\u5904\u7406\u5B8C\u6210\uFF0C\u53D1\u9001\u7ED3\u675Fchunk - \u603Bchunk\u6570: ${chunkIndex}`, 'streamProcessing');\n            const res = {\n              choices: [\n                {\n                  delta: {},\n                  index: chunkIndex,\n                  finish_reason: \"stop\"\n                }\n              ],\n              created: Math.floor(Date.now() / 1000),\n              id: `done_${Date.now()}`,\n              model: \"zjcspace\",\n              object: \"chat.completion.chunk\"\n            };\n            controller.enqueue(encoder.encode(`data: ${JSON.stringify(res)}\\n\\n`));\n            controller.enqueue(encoder.encode(\"data: [DONE]\\n\\n\"));\n          } catch (error) {\n            transformer.log('error', `${LOG_MARKERS.ERROR} \u6D41\u5F0F\u5904\u7406\u5F02\u5E38: ${error}`, 'streamProcessing');\n            controller.error(error);\n          } finally {\n            try { reader.releaseLock(); } catch {}\n            controller.close();\n          }\n        }\n      });\n      return new Response(stream, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: {\n          \"Content-Type\": response.headers.get(\"Content-Type\") || \"text/plain\",\n          \"Cache-Control\": \"no-cache\",\n          Connection: \"keep-alive\",\n        },\n      });\n    }\n    // \u975E\u6D41\u5F0F JSON \u54CD\u5E94\u65F6\u6253\u5370\u5185\u5BB9\u548C\u505A\u5185\u5BB9\u6E05\u6D17\n    if (contentType.includes(\"application/json\")) {\n      this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} \u68C0\u6D4B\u5230JSON\u54CD\u5E94\uFF0C\u5F00\u59CB\u5904\u7406`, 'responseProcessing');\n      \n      let jsonResponse;\n      try {\n        // \u53EA\u8BFB\u53D6\u4E00\u6B21\u54CD\u5E94\u4F53\n        jsonResponse = await response.json();\n        // \u6253\u5370\u54CD\u5E94\u5185\u5BB9\u7528\u4E8E\u8C03\u8BD5\n        this.log('info', `${LOG_MARKERS.INFO} \u54CD\u5E94\u5185\u5BB9: ${JSON.stringify(jsonResponse)}`, 'rawData');\n      } catch (e) {\n        this.log('error', `${LOG_MARKERS.ERROR} \u54CD\u5E94\u4F53\u89E3\u6790\u5931\u8D25: ${e}`, 'responseProcessing');\n        return response;\n      }\n      // \u6DFB\u52A0\u989D\u5916\u7684\u5B89\u5168\u68C0\u67E5\n      if (!jsonResponse || !jsonResponse.choices || !Array.isArray(jsonResponse.choices) || jsonResponse.choices.length === 0) {\n        this.log('error', `${LOG_MARKERS.ERROR} \u54CD\u5E94\u683C\u5F0F\u5F02\u5E38: choices \u5B57\u6BB5\u7F3A\u5931\u6216\u4E3A\u7A7A`, 'responseProcessing');\n        return response;\n      }\n      \n      this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} \u54CD\u5E94\u683C\u5F0F\u6B63\u5E38 - choices\u6570\u91CF: ${jsonResponse.choices.length}`, 'contentAnalysis');\n      \n      const messageContent = jsonResponse.choices?.[0]?.message?.content;\n      this.log('debug', `${LOG_MARKERS.CONTENT_ANALYSIS} \u63D0\u53D6message content: ${typeof messageContent} - \u957F\u5EA6: ${typeof messageContent === 'string' ? messageContent.length : 'N/A'}`, 'contentAnalysis');\n      \n      if (typeof messageContent === 'string') {\n        const jsonMatch = messageContent.match(/```json\\n([\\s\\S]*?)\\n```/);\n        if (jsonMatch && jsonMatch[1] && jsonResponse.choices?.[0]?.message) {\n          this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} \u68C0\u6D4B\u5230JSON\u4EE3\u7801\u5757\uFF0C\u8FDB\u884C\u5185\u5BB9\u6E05\u6D17`, 'contentAnalysis');\n          jsonResponse.choices[0].message.content = jsonMatch[1];\n        } else {\n          this.log('debug', `${LOG_MARKERS.CONTENT_ANALYSIS} \u672A\u68C0\u6D4B\u5230JSON\u4EE3\u7801\u5757\uFF0C\u4FDD\u6301\u539F\u59CB\u5185\u5BB9`, 'contentAnalysis');\n        }\n      }\n      this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} JSON\u54CD\u5E94\u5904\u7406\u5B8C\u6210\uFF0C\u8FD4\u56DE\u5904\u7406\u540E\u7684\u54CD\u5E94`, 'responseProcessing');\n      return new Response(JSON.stringify(jsonResponse), {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n      });\n    }\n    // \u5176\u4ED6\u60C5\u51B5\u76F4\u63A5\u900F\u4F20\n    this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} \u975EJSON/\u975E\u6D41\u5F0F\u54CD\u5E94\uFF0C\u76F4\u63A5\u900F\u4F20`, 'responseProcessing');\n    return response;\n  }\n  \n  // \u5904\u7406JSON\u54CD\u5E94\u7684\u8F85\u52A9\u65B9\u6CD5\n  private handleJsonResponse(response: Response, jsonData: any): Response {\n    const LOG_PREFIX = ZjcspaceTransformer.LOG_PREFIX;\n    const LOG_MARKERS = {\n      RESPONSE_PROCESSING: `${LOG_PREFIX} \uD83D\uDD04 [RESPONSE-PROCESSING]`,\n      CONTENT_ANALYSIS: `${LOG_PREFIX} \uD83D\uDCCA [CONTENT-ANALYSIS]`,\n      ERROR: `${LOG_PREFIX} \u274C [ERROR]`,\n    };\n    \n    this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} \u5904\u7406JSON\u54CD\u5E94`, 'responseProcessing');\n    \n    // \u751F\u6210\u54CD\u5E94ID\u7528\u4E8E\u6301\u4E45\u5316\n    const responseId = `resp_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`;\n    \n    // \u6301\u4E45\u5316JSON\u54CD\u5E94\u5230debug\u76EE\u5F55\n    this.persistResponseBody(jsonData, responseId, response.status);\n    \n    // \u6DFB\u52A0\u989D\u5916\u7684\u5B89\u5168\u68C0\u67E5\n    if (!jsonData || !jsonData.choices || !Array.isArray(jsonData.choices) || jsonData.choices.length === 0) {\n      this.log('error', `${LOG_MARKERS.ERROR} JSON\u54CD\u5E94\u683C\u5F0F\u5F02\u5E38: choices \u5B57\u6BB5\u7F3A\u5931\u6216\u4E3A\u7A7A`, 'responseProcessing');\n      return response;\n    }\n    \n    this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} JSON\u54CD\u5E94\u683C\u5F0F\u6B63\u5E38 - choices\u6570\u91CF: ${jsonData.choices.length}`, 'contentAnalysis');\n    \n    const messageContent = jsonData.choices?.[0]?.message?.content;\n    this.log('debug', `${LOG_MARKERS.CONTENT_ANALYSIS} \u63D0\u53D6message content: ${typeof messageContent} - \u957F\u5EA6: ${typeof messageContent === 'string' ? messageContent.length : 'N/A'}`, 'contentAnalysis');\n    \n    if (typeof messageContent === 'string') {\n      const jsonMatch = messageContent.match(/```json\\n([\\s\\S]*?)\\n```/);\n      if (jsonMatch && jsonMatch[1] && jsonData.choices?.[0]?.message) {\n        this.log('info', `${LOG_MARKERS.CONTENT_ANALYSIS} \u68C0\u6D4B\u5230JSON\u4EE3\u7801\u5757\uFF0C\u8FDB\u884C\u5185\u5BB9\u6E05\u6D17`, 'contentAnalysis');\n        jsonData.choices[0].message.content = jsonMatch[1];\n      } else {\n        this.log('debug', `${LOG_MARKERS.CONTENT_ANALYSIS} \u672A\u68C0\u6D4B\u5230JSON\u4EE3\u7801\u5757\uFF0C\u4FDD\u6301\u539F\u59CB\u5185\u5BB9`, 'contentAnalysis');\n      }\n    }\n    \n    this.log('info', `${LOG_MARKERS.RESPONSE_PROCESSING} JSON\u54CD\u5E94\u5904\u7406\u5B8C\u6210\uFF0C\u8FD4\u56DE\u5904\u7406\u540E\u7684\u54CD\u5E94`, 'responseProcessing');\n    return new Response(JSON.stringify(jsonData), {\n      status: response.status,\n      statusText: response.statusText,\n      headers: response.headers,\n    });\n  }\n}\n\n/*\n\u4F7F\u7528\u793A\u4F8B\uFF1A\n\n// 1. \u9ED8\u8BA4\u914D\u7F6E\uFF08\u53EA\u8F93\u51FAinfo\u7EA7\u522B\u53CA\u4EE5\u4E0A\uFF0C\u5173\u95EDrawData\u548CchunkProcessing\uFF09\nconst transformer = new ZjcspaceTransformer();\n\n// 2. \u5F00\u53D1\u8C03\u8BD5\u6A21\u5F0F\uFF08\u8F93\u51FA\u6240\u6709\u65E5\u5FD7\uFF09\nconst debugTransformer = new ZjcspaceTransformer({\n  logLevel: 'verbose',\n  logCategories: {\n    rawData: true,\n    chunkProcessing: true\n  }\n});\n\n// 3. \u751F\u4EA7\u73AF\u5883\u6A21\u5F0F\uFF08\u53EA\u8F93\u51FA\u9519\u8BEF\u548C\u8B66\u544A\uFF09\nconst productionTransformer = new ZjcspaceTransformer({\n  logLevel: 'warn'\n});\n\n// 4. \u53EA\u5173\u6CE8\u7279\u5B9A\u7C7B\u578B\u7684\u65E5\u5FD7\nconst focusedTransformer = new ZjcspaceTransformer({\n  logLevel: 'debug',\n  logCategories: {\n    input: true,\n    tools: true,\n    messages: false,\n    requestBody: false,\n    responseProcessing: true,\n    streamProcessing: false,\n    contentAnalysis: true,\n    rawData: false,\n    chunkProcessing: false\n  }\n});\n\n// 5. \u5B8C\u5168\u5173\u95ED\u65E5\u5FD7\nconst silentTransformer = new ZjcspaceTransformer({\n  logLevel: 'none'\n});\n\n\u65E5\u5FD7\u7EA7\u522B\u8BF4\u660E\uFF1A\n- none: \u4E0D\u8F93\u51FA\u4EFB\u4F55\u65E5\u5FD7\n- error: \u53EA\u8F93\u51FA\u9519\u8BEF\u65E5\u5FD7\n- warn: \u8F93\u51FA\u8B66\u544A\u548C\u9519\u8BEF\u65E5\u5FD7\n- info: \u8F93\u51FA\u4FE1\u606F\u3001\u8B66\u544A\u548C\u9519\u8BEF\u65E5\u5FD7\uFF08\u9ED8\u8BA4\uFF09\n- debug: \u8F93\u51FA\u8C03\u8BD5\u3001\u4FE1\u606F\u3001\u8B66\u544A\u548C\u9519\u8BEF\u65E5\u5FD7\n- verbose: \u8F93\u51FA\u6240\u6709\u65E5\u5FD7\n\n\u65E5\u5FD7\u5206\u7C7B\u8BF4\u660E\uFF1A\n- input: \u8F93\u5165\u9A8C\u8BC1\u76F8\u5173\u65E5\u5FD7\n- fieldCleanup: \u5B57\u6BB5\u6E05\u7406\u76F8\u5173\u65E5\u5FD7\n- tools: \u5DE5\u5177\u5904\u7406\u76F8\u5173\u65E5\u5FD7\n- messages: \u6D88\u606F\u5904\u7406\u76F8\u5173\u65E5\u5FD7\n- requestBody: \u8BF7\u6C42\u4F53\u6784\u5EFA\u76F8\u5173\u65E5\u5FD7\n- responseProcessing: \u54CD\u5E94\u5904\u7406\u76F8\u5173\u65E5\u5FD7\n- streamProcessing: \u6D41\u5F0F\u5904\u7406\u76F8\u5173\u65E5\u5FD7\n- contentAnalysis: \u5185\u5BB9\u5206\u6790\u76F8\u5173\u65E5\u5FD7\n- rawData: \u539F\u59CB\u6570\u636E\u65E5\u5FD7\uFF08\u6570\u636E\u91CF\u5927\uFF0C\u9ED8\u8BA4\u5173\u95ED\uFF09\n- chunkProcessing: chunk\u5904\u7406\u65E5\u5FD7\uFF08\u6570\u91CF\u591A\uFF0C\u9ED8\u8BA4\u5173\u95ED\uFF09\n*/", "import { AnthropicTransformer } from \"./anthropic.transformer\";\nimport { GeminiTransformer } from \"./gemini.transformer\";\nimport { GeminiProTransformer } from \"./gemini-pro.transformer\";\nimport { DeepseekTransformer } from \"./deepseek.transformer\";\nimport { TooluseTransformer } from \"./tooluse.transformer\";\nimport { OpenrouterTransformer } from \"./openrouter.transformer\";\nimport { OpenAITransformer } from \"./openai.transformer\";\nimport { NewAPITransformer } from \"./newapi.transformer\";\nimport { GeminiNativeTransformer } from './gemini-native.transformer';\nimport { ZjcspaceProTransformer } from './zjcspace-pro.transformer';\nimport { ZjcspaceTransformer } from './zjcspace.transformer';\n\nexport const transformers = [\n  new OpenrouterTransformer(),\n  new DeepseekTransformer(),\n  new GeminiTransformer(),\n  new GeminiProTransformer(),\n  new NewAPITransformer(),\n  new OpenAITransformer(),\n  new GeminiNativeTransformer(),\n  new ZjcspaceTransformer(),\n  new ZjcspaceProTransformer(),\n];\n\nexport {\n  AnthropicTransformer,\n  GeminiTransformer,\n  GeminiProTransformer,\n  DeepseekTransformer,\n  TooluseTransformer,\n  OpenrouterTransformer,\n  OpenAITransformer,\n  NewAPITransformer,\n  GeminiNativeTransformer,\n  ZjcspaceTransformer,\n  ZjcspaceProTransformer,\n};", "import { Transformer } from \"@/types/transformer\";\nimport { log } from \"@/utils/log\";\nimport { ConfigService } from \"./config\";\nimport {\n  AnthropicTransformer,\n  GeminiTransformer,\n  GeminiProTransformer,\n  DeepseekTransformer,\n  TooluseTransformer,\n  OpenrouterTransformer,\n  OpenAITransformer,\n  NewAPITransformer,\n  GeminiNativeTransformer,\n  ZjcspaceTransformer,\n  ZjcspaceProTransformer,\n} from \"@/transformer\";\n\ninterface TransformerConfig {\n  transformers: Array<{\n    name: string;\n    type: \"class\" | \"module\";\n    path?: string;\n    options?: any;\n  }>;\n}\n\nexport class TransformerService {\n  private transformers: Map<string, Transformer> = new Map();\n\n  constructor(private readonly configService: ConfigService) {\n    this.initialize();\n  }\n\n  registerTransformer(name: string, transformer: Transformer): void {\n    this.transformers.set(name, transformer);\n    log(\n      `register transformer: ${name}${\n        transformer.endPoint\n          ? ` (endpoint: ${transformer.endPoint})`\n          : \" (no endpoint)\"\n      }`\n    );\n  }\n\n  getTransformer(name: string): Transformer | undefined {\n    return this.transformers.get(name);\n  }\n\n  getAllTransformers(): Map<string, Transformer> {\n    return new Map(this.transformers);\n  }\n\n  getTransformersWithEndpoint(): { name: string; transformer: Transformer }[] {\n    const result: { name: string; transformer: Transformer }[] = [];\n\n    this.transformers.forEach((transformer, name) => {\n      if (transformer.endPoint) {\n        result.push({ name, transformer });\n      }\n    });\n\n    return result;\n  }\n\n  getTransformersWithoutEndpoint(): {\n    name: string;\n    transformer: Transformer;\n  }[] {\n    const result: { name: string; transformer: Transformer }[] = [];\n\n    this.transformers.forEach((transformer, name) => {\n      if (!transformer.endPoint) {\n        result.push({ name, transformer });\n      }\n    });\n\n    return result;\n  }\n\n  removeTransformer(name: string): boolean {\n    return this.transformers.delete(name);\n  }\n\n  hasTransformer(name: string): boolean {\n    return this.transformers.has(name);\n  }\n\n  async registerTransformerFromConfig(config: {\n    path?: string;\n    options?: any;\n  }): Promise<boolean> {\n    try {\n      if (config.path) {\n        const module = require(config.path);\n        if (module) {\n          const instance = new module(config.options);\n          if (!instance.name) {\n            throw new Error(\n              `Transformer instance from ${config.path} does not have a name property.`\n            );\n          }\n          this.registerTransformer(instance.name, instance);\n          return true;\n        }\n      }\n      return false;\n    } catch (error) {\n      log(`load transformer (${config.path}):`, error);\n      return false;\n    }\n  }\n\n  private async initialize(): Promise<void> {\n    try {\n      await this.registerDefaultTransformersInternal();\n      await this.loadFromConfig();\n    } catch (error) {\n      log(\"TransformerService init error:\", error);\n    }\n  }\n\n  private async registerDefaultTransformersInternal(): Promise<void> {\n    try {\n      const anthropic = new AnthropicTransformer();\n      const gemini = new GeminiTransformer();\n      const geminiPro = new GeminiProTransformer();\n      const deepseek = new DeepseekTransformer();\n      const tooluse = new TooluseTransformer();\n      const openrouter = new OpenrouterTransformer();\n      const openai = new OpenAITransformer();\n      const newapi = new NewAPITransformer();\n      const geminiNative = new GeminiNativeTransformer();\n      // \u521B\u5EFA\u8C03\u8BD5\u7248\u672C\u7684zjcspace transformer\n      const zjcspace = new ZjcspaceTransformer({\n        logLevel: 'verbose',\n        logCategories: {\n          rawData: true,\n          chunkProcessing: true\n        }\n      });\n      const zjcspacePro = new ZjcspaceProTransformer();\n\n      this.registerTransformer(anthropic.name, anthropic);\n      this.registerTransformer(gemini.name, gemini);\n      this.registerTransformer(geminiPro.name, geminiPro);\n      this.registerTransformer(deepseek.name, deepseek);\n      this.registerTransformer(tooluse.name, tooluse);\n      this.registerTransformer(openrouter.name, openrouter);\n      this.registerTransformer(openai.name, openai);\n      this.registerTransformer(newapi.name, newapi);\n      this.registerTransformer(geminiNative.name, geminiNative);\n      this.registerTransformer(zjcspace.name, zjcspace);\n      this.registerTransformer(zjcspacePro.name, zjcspacePro);\n    } catch (error) {\n      log(\"transformer regist error:\", error);\n    }\n  }\n\n  private async loadFromConfig(): Promise<void> {\n    const transformers = this.configService.get<\n      TransformerConfig[\"transformers\"]\n    >(\"transformers\", []);\n    for (const transformer of transformers) {\n      await this.registerTransformerFromConfig(transformer);\n    }\n  }\n}\n", "import { UnifiedChatRequest, UnifiedMessage } from \"../types/llm\";\nimport { log } from \"../utils/log\";\nimport { FastifyReply } from \"fastify\";\nimport { sendUnifiedRequest } from \"../utils/request\";\n\ninterface PendingRequest {\n  id: string;\n  request: UnifiedChatRequest;\n  reply: FastifyReply;\n  timestamp: number;\n  resolved: boolean;\n  config: any;\n  url: string;\n}\n\ninterface MergedRequest {\n  baseRequest: UnifiedChatRequest;\n  subRequests: Array<{\n    id: string;\n    startIndex: number;\n    endIndex: number;\n    originalMessages: UnifiedMessage[];\n  }>;\n}\n\n/**\n * \u8BF7\u6C42\u5408\u5E76\u5668 - \u667A\u80FD\u5408\u5E76\u591A\u4E2A\u8BF7\u6C42\u4EE5\u8282\u7701token\n * \n * \u6838\u5FC3\u7B56\u7565\uFF1A\n * 1. \u6536\u96C6\u77ED\u65F6\u95F4\u5185\u7684\u591A\u4E2A\u8BF7\u6C42\n * 2. \u68C0\u6D4B\u76F8\u540C\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\u548C\u4E0A\u4E0B\u6587\n * 3. \u5C06\u591A\u4E2A\u5BF9\u8BDD\u5408\u5E76\u6210\u4E00\u4E2A\u5927\u8BF7\u6C42\n * 4. \u89E3\u6790\u54CD\u5E94\u540E\u5206\u53D1\u7ED9\u5404\u4E2A\u5BA2\u6237\u7AEF\n */\nexport class RequestMergerService {\n  private pendingRequests = new Map<string, PendingRequest>();\n  private mergeWindow = 2000; // 2\u79D2\u5408\u5E76\u7A97\u53E3\n  private maxMergeSize = 5; // \u6700\u5927\u5408\u5E76\u8BF7\u6C42\u6570\u91CF\n  private mergeTimer: NodeJS.Timeout | null = null;\n\n  constructor() {\n    log(\"\uD83D\uDD04 \u8BF7\u6C42\u5408\u5E76\u5668\u5DF2\u542F\u52A8\uFF0C\u5408\u5E76\u7A97\u53E3: 2\u79D2, \u6700\u5927\u5408\u5E76\u6570: 5\");\n  }\n\n  /**\n   * \u6DFB\u52A0\u5F85\u5904\u7406\u8BF7\u6C42\n   */\n  addRequest(\n    id: string,\n    request: UnifiedChatRequest,\n    reply: FastifyReply,\n    config: any,\n    url: string\n  ): void {\n    const pendingRequest: PendingRequest = {\n      id,\n      request,\n      reply,\n      timestamp: Date.now(),\n      resolved: false,\n      config,\n      url,\n    };\n\n    this.pendingRequests.set(id, pendingRequest);\n    log(`\uD83D\uDCE5 \u6536\u5230\u8BF7\u6C42 ${id}\uFF0C\u5F53\u524D\u961F\u5217\u957F\u5EA6: ${this.pendingRequests.size}`);\n\n    // \u5982\u679C\u8FBE\u5230\u6700\u5927\u5408\u5E76\u6570\u91CF\uFF0C\u7ACB\u5373\u5904\u7406\n    if (this.pendingRequests.size >= this.maxMergeSize) {\n      log(`\uD83D\uDE80 \u8FBE\u5230\u6700\u5927\u5408\u5E76\u6570\u91CF(${this.maxMergeSize})\uFF0C\u7ACB\u5373\u5904\u7406`);\n      this.processPendingRequests();\n      return;\n    }\n\n    // \u8BBE\u7F6E\u5408\u5E76\u5B9A\u65F6\u5668\n    if (this.mergeTimer) {\n      clearTimeout(this.mergeTimer);\n    }\n    \n    this.mergeTimer = setTimeout(() => {\n      this.processPendingRequests();\n    }, this.mergeWindow);\n  }\n\n  /**\n   * \u5904\u7406\u6240\u6709\u5F85\u5904\u7406\u8BF7\u6C42\n   */\n  private async processPendingRequests(): Promise<void> {\n    if (this.pendingRequests.size === 0) return;\n\n    const requests = Array.from(this.pendingRequests.values());\n    this.pendingRequests.clear();\n\n    if (this.mergeTimer) {\n      clearTimeout(this.mergeTimer);\n      this.mergeTimer = null;\n    }\n\n    log(`\uD83D\uDD04 \u5F00\u59CB\u5904\u7406 ${requests.length} \u4E2A\u5F85\u5904\u7406\u8BF7\u6C42`);\n\n    // \u6309\u63D0\u4F9B\u5546\u548C\u6A21\u578B\u5206\u7EC4\n    const groups = this.groupRequestsByProvider(requests);\n\n    // \u5E76\u884C\u5904\u7406\u6BCF\u4E2A\u7EC4\n    const processingPromises = groups.map(group => this.processGroup(group));\n    await Promise.all(processingPromises);\n  }\n\n  /**\n   * \u6309\u63D0\u4F9B\u5546\u548C\u6A21\u578B\u5206\u7EC4\u8BF7\u6C42\n   */\n  private groupRequestsByProvider(requests: PendingRequest[]): PendingRequest[][] {\n    const groups = new Map<string, PendingRequest[]>();\n\n    for (const request of requests) {\n      const key = `${request.url}_${request.request.model}`;\n      if (!groups.has(key)) {\n        groups.set(key, []);\n      }\n      groups.get(key)!.push(request);\n    }\n\n    return Array.from(groups.values());\n  }\n\n  /**\n   * \u5904\u7406\u5355\u4E2A\u7EC4\u7684\u8BF7\u6C42\n   */\n  private async processGroup(requests: PendingRequest[]): Promise<void> {\n    if (requests.length === 1) {\n      // \u5355\u4E2A\u8BF7\u6C42\uFF0C\u76F4\u63A5\u53D1\u9001\n      await this.processSingleRequest(requests[0]);\n      return;\n    }\n\n    log(`\uD83D\uDD00 \u5408\u5E76\u5904\u7406 ${requests.length} \u4E2A\u76F8\u540C\u63D0\u4F9B\u5546\u7684\u8BF7\u6C42`);\n    \n    // \u68C0\u67E5\u662F\u5426\u53EF\u4EE5\u5408\u5E76\n    const mergeResult = this.attemptMerge(requests);\n    \n    if (mergeResult) {\n      // \u53EF\u4EE5\u5408\u5E76\uFF0C\u53D1\u9001\u5408\u5E76\u8BF7\u6C42\n      await this.processMergedRequest(mergeResult, requests);\n    } else {\n      // \u65E0\u6CD5\u5408\u5E76\uFF0C\u5355\u72EC\u5904\u7406\n      log(`\u26A0\uFE0F  \u65E0\u6CD5\u5408\u5E76\u8BF7\u6C42\uFF0C\u5C06\u5355\u72EC\u5904\u7406`);\n      const processingPromises = requests.map(req => this.processSingleRequest(req));\n      await Promise.all(processingPromises);\n    }\n  }\n\n  /**\n   * \u5C1D\u8BD5\u5408\u5E76\u8BF7\u6C42\n   */\n  private attemptMerge(requests: PendingRequest[]): MergedRequest | null {\n    // \u68C0\u67E5\u662F\u5426\u5177\u6709\u76F8\u540C\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\u548C\u57FA\u7840\u914D\u7F6E\n    const firstRequest = requests[0].request;\n    const baseSystemMessages = this.extractSystemMessages(firstRequest.messages);\n    \n    // \u68C0\u67E5\u6240\u6709\u8BF7\u6C42\u662F\u5426\u5177\u6709\u76F8\u540C\u7684\u7CFB\u7EDF\u63D0\u793A\u8BCD\n    const canMerge = requests.every(req => {\n      const systemMessages = this.extractSystemMessages(req.request.messages);\n      return this.messagesEqual(baseSystemMessages, systemMessages);\n    });\n\n    if (!canMerge) {\n      return null;\n    }\n\n    // \u521B\u5EFA\u5408\u5E76\u8BF7\u6C42\n    const mergedMessages: UnifiedMessage[] = [...baseSystemMessages];\n    const subRequests = [];\n\n    for (const request of requests) {\n      const userMessages = this.extractUserMessages(request.request.messages);\n      const startIndex = mergedMessages.length;\n      \n      // \u6DFB\u52A0\u5206\u9694\u7B26\n      mergedMessages.push({\n        role: \"user\",\n        content: `--- \u8BF7\u6C42 ${request.id} \u5F00\u59CB ---`\n      });\n      \n      // \u6DFB\u52A0\u7528\u6237\u6D88\u606F\n      mergedMessages.push(...userMessages);\n      \n      // \u6DFB\u52A0\u7ED3\u675F\u5206\u9694\u7B26\n      mergedMessages.push({\n        role: \"user\", \n        content: `--- \u8BF7\u6C42 ${request.id} \u7ED3\u675F ---`\n      });\n\n      const endIndex = mergedMessages.length - 1;\n      \n      subRequests.push({\n        id: request.id,\n        startIndex,\n        endIndex,\n        originalMessages: userMessages\n      });\n    }\n\n    const mergedRequest: UnifiedChatRequest = {\n      ...firstRequest,\n      messages: mergedMessages,\n      // \u5408\u5E76\u8BF7\u6C42\u9700\u8981\u66F4\u591A\u7684tokens\n      max_tokens: Math.min(\n        (firstRequest.max_tokens || 4096) * requests.length,\n        16384\n      )\n    };\n\n    log(`\u2705 \u6210\u529F\u5408\u5E76 ${requests.length} \u4E2A\u8BF7\u6C42\uFF0C\u603B\u6D88\u606F\u6570: ${mergedMessages.length}`);\n    \n    return {\n      baseRequest: mergedRequest,\n      subRequests\n    };\n  }\n\n  /**\n   * \u5904\u7406\u5408\u5E76\u8BF7\u6C42\n   */\n  private async processMergedRequest(\n    mergeResult: MergedRequest,\n    originalRequests: PendingRequest[]\n  ): Promise<void> {\n    try {\n      const config = originalRequests[0].config;\n      const url = originalRequests[0].url;\n      \n      log(`\uD83D\uDE80 \u53D1\u9001\u5408\u5E76\u8BF7\u6C42\uFF0C\u5305\u542B ${mergeResult.subRequests.length} \u4E2A\u5B50\u8BF7\u6C42`);\n      \n      const response = await sendUnifiedRequest(url, mergeResult.baseRequest, config);\n      \n      if (!response.ok) {\n        throw new Error(`\u5408\u5E76\u8BF7\u6C42\u5931\u8D25: ${response.status} ${response.statusText}`);\n      }\n\n      // \u5904\u7406\u54CD\u5E94\n      if (mergeResult.baseRequest.stream) {\n        await this.handleMergedStreamResponse(response, mergeResult, originalRequests);\n      } else {\n        await this.handleMergedResponse(response, mergeResult, originalRequests);\n      }\n      \n    } catch (error: any) {\n      log(`\u274C \u5408\u5E76\u8BF7\u6C42\u5904\u7406\u5931\u8D25: ${error.message}`);\n      \n      // \u5931\u8D25\u65F6\u5355\u72EC\u5904\u7406\u6BCF\u4E2A\u8BF7\u6C42\n      const processingPromises = originalRequests.map(req => this.processSingleRequest(req));\n      await Promise.all(processingPromises);\n    }\n  }\n\n  /**\n   * \u5904\u7406\u5408\u5E76\u7684\u975E\u6D41\u5F0F\u54CD\u5E94\n   */\n  private async handleMergedResponse(\n    response: Response,\n    mergeResult: MergedRequest,\n    originalRequests: PendingRequest[]\n  ): Promise<void> {\n    const data = await response.json();\n    const fullContent = data.choices?.[0]?.message?.content || \"\";\n    \n    // \u6309\u5206\u9694\u7B26\u5206\u5272\u54CD\u5E94\n    const responses = this.splitMergedResponse(fullContent, mergeResult.subRequests);\n    \n    // \u5206\u53D1\u54CD\u5E94\u7ED9\u5404\u4E2A\u5BA2\u6237\u7AEF\n    for (let i = 0; i < originalRequests.length; i++) {\n      const request = originalRequests[i];\n      const subResponse = responses[i] || \"\u5904\u7406\u5931\u8D25\";\n      \n      const responseData = {\n        ...data,\n        choices: [{\n          ...data.choices[0],\n          message: {\n            ...data.choices[0].message,\n            content: subResponse\n          }\n        }]\n      };\n      \n      request.reply.send(responseData);\n      log(`\uD83D\uDCE4 \u5DF2\u53D1\u9001\u54CD\u5E94\u7ED9\u8BF7\u6C42 ${request.id}`);\n    }\n  }\n\n  /**\n   * \u5904\u7406\u5408\u5E76\u7684\u6D41\u5F0F\u54CD\u5E94\n   */\n  private async handleMergedStreamResponse(\n    response: Response,\n    mergeResult: MergedRequest,\n    originalRequests: PendingRequest[]\n  ): Promise<void> {\n    // \u6D41\u5F0F\u54CD\u5E94\u66F4\u590D\u6742\uFF0C\u9700\u8981\u5B9E\u65F6\u89E3\u6790\u548C\u5206\u53D1\n    // \u76EE\u524D\u5148\u7B80\u5316\u5904\u7406\uFF0C\u540E\u7EED\u53EF\u4EE5\u4F18\u5316\n    log(`\u26A0\uFE0F  \u5408\u5E76\u6D41\u5F0F\u54CD\u5E94\u5904\u7406\u8F83\u590D\u6742\uFF0C\u6682\u65F6\u5355\u72EC\u5904\u7406`);\n    \n    // \u5355\u72EC\u5904\u7406\u6BCF\u4E2A\u8BF7\u6C42\n    const processingPromises = originalRequests.map(req => this.processSingleRequest(req));\n    await Promise.all(processingPromises);\n  }\n\n  /**\n   * \u5904\u7406\u5355\u4E2A\u8BF7\u6C42\n   */\n  private async processSingleRequest(request: PendingRequest): Promise<void> {\n    try {\n      log(`\uD83D\uDD04 \u5355\u72EC\u5904\u7406\u8BF7\u6C42 ${request.id}`);\n      \n      const response = await sendUnifiedRequest(request.url, request.request, request.config);\n      \n      if (!response.ok) {\n        throw new Error(`\u8BF7\u6C42\u5931\u8D25: ${response.status} ${response.statusText}`);\n      }\n\n      // \u8F6C\u53D1\u54CD\u5E94\n      if (request.request.stream) {\n        request.reply.header(\"Content-Type\", \"text/event-stream\");\n        request.reply.header(\"Cache-Control\", \"no-cache\");\n        request.reply.header(\"Connection\", \"keep-alive\");\n        request.reply.send(response.body);\n      } else {\n        const data = await response.json();\n        request.reply.send(data);\n      }\n      \n      log(`\u2705 \u8BF7\u6C42 ${request.id} \u5904\u7406\u5B8C\u6210`);\n      \n    } catch (error: any) {\n      log(`\u274C \u8BF7\u6C42 ${request.id} \u5904\u7406\u5931\u8D25: ${error.message}`);\n      request.reply.code(500).send({ error: error.message });\n    }\n  }\n\n  /**\n   * \u63D0\u53D6\u7CFB\u7EDF\u6D88\u606F\n   */\n  private extractSystemMessages(messages: UnifiedMessage[]): UnifiedMessage[] {\n    return messages.filter(msg => msg.role === \"system\");\n  }\n\n  /**\n   * \u63D0\u53D6\u7528\u6237\u6D88\u606F\n   */\n  private extractUserMessages(messages: UnifiedMessage[]): UnifiedMessage[] {\n    return messages.filter(msg => msg.role !== \"system\");\n  }\n\n  /**\n   * \u6BD4\u8F83\u6D88\u606F\u662F\u5426\u76F8\u7B49\n   */\n  private messagesEqual(messages1: UnifiedMessage[], messages2: UnifiedMessage[]): boolean {\n    if (messages1.length !== messages2.length) return false;\n    \n    for (let i = 0; i < messages1.length; i++) {\n      const msg1 = messages1[i];\n      const msg2 = messages2[i];\n      \n      if (msg1.role !== msg2.role || msg1.content !== msg2.content) {\n        return false;\n      }\n    }\n    \n    return true;\n  }\n\n  /**\n   * \u5206\u5272\u5408\u5E76\u54CD\u5E94\n   */\n  private splitMergedResponse(fullContent: string, subRequests: any[]): string[] {\n    const responses: string[] = [];\n    \n    for (const subRequest of subRequests) {\n      const startMarker = `--- \u8BF7\u6C42 ${subRequest.id} \u5F00\u59CB ---`;\n      const endMarker = `--- \u8BF7\u6C42 ${subRequest.id} \u7ED3\u675F ---`;\n      \n      const startIndex = fullContent.indexOf(startMarker);\n      const endIndex = fullContent.indexOf(endMarker);\n      \n      if (startIndex !== -1 && endIndex !== -1) {\n        const responseContent = fullContent.substring(\n          startIndex + startMarker.length,\n          endIndex\n        ).trim();\n        responses.push(responseContent);\n      } else {\n        responses.push(\"\"); // \u5982\u679C\u627E\u4E0D\u5230\u5206\u9694\u7B26\uFF0C\u8FD4\u56DE\u7A7A\u54CD\u5E94\n      }\n    }\n    \n    return responses;\n  }\n\n  /**\n   * \u83B7\u53D6\u7EDF\u8BA1\u4FE1\u606F\n   */\n  getStats() {\n    return {\n      pendingRequests: this.pendingRequests.size,\n      mergeWindow: this.mergeWindow,\n      maxMergeSize: this.maxMergeSize\n    };\n  }\n} "],
  "mappings": "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",
  "names": ["Fastify", "cors", "readFileSync", "existsSync", "join", "config", "projectRoot", "ConfigService", "options", "jsonPath", "jsonContent", "jsonConfig", "error", "envPath", "result", "envConfig", "env", "parsed", "path", "key", "defaultValue", "value", "summary", "fs", "log", "args", "logMessage", "arg", "LOG_FILE", "createApiError", "message", "statusCode", "code", "type", "error", "errorHandler", "request", "reply", "response", "ProxyAgent", "sendUnifiedRequest", "url", "request", "config", "headers", "key", "value", "combinedSignal", "timeoutSignal", "controller", "abortHandler", "fetchOptions", "registerApiRoutes", "fastify", "request", "reply", "transformersWithEndpoint", "name", "transformer", "req", "body", "providerNmae", "provider", "createApiError", "requestBody", "config", "transformOut", "transformerName", "transformIn", "url", "response", "sendUnifiedRequest", "errorText", "log", "finalResponse", "type", "baseUrl", "apiKey", "models", "isValidUrl", "LLMService", "providerService", "request", "id", "updates", "enabled", "modelName", "route", "provider", "model", "ProviderService", "configService", "providersConfig", "providerConfig", "log", "error", "request", "provider", "model", "fullModel", "route", "name", "id", "updates", "updatedProvider", "enabled", "modelName", "modelNames", "transformerConfig", "acc", "item", "config", "models", "AnthropicTransformer", "request", "log", "messages", "textParts", "item", "msg", "index", "toolParts", "c", "tool", "toolIndex", "toolMessage", "text", "toolCallParts", "response", "isStream", "convertedStream", "data", "anthropicResponse", "tools", "openaiStream", "controller", "encoder", "messageId", "model", "hasStarted", "hasTextContentStarted", "hasFinished", "toolCalls", "toolCallIndexToContentBlockIndex", "totalChunks", "contentChunks", "toolCallChunks", "isClosed", "isThinkingStarted", "contentIndex", "collectedText", "final_usage", "safeEnqueue", "error", "safeClose", "reader", "decoder", "buffer", "done", "value", "lines", "line", "chunk", "messageStart", "choice", "contentBlockStart", "thinkingSignature", "contentBlockStop", "thinkingChunk", "anthropicChunk", "processedInThisChunk", "toolCall", "toolCallIndex", "newContentBlockIndex", "toolCallId", "toolCallName", "toolCallInfo", "existingToolCall", "currentToolCall", "trimmedArgs", "e", "fixedArgument", "fixedChunk", "fixError", "messageDelta", "messageStop", "finalResponse", "parseError", "controllerError", "releaseError", "reason", "openaiResponse", "content", "parsedInput", "argumentsStr", "result", "GeminiTransformer", "request", "provider", "message", "role", "parts", "content", "toolCall", "tool", "key", "contents", "tools", "model", "max_tokens", "temperature", "stream", "tool_choice", "unifiedChatRequest", "part", "response", "jsonResponse", "tool_calls", "res", "decoder", "encoder", "controller", "reader", "done", "value", "chunk", "error", "GeminiProTransformer", "request", "provider", "message", "role", "parts", "content", "part", "toolCall", "args", "error", "log", "tool", "cleanedTool", "key", "prop", "cleanedProp", "paramCount", "contents", "tools", "model", "max_tokens", "temperature", "stream", "tool_choice", "unifiedChatRequest", "toolCalls", "funcDecl", "response", "errorText", "rawResponseText", "jsonResponse", "candidate", "errorRes", "tool_calls", "argsString", "res", "decoder", "encoder", "controller", "reader", "buffer", "usageMetadata", "done", "value", "finalRes", "finalChunk", "boundary", "messageString", "jsonStr", "chunk", "parseError", "finalError", "DeepseekTransformer", "request", "response", "jsonResponse", "decoder", "encoder", "reasoningContent", "isReasoningComplete", "stream", "controller", "reader", "done", "value", "lines", "line", "data", "thinkingChunk", "thinkingLine", "signature", "modifiedLine", "error", "e", "TooluseTransformer", "request", "response", "jsonResponse", "toolCall", "toolArguments", "decoder", "encoder", "exitToolIndex", "exitToolResponse", "stream", "controller", "reader", "done", "value", "lines", "line", "data", "modifiedLine", "error", "e", "OpenrouterTransformer", "request", "msg", "item", "response", "jsonResponse", "decoder", "encoder", "hasTextContent", "reasoningContent", "isReasoningComplete", "stream", "controller", "reader", "done", "value", "lines", "line", "data", "thinkingChunk", "thinkingLine", "signature", "modifiedLine", "error", "e", "OpenAITransformer", "request", "log", "response", "responseClone", "responseBody", "error", "textBody", "NewAPIToolCleaner", "tools", "tool", "cleanedTool", "schema", "key", "subSchema", "property", "log", "error", "obj", "incompatibleFields", "field", "NEWAPI_VERSION", "SAFE_CONFIG", "LOG_PREFIX", "LOG_MARKERS", "NewAPITransformer", "request", "provider", "log", "transformedRequest", "NewAPIToolCleaner", "hasThinking", "toolCount", "response", "decoder", "encoder", "stream", "controller", "chunkCounter", "reasoningAccumulator", "isReasoningCompleted", "hasTextContent", "reader", "done", "value", "lines", "line", "data", "delta", "finalLine", "e", "error", "jsonResponse", "reasoning", "fixedRequest", "messages", "messageStats", "msg", "i", "role", "count", "assistantIndices", "fixedCount", "index", "original", "fixed", "content", "messageIndex", "block", "model", "hasThinkingInName", "isClaude4ThinkingModel", "isGeminiProThinkingModel", "isThinking", "GEMINI_NATIVE_VERSION", "LOG_PREFIX", "LOG_MARKERS", "GeminiNativeTransformer", "request", "provider", "log", "geminiRequest", "t", "removeSchema", "response", "geminiJson", "unifiedJson", "e", "responseText", "messages", "geminiMessages", "systemContent", "otherMessages", "msg", "c", "index", "role", "parts", "isFirstUserMessage", "userContent", "m", "toolCall", "toolName", "responseContent", "responseBody", "decoder", "encoder", "buffer", "controller", "reader", "processBuffer", "lines", "line", "jsonStr", "geminiChunk", "unifiedChunk", "message", "done", "value", "context", "candidate", "delta", "toolCalls", "textContent", "part", "finishReason", "usageMetadata", "obj", "ZjcspaceProTransformer", "_ZjcspaceProTransformer", "request", "provider", "LOG_PREFIX", "LOG_MARKERS", "allowedTop", "allowedMsg", "strictCleanMessages", "messages", "msg", "cleanedMsg", "k", "requestBody", "key", "headers", "log", "response", "headersObj", "value", "decoder", "encoder", "stream", "controller", "reader", "buffer", "braceCount", "jsonStartIndex", "done", "finalChunk", "e", "cursor", "char", "jsonString", "jsonData", "chunkToSend", "error", "fs", "path", "ZjcspaceTransformer", "_ZjcspaceTransformer", "options", "level", "category", "message", "log", "requestBody", "requestId", "debugDir", "timestamp", "filename", "filepath", "debugData", "error", "responseBody", "status", "request", "provider", "LOG_PREFIX", "LOG_MARKERS", "allowedTop", "allowedMsg", "allowedTool", "allowedFn", "allowedParam", "removedFields", "addedFields", "strictCleanParameters", "params", "cleaned", "k", "pk", "strictCleanTools", "tools", "tool", "idx", "fn", "cleanedFn", "f", "strictCleanMessages", "messages", "cleanContent", "content", "cleanedContent", "originalLength", "cleanupStats", "nestedImagePattern", "nestedImageMatches", "incompleteLinkPattern", "incompleteLinkMatches", "missingOpenBracketPattern", "openBrackets", "closeBrackets", "openParens", "closeParens", "windowsPathPattern", "windowsPathMatches", "urlPattern", "invalidUrlCount", "match", "text", "url", "maxContentLength", "malformedImagePattern", "alt", "src", "reduction", "totalFixes", "sum", "count", "msg", "cleanedMsg", "deepStrictClean", "obj", "v", "cleanedMessages", "rawStrict", "cleanedBody", "headers", "response", "responseId", "headersObj", "value", "key", "contentType", "jsonData", "e", "decoder", "encoder", "chunkIndex", "transformer", "stream", "controller", "reader", "done", "chunk", "lines", "line", "data", "res", "jsonResponse", "messageContent", "jsonMatch", "transformers", "OpenrouterTransformer", "DeepseekTransformer", "GeminiTransformer", "GeminiProTransformer", "NewAPITransformer", "OpenAITransformer", "GeminiNativeTransformer", "ZjcspaceTransformer", "ZjcspaceProTransformer", "TransformerService", "configService", "name", "transformer", "log", "result", "config", "module", "__require", "instance", "error", "anthropic", "AnthropicTransformer", "gemini", "GeminiTransformer", "geminiPro", "GeminiProTransformer", "deepseek", "DeepseekTransformer", "tooluse", "TooluseTransformer", "openrouter", "OpenrouterTransformer", "openai", "OpenAITransformer", "newapi", "NewAPITransformer", "geminiNative", "GeminiNativeTransformer", "zjcspace", "ZjcspaceTransformer", "zjcspacePro", "ZjcspaceProTransformer", "transformers", "RequestMergerService", "log", "id", "request", "reply", "config", "url", "pendingRequest", "requests", "processingPromises", "group", "groups", "key", "mergeResult", "req", "firstRequest", "baseSystemMessages", "systemMessages", "mergedMessages", "subRequests", "userMessages", "startIndex", "endIndex", "mergedRequest", "originalRequests", "response", "sendUnifiedRequest", "error", "data", "fullContent", "responses", "i", "subResponse", "responseData", "messages", "msg", "messages1", "messages2", "msg1", "msg2", "subRequest", "startMarker", "endMarker", "responseContent", "createApp", "fastify", "Fastify", "errorHandler", "cors", "Server", "options", "ConfigService", "ProviderService", "LLMService", "TransformerService", "RequestMergerService", "plugin", "hookName", "hookFunction", "req", "reply", "body", "provider", "model", "err", "registerApiRoutes", "address", "log", "shutdown", "signal", "error", "server_default"]
}
